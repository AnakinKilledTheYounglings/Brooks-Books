{"ast":null,"code":"// frontend/src/services/etymologyAPI.js\n\n// This will be your interface to whatever external API you choose later\nexport class EtymologyAPI {\n  constructor(apiKey = null) {\n    this.apiKey = apiKey;\n    this.baseUrl = process.env.REACT_APP_ETYMOLOGY_API_URL || 'default_url';\n  }\n  async getWordEtymology(word) {\n    // This is where you'll implement the actual API call later\n    try {\n      // For now, return null to fall back to local data\n      return null;\n\n      // Later, you'll implement something like:\n      // const response = await fetch(`${this.baseUrl}/etymology/${word}`, {\n      //   headers: {\n      //     'Authorization': `Bearer ${this.apiKey}`,\n      //   }\n      // });\n      // return await response.json();\n    } catch (error) {\n      console.error('Etymology API error:', error);\n      return null;\n    }\n  }\n}\n\n// Create a singleton instance\nexport const etymologyAPI = new EtymologyAPI();","map":{"version":3,"names":["EtymologyAPI","constructor","apiKey","baseUrl","process","env","REACT_APP_ETYMOLOGY_API_URL","getWordEtymology","word","error","console","etymologyAPI"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/services/etymologyAPI.js"],"sourcesContent":["// frontend/src/services/etymologyAPI.js\n\n// This will be your interface to whatever external API you choose later\nexport class EtymologyAPI {\n  constructor(apiKey = null) {\n    this.apiKey = apiKey;\n    this.baseUrl = process.env.REACT_APP_ETYMOLOGY_API_URL || 'default_url';\n  }\n\n  async getWordEtymology(word) {\n    // This is where you'll implement the actual API call later\n    try {\n      // For now, return null to fall back to local data\n      return null;\n      \n      // Later, you'll implement something like:\n      // const response = await fetch(`${this.baseUrl}/etymology/${word}`, {\n      //   headers: {\n      //     'Authorization': `Bearer ${this.apiKey}`,\n      //   }\n      // });\n      // return await response.json();\n    } catch (error) {\n      console.error('Etymology API error:', error);\n      return null;\n    }\n  }\n}\n\n// Create a singleton instance\nexport const etymologyAPI = new EtymologyAPI();"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,YAAY,CAAC;EACxBC,WAAWA,CAACC,MAAM,GAAG,IAAI,EAAE;IACzB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B,IAAI,aAAa;EACzE;EAEA,MAAMC,gBAAgBA,CAACC,IAAI,EAAE;IAC3B;IACA,IAAI;MACF;MACA,OAAO,IAAI;;MAEX;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,IAAI;IACb;EACF;AACF;;AAEA;AACA,OAAO,MAAME,YAAY,GAAG,IAAIX,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}