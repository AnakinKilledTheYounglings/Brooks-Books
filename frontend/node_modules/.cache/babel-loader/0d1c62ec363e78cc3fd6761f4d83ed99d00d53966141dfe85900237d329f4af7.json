{"ast":null,"code":"// frontend/src/components/vocabulary/VocabularyInterface.js\nimport React,{useState,useEffect}from'react';import vocabularyService from'../../services/vocabularyService';import{useNavigate}from'react-router-dom';// Import your shadcn components\nimport{Card}from'../../components/ui/card';import{Button}from'../../components/ui/button';import{Textarea}from'../../components/ui/textarea';import{Alert}from'../../components/ui/alert';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VocabularyInterface=_ref=>{let{bookId}=_ref;const navigate=useNavigate();const[passage,setPassage]=useState('');const[selectedWord,setSelectedWord]=useState('');const[wordDetails,setWordDetails]=useState(null);const[savedWords,setSavedWords]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');// Load saved words for this book\nuseEffect(()=>{if(bookId){loadSavedWords();}},[bookId]);const loadSavedWords=async()=>{try{const words=await vocabularyService.getBookVocabulary(bookId);setSavedWords(words);}catch(err){setError('Failed to load vocabulary words');console.error(err);}};const handleTextSelection=()=>{const selection=window.getSelection();const selectedText=selection.toString().trim();if(selectedText&&selectedText.split(' ').length===1){setSelectedWord(selectedText);handleWordLookup(selectedText);}};const handleWordLookup=async word=>{setLoading(true);try{// For now, we'll create a placeholder for etymology data\n// Later, we can integrate with an etymology API\nconst etymologyData={root:\"Example root\",originLanguage:\"Latin\",meaning:\"Original meaning\",evolution:[{period:\"Ancient\",form:word},{period:\"Modern\",form:word}]};setWordDetails({word,etymology:etymologyData});}catch(err){setError('Failed to look up word details');console.error(err);}finally{setLoading(false);}};const handleSaveWord=async()=>{if(!selectedWord||!wordDetails)return;try{const wordData={word:selectedWord,bookId,context:{passage:passage,pageNumber:null// You can add a page number input if needed\n},etymology:wordDetails.etymology};await vocabularyService.addVocabularyWord(wordData);await loadSavedWords();// Refresh the list\nsetSelectedWord('');setWordDetails(null);}catch(err){setError('Failed to save word');console.error(err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto p-4 space-y-6\",children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"destructive\",children:error}),/*#__PURE__*/_jsxs(Card,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"Vocabulary Helper\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Enter Book Passage\"}),/*#__PURE__*/_jsx(Textarea,{value:passage,onChange:e=>setPassage(e.target.value),placeholder:\"Enter a passage from the book...\",className:\"min-h-[200px]\"})]}),passage&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Select Words for Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border rounded-lg bg-gray-50\",onMouseUp:handleTextSelection,children:passage})]}),selectedWord&&wordDetails&&/*#__PURE__*/_jsxs(Card,{className:\"p-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-semibold mb-3\",children:[\"Word Analysis: \",selectedWord]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:\"Etymology:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Root: \",wordDetails.etymology.root]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Origin: \",wordDetails.etymology.originLanguage]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Original Meaning: \",wordDetails.etymology.meaning]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:\"Evolution:\"}),wordDetails.etymology.evolution.map((stage,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[stage.period,\": \",stage.form]},index))]}),/*#__PURE__*/_jsx(Button,{onClick:handleSaveWord,disabled:loading,className:\"w-full\",children:\"Save Word for Review\"})]})]})]})]}),savedWords.length>0&&/*#__PURE__*/_jsxs(Card,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold mb-4\",children:\"Saved Words\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:savedWords.map((word,index)=>{var _word$context;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 border rounded-lg hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:word.word}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Root: \",word.etymology.root]}),((_word$context=word.context)===null||_word$context===void 0?void 0:_word$context.passage)&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:[\"Context: \\\"\",word.context.passage,\"\\\"\"]})]},index);})})]})]});};export default VocabularyInterface;","map":{"version":3,"names":["React","useState","useEffect","vocabularyService","useNavigate","Card","Button","Textarea","Alert","jsx","_jsx","jsxs","_jsxs","VocabularyInterface","_ref","bookId","navigate","passage","setPassage","selectedWord","setSelectedWord","wordDetails","setWordDetails","savedWords","setSavedWords","loading","setLoading","error","setError","loadSavedWords","words","getBookVocabulary","err","console","handleTextSelection","selection","window","getSelection","selectedText","toString","trim","split","length","handleWordLookup","word","etymologyData","root","originLanguage","meaning","evolution","period","form","etymology","handleSaveWord","wordData","context","pageNumber","addVocabularyWord","className","children","variant","value","onChange","e","target","placeholder","onMouseUp","map","stage","index","onClick","disabled","_word$context"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/vocabulary/VocabularyInterface.jsx"],"sourcesContent":["// frontend/src/components/vocabulary/VocabularyInterface.js\n\nimport React, { useState, useEffect } from 'react';\nimport vocabularyService from '../../services/vocabularyService';\nimport { useNavigate } from 'react-router-dom';\n\n// Import your shadcn components\nimport { Card } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Alert } from '../../components/ui/alert';\n\nconst VocabularyInterface = ({ bookId }) => {\n  const navigate = useNavigate();\n  const [passage, setPassage] = useState('');\n  const [selectedWord, setSelectedWord] = useState('');\n  const [wordDetails, setWordDetails] = useState(null);\n  const [savedWords, setSavedWords] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Load saved words for this book\n  useEffect(() => {\n    if (bookId) {\n      loadSavedWords();\n    }\n  }, [bookId]);\n\n  const loadSavedWords = async () => {\n    try {\n      const words = await vocabularyService.getBookVocabulary(bookId);\n      setSavedWords(words);\n    } catch (err) {\n      setError('Failed to load vocabulary words');\n      console.error(err);\n    }\n  };\n\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    const selectedText = selection.toString().trim();\n    \n    if (selectedText && selectedText.split(' ').length === 1) {\n      setSelectedWord(selectedText);\n      handleWordLookup(selectedText);\n    }\n  };\n\n  const handleWordLookup = async (word) => {\n    setLoading(true);\n    try {\n      // For now, we'll create a placeholder for etymology data\n      // Later, we can integrate with an etymology API\n      const etymologyData = {\n        root: \"Example root\",\n        originLanguage: \"Latin\",\n        meaning: \"Original meaning\",\n        evolution: [\n          { period: \"Ancient\", form: word },\n          { period: \"Modern\", form: word }\n        ]\n      };\n\n      setWordDetails({\n        word,\n        etymology: etymologyData\n      });\n    } catch (err) {\n      setError('Failed to look up word details');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveWord = async () => {\n    if (!selectedWord || !wordDetails) return;\n\n    try {\n      const wordData = {\n        word: selectedWord,\n        bookId,\n        context: {\n          passage: passage,\n          pageNumber: null // You can add a page number input if needed\n        },\n        etymology: wordDetails.etymology\n      };\n\n      await vocabularyService.addVocabularyWord(wordData);\n      await loadSavedWords(); // Refresh the list\n      setSelectedWord('');\n      setWordDetails(null);\n    } catch (err) {\n      setError('Failed to save word');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4 space-y-6\">\n      {error && (\n        <Alert variant=\"destructive\">\n          {error}\n        </Alert>\n      )}\n\n      <Card className=\"p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Vocabulary Helper</h2>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Enter Book Passage\n            </label>\n            <Textarea\n              value={passage}\n              onChange={(e) => setPassage(e.target.value)}\n              placeholder=\"Enter a passage from the book...\"\n              className=\"min-h-[200px]\"\n            />\n          </div>\n\n          {passage && (\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Select Words for Analysis\n              </label>\n              <div \n                className=\"p-4 border rounded-lg bg-gray-50\"\n                onMouseUp={handleTextSelection}\n              >\n                {passage}\n              </div>\n            </div>\n          )}\n\n          {selectedWord && wordDetails && (\n            <Card className=\"p-4\">\n              <h3 className=\"text-xl font-semibold mb-3\">Word Analysis: {selectedWord}</h3>\n              \n              <div className=\"space-y-3\">\n                <div>\n                  <h4 className=\"font-medium\">Etymology:</h4>\n                  <p>Root: {wordDetails.etymology.root}</p>\n                  <p>Origin: {wordDetails.etymology.originLanguage}</p>\n                  <p>Original Meaning: {wordDetails.etymology.meaning}</p>\n                </div>\n\n                <div>\n                  <h4 className=\"font-medium\">Evolution:</h4>\n                  {wordDetails.etymology.evolution.map((stage, index) => (\n                    <div key={index} className=\"ml-4\">\n                      {stage.period}: {stage.form}\n                    </div>\n                  ))}\n                </div>\n\n                <Button\n                  onClick={handleSaveWord}\n                  disabled={loading}\n                  className=\"w-full\"\n                >\n                  Save Word for Review\n                </Button>\n              </div>\n            </Card>\n          )}\n        </div>\n      </Card>\n\n      {savedWords.length > 0 && (\n        <Card className=\"p-6\">\n          <h3 className=\"text-xl font-bold mb-4\">Saved Words</h3>\n          <div className=\"space-y-3\">\n            {savedWords.map((word, index) => (\n              <div \n                key={index}\n                className=\"p-3 border rounded-lg hover:bg-gray-50\"\n              >\n                <h4 className=\"font-medium\">{word.word}</h4>\n                <p className=\"text-sm text-gray-600\">\n                  Root: {word.etymology.root}\n                </p>\n                {word.context?.passage && (\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Context: \"{word.context.passage}\"\n                  </p>\n                )}\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default VocabularyInterface;"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,iBAAiB,KAAM,kCAAkC,CAChE,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AACA,OAASC,IAAI,KAAQ,0BAA0B,CAC/C,OAASC,MAAM,KAAQ,4BAA4B,CACnD,OAASC,QAAQ,KAAQ,8BAA8B,CACvD,OAASC,KAAK,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,mBAAmB,CAAGC,IAAA,EAAgB,IAAf,CAAEC,MAAO,CAAC,CAAAD,IAAA,CACrC,KAAM,CAAAE,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACoB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACsB,UAAU,CAAEC,aAAa,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACwB,OAAO,CAAEC,UAAU,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC0B,KAAK,CAAEC,QAAQ,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAC,SAAS,CAAC,IAAM,CACd,GAAIa,MAAM,CAAE,CACVc,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAAE,CAACd,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAc,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAA3B,iBAAiB,CAAC4B,iBAAiB,CAAChB,MAAM,CAAC,CAC/DS,aAAa,CAACM,KAAK,CAAC,CACtB,CAAE,MAAOE,GAAG,CAAE,CACZJ,QAAQ,CAAC,iCAAiC,CAAC,CAC3CK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAE,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,SAAS,CAAGC,MAAM,CAACC,YAAY,CAAC,CAAC,CACvC,KAAM,CAAAC,YAAY,CAAGH,SAAS,CAACI,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAEhD,GAAIF,YAAY,EAAIA,YAAY,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAK,CAAC,CAAE,CACxDtB,eAAe,CAACkB,YAAY,CAAC,CAC7BK,gBAAgB,CAACL,YAAY,CAAC,CAChC,CACF,CAAC,CAED,KAAM,CAAAK,gBAAgB,CAAG,KAAO,CAAAC,IAAI,EAAK,CACvClB,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF;AACA;AACA,KAAM,CAAAmB,aAAa,CAAG,CACpBC,IAAI,CAAE,cAAc,CACpBC,cAAc,CAAE,OAAO,CACvBC,OAAO,CAAE,kBAAkB,CAC3BC,SAAS,CAAE,CACT,CAAEC,MAAM,CAAE,SAAS,CAAEC,IAAI,CAAEP,IAAK,CAAC,CACjC,CAAEM,MAAM,CAAE,QAAQ,CAAEC,IAAI,CAAEP,IAAK,CAAC,CAEpC,CAAC,CAEDtB,cAAc,CAAC,CACbsB,IAAI,CACJQ,SAAS,CAAEP,aACb,CAAC,CAAC,CACJ,CAAE,MAAOb,GAAG,CAAE,CACZJ,QAAQ,CAAC,gCAAgC,CAAC,CAC1CK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC,CACpB,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA2B,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CAAClC,YAAY,EAAI,CAACE,WAAW,CAAE,OAEnC,GAAI,CACF,KAAM,CAAAiC,QAAQ,CAAG,CACfV,IAAI,CAAEzB,YAAY,CAClBJ,MAAM,CACNwC,OAAO,CAAE,CACPtC,OAAO,CAAEA,OAAO,CAChBuC,UAAU,CAAE,IAAK;AACnB,CAAC,CACDJ,SAAS,CAAE/B,WAAW,CAAC+B,SACzB,CAAC,CAED,KAAM,CAAAjD,iBAAiB,CAACsD,iBAAiB,CAACH,QAAQ,CAAC,CACnD,KAAM,CAAAzB,cAAc,CAAC,CAAC,CAAE;AACxBT,eAAe,CAAC,EAAE,CAAC,CACnBE,cAAc,CAAC,IAAI,CAAC,CACtB,CAAE,MAAOU,GAAG,CAAE,CACZJ,QAAQ,CAAC,qBAAqB,CAAC,CAC/BK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC,CACpB,CACF,CAAC,CAED,mBACEpB,KAAA,QAAK8C,SAAS,CAAC,iCAAiC,CAAAC,QAAA,EAC7ChC,KAAK,eACJjB,IAAA,CAACF,KAAK,EAACoD,OAAO,CAAC,aAAa,CAAAD,QAAA,CACzBhC,KAAK,CACD,CACR,cAEDf,KAAA,CAACP,IAAI,EAACqD,SAAS,CAAC,KAAK,CAAAC,QAAA,eACnBjD,IAAA,OAAIgD,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,mBAAiB,CAAI,CAAC,cAE9D/C,KAAA,QAAK8C,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB/C,KAAA,QAAA+C,QAAA,eACEjD,IAAA,UAAOgD,SAAS,CAAC,gCAAgC,CAAAC,QAAA,CAAC,oBAElD,CAAO,CAAC,cACRjD,IAAA,CAACH,QAAQ,EACPsD,KAAK,CAAE5C,OAAQ,CACf6C,QAAQ,CAAGC,CAAC,EAAK7C,UAAU,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5CI,WAAW,CAAC,kCAAkC,CAC9CP,SAAS,CAAC,eAAe,CAC1B,CAAC,EACC,CAAC,CAELzC,OAAO,eACNL,KAAA,QAAA+C,QAAA,eACEjD,IAAA,UAAOgD,SAAS,CAAC,gCAAgC,CAAAC,QAAA,CAAC,2BAElD,CAAO,CAAC,cACRjD,IAAA,QACEgD,SAAS,CAAC,kCAAkC,CAC5CQ,SAAS,CAAEhC,mBAAoB,CAAAyB,QAAA,CAE9B1C,OAAO,CACL,CAAC,EACH,CACN,CAEAE,YAAY,EAAIE,WAAW,eAC1BT,KAAA,CAACP,IAAI,EAACqD,SAAS,CAAC,KAAK,CAAAC,QAAA,eACnB/C,KAAA,OAAI8C,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,iBAAe,CAACxC,YAAY,EAAK,CAAC,cAE7EP,KAAA,QAAK8C,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB/C,KAAA,QAAA+C,QAAA,eACEjD,IAAA,OAAIgD,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cAC3C/C,KAAA,MAAA+C,QAAA,EAAG,QAAM,CAACtC,WAAW,CAAC+B,SAAS,CAACN,IAAI,EAAI,CAAC,cACzClC,KAAA,MAAA+C,QAAA,EAAG,UAAQ,CAACtC,WAAW,CAAC+B,SAAS,CAACL,cAAc,EAAI,CAAC,cACrDnC,KAAA,MAAA+C,QAAA,EAAG,oBAAkB,CAACtC,WAAW,CAAC+B,SAAS,CAACJ,OAAO,EAAI,CAAC,EACrD,CAAC,cAENpC,KAAA,QAAA+C,QAAA,eACEjD,IAAA,OAAIgD,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,CAC1CtC,WAAW,CAAC+B,SAAS,CAACH,SAAS,CAACkB,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAChDzD,KAAA,QAAiB8C,SAAS,CAAC,MAAM,CAAAC,QAAA,EAC9BS,KAAK,CAAClB,MAAM,CAAC,IAAE,CAACkB,KAAK,CAACjB,IAAI,GADnBkB,KAEL,CACN,CAAC,EACC,CAAC,cAEN3D,IAAA,CAACJ,MAAM,EACLgE,OAAO,CAAEjB,cAAe,CACxBkB,QAAQ,CAAE9C,OAAQ,CAClBiC,SAAS,CAAC,QAAQ,CAAAC,QAAA,CACnB,sBAED,CAAQ,CAAC,EACN,CAAC,EACF,CACP,EACE,CAAC,EACF,CAAC,CAENpC,UAAU,CAACmB,MAAM,CAAG,CAAC,eACpB9B,KAAA,CAACP,IAAI,EAACqD,SAAS,CAAC,KAAK,CAAAC,QAAA,eACnBjD,IAAA,OAAIgD,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,cACvDjD,IAAA,QAAKgD,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBpC,UAAU,CAAC4C,GAAG,CAAC,CAACvB,IAAI,CAAEyB,KAAK,QAAAG,aAAA,oBAC1B5D,KAAA,QAEE8C,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eAElDjD,IAAA,OAAIgD,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEf,IAAI,CAACA,IAAI,CAAK,CAAC,cAC5ChC,KAAA,MAAG8C,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,QAC7B,CAACf,IAAI,CAACQ,SAAS,CAACN,IAAI,EACzB,CAAC,CACH,EAAA0B,aAAA,CAAA5B,IAAI,CAACW,OAAO,UAAAiB,aAAA,iBAAZA,aAAA,CAAcvD,OAAO,gBACpBL,KAAA,MAAG8C,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,aAC9B,CAACf,IAAI,CAACW,OAAO,CAACtC,OAAO,CAAC,IAClC,EAAG,CACJ,GAXIoD,KAYF,CAAC,EACP,CAAC,CACC,CAAC,EACF,CACP,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}