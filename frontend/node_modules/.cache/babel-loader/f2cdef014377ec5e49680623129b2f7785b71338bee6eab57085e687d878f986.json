{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/components/BookGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { Box, Paper, Typography, Card, CardContent, IconButton, Tooltip } from '@mui/material';\nimport { Book, Person, LocalOffer, Category } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NODE_TYPES = {\n  BOOK: 'book',\n  AUTHOR: 'author',\n  GENRE: 'genre',\n  TAG: 'tag'\n};\nconst NODE_COLORS = {\n  [NODE_TYPES.BOOK]: '#4CAF50',\n  // Green\n  [NODE_TYPES.AUTHOR]: '#2196F3',\n  // Blue\n  [NODE_TYPES.GENRE]: '#FFC107',\n  // Amber\n  [NODE_TYPES.TAG]: '#9C27B0' // Purple\n};\nconst BookGraph = ({\n  graphData,\n  onNodeClick\n}) => {\n  _s();\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedNode, setSelectedNode] = useState(null);\n  const BookGraph = ({\n    graphData,\n    onNodeClick,\n    selectedFilter,\n    onFilterSelect\n  }) => {\n    return NODE_COLORS[node.type] || '#999';\n  };\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n    if (onNodeClick) {\n      onNodeClick(node);\n    }\n  };\n  const handleNodeHover = useCallback(node => {\n    setHighlightNodes(new Set(node ? [node] : []));\n    setHighlightLinks(new Set());\n\n    // If a node is hovered, highlight its direct connections\n    if (node) {\n      graphData.links.forEach(link => {\n        if (link.source === node || link.target === node) {\n          setHighlightLinks(prev => new Set([...prev, link]));\n          setHighlightNodes(prev => new Set([...prev, link.source, link.target]));\n        }\n      });\n    }\n  }, [graphData.links]);\n  const getNodeIcon = type => {\n    switch (type) {\n      case NODE_TYPES.BOOK:\n        return /*#__PURE__*/_jsxDEV(Book, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this);\n      case NODE_TYPES.AUTHOR:\n        return /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this);\n      case NODE_TYPES.GENRE:\n        return /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n      case NODE_TYPES.TAG:\n        return /*#__PURE__*/_jsxDEV(LocalOffer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: graphData,\n      nodeId: \"id\",\n      nodeLabel: node => `${node.type}: ${node.name}`,\n      nodeColor: node => node.color,\n      linkWidth: 1.5,\n      nodeRelSize: 6,\n      linkDirectionalParticles: 2,\n      linkDirectionalParticleWidth: 2,\n      d3AlphaDecay: 0.02,\n      d3VelocityDecay: 0.3,\n      onNodeClick: handleNodeClick,\n      onNodeHover: handleNodeHover,\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        const size = 6;\n        const fontSize = 12 / globalScale;\n        const label = node.name;\n        ctx.fillStyle = node.color;\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size, 0, 2 * Math.PI);\n        ctx.fill();\n        if (globalScale < 4) {\n          ctx.font = `${fontSize}px Sans-Serif`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillStyle = '#000';\n          ctx.fillText(label, node.x, node.y + size + fontSize);\n        }\n      },\n      linkColor: () => '#999'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        position: 'absolute',\n        top: 10,\n        right: 10,\n        p: 2,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Filter By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), Object.entries(NODE_TYPES).map(([key, value]) => {\n        var _selectedFilter;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1,\n            cursor: 'pointer',\n            p: 1,\n            borderRadius: 1,\n            '&:hover': {\n              backgroundColor: 'rgba(0, 0, 0, 0.05)'\n            },\n            backgroundColor: ((_selectedFilter = selectedFilter) === null || _selectedFilter === void 0 ? void 0 : _selectedFilter.nodeType) === value ? 'rgba(0, 0, 0, 0.1)' : 'transparent'\n          },\n          onClick: () => onFilterSelect(value),\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 12,\n              height: 12,\n              borderRadius: '50%',\n              backgroundColor: NODE_COLORS[value],\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: key.toLowerCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this);\n      }), selectedFilter && /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        onClick: () => onFilterSelect(null),\n        sx: {\n          mt: 1\n        },\n        children: \"Clear Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        position: 'absolute',\n        bottom: 10,\n        left: 10,\n        maxWidth: 300,\n        backgroundColor: 'rgba(255, 255, 255, 0.9)'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [getNodeIcon(selectedNode.type), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              ml: 1\n            },\n            children: selectedNode.name || selectedNode.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"Type: \", selectedNode.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), selectedNode.description && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: selectedNode.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(BookGraph, \"xiTYR2/9FxatzLBxEP4gbF8JG04=\");\n_c = BookGraph;\nexport default BookGraph;\nvar _c;\n$RefreshReg$(_c, \"BookGraph\");","map":{"version":3,"names":["React","useState","useCallback","ForceGraph2D","Box","Paper","Typography","Card","CardContent","IconButton","Tooltip","Book","Person","LocalOffer","Category","jsxDEV","_jsxDEV","NODE_TYPES","BOOK","AUTHOR","GENRE","TAG","NODE_COLORS","BookGraph","graphData","onNodeClick","_s","highlightNodes","setHighlightNodes","Set","highlightLinks","setHighlightLinks","selectedNode","setSelectedNode","selectedFilter","onFilterSelect","node","type","handleNodeClick","handleNodeHover","links","forEach","link","source","target","prev","getNodeIcon","fileName","_jsxFileName","lineNumber","columnNumber","sx","position","height","children","nodeId","nodeLabel","name","nodeColor","color","linkWidth","nodeRelSize","linkDirectionalParticles","linkDirectionalParticleWidth","d3AlphaDecay","d3VelocityDecay","onNodeHover","nodeCanvasObject","ctx","globalScale","size","fontSize","label","fillStyle","beginPath","arc","x","y","Math","PI","fill","font","textAlign","textBaseline","fillText","linkColor","top","right","p","backgroundColor","variant","gutterBottom","Object","entries","map","key","value","_selectedFilter","display","alignItems","mb","cursor","borderRadius","nodeType","onClick","width","mr","toLowerCase","mt","bottom","left","maxWidth","ml","title","description","_c","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/BookGraph.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport { \n  Box, \n  Paper, \n  Typography,\n  Card,\n  CardContent,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport { Book, Person, LocalOffer, Category } from '@mui/icons-material';\n\nconst NODE_TYPES = {\n  BOOK: 'book',\n  AUTHOR: 'author',\n  GENRE: 'genre',\n  TAG: 'tag'\n};\n\nconst NODE_COLORS = {\n  [NODE_TYPES.BOOK]: '#4CAF50',    // Green\n  [NODE_TYPES.AUTHOR]: '#2196F3',  // Blue\n  [NODE_TYPES.GENRE]: '#FFC107',   // Amber\n  [NODE_TYPES.TAG]: '#9C27B0'      // Purple\n};\n\nconst BookGraph = ({ graphData, onNodeClick }) => {\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const BookGraph = ({ \n    graphData, \n    onNodeClick, \n    selectedFilter, \n    onFilterSelect \n  }) => {\n    return NODE_COLORS[node.type] || '#999';\n  };\n\n  const handleNodeClick = (node) => {\n    setSelectedNode(node);\n    if (onNodeClick) {\n      onNodeClick(node);\n    }\n  };\n\n  const handleNodeHover = useCallback((node) => {\n    setHighlightNodes(new Set(node ? [node] : []));\n    setHighlightLinks(new Set());\n\n    // If a node is hovered, highlight its direct connections\n    if (node) {\n      graphData.links.forEach(link => {\n        if (link.source === node || link.target === node) {\n          setHighlightLinks(prev => new Set([...prev, link]));\n          setHighlightNodes(prev => new Set([...prev, link.source, link.target]));\n        }\n      });\n    }\n  }, [graphData.links]);\n\n  const getNodeIcon = (type) => {\n    switch (type) {\n      case NODE_TYPES.BOOK:\n        return <Book />;\n      case NODE_TYPES.AUTHOR:\n        return <Person />;\n      case NODE_TYPES.GENRE:\n        return <Category />;\n      case NODE_TYPES.TAG:\n        return <LocalOffer />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box sx={{ position: 'relative', height: '80vh' }}>\n      <ForceGraph2D\n          graphData={graphData}\n          nodeId=\"id\"\n          nodeLabel={node => `${node.type}: ${node.name}`}\n          nodeColor={node => node.color}\n          linkWidth={1.5}\n          nodeRelSize={6}\n          linkDirectionalParticles={2}\n          linkDirectionalParticleWidth={2}\n          d3AlphaDecay={0.02}\n          d3VelocityDecay={0.3}\n          onNodeClick={handleNodeClick}\n          onNodeHover={handleNodeHover}\n          nodeCanvasObject={(node, ctx, globalScale) => {\n              const size = 6;\n              const fontSize = 12 / globalScale;\n              const label = node.name;\n      \n              ctx.fillStyle = node.color;\n              ctx.beginPath();\n              ctx.arc(node.x, node.y, size, 0, 2 * Math.PI);\n              ctx.fill();\n      \n              if (globalScale < 4) {\n                  ctx.font = `${fontSize}px Sans-Serif`;\n                  ctx.textAlign = 'center';\n                  ctx.textBaseline = 'middle';\n                  ctx.fillStyle = '#000';\n                  ctx.fillText(label, node.x, node.y + size + fontSize);\n              }\n          }}\n          linkColor={() => '#999'}\n      />\n\n      {/* Legend */}\n      <Paper \n        sx={{ \n          position: 'absolute', \n          top: 10, \n          right: 10, \n          p: 2,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)'\n        }}\n      >\n        <Typography variant=\"subtitle2\" gutterBottom>Filter By:</Typography>\n        {Object.entries(NODE_TYPES).map(([key, value]) => (\n          <Box \n            key={key} \n            sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              mb: 1,\n              cursor: 'pointer',\n              p: 1,\n              borderRadius: 1,\n              '&:hover': {\n                backgroundColor: 'rgba(0, 0, 0, 0.05)'\n              },\n              backgroundColor: selectedFilter?.nodeType === value ? 'rgba(0, 0, 0, 0.1)' : 'transparent'\n            }}\n            onClick={() => onFilterSelect(value)}\n          >\n            <Box \n              sx={{ \n                width: 12, \n                height: 12, \n                borderRadius: '50%', \n                backgroundColor: NODE_COLORS[value],\n                mr: 1\n              }} \n            />\n            <Typography variant=\"body2\">{key.toLowerCase()}</Typography>\n          </Box>\n        ))}\n        {selectedFilter && (\n          <IconButton \n            size=\"small\" \n            onClick={() => onFilterSelect(null)}\n            sx={{ mt: 1 }}\n          >\n            Clear Filter\n          </IconButton>\n        )}\n      </Paper>\n\n      {/* Selected Node Info */}\n      {selectedNode && (\n        <Card \n          sx={{ \n            position: 'absolute', \n            bottom: 10, \n            left: 10, \n            maxWidth: 300,\n            backgroundColor: 'rgba(255, 255, 255, 0.9)'\n          }}\n        >\n          <CardContent>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              {getNodeIcon(selectedNode.type)}\n              <Typography variant=\"h6\" sx={{ ml: 1 }}>\n                {selectedNode.name || selectedNode.title}\n              </Typography>\n            </Box>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Type: {selectedNode.type}\n            </Typography>\n            {selectedNode.description && (\n              <Typography variant=\"body2\">\n                {selectedNode.description}\n              </Typography>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default BookGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}