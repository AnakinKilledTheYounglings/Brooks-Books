{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/pages/BookExplorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport BookGraph from '../components/BookGraph';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookExplorer() {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchGraphData();\n  }, []);\n  const fetchGraphData = async (book, author, genre, tag) => {\n    // Gemini Update to above from : const fetchGraphData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/recommendations/graph');\n      if (!response.ok) {\n        throw new Error('Failed to fetch graph data');\n      }\n      const data = await response.json();\n      if (!data.nodes || !data.links) {\n        console.error('Invalid graph data structure:', data);\n        setError('Invalid graph data structure received');\n        return;\n      }\n\n      // Filter out any invalid links\n      const validNodeIds = new Set(data.nodes.map(node => node.id));\n      const validLinks = data.links.filter(link => validNodeIds.has(link.source) && validNodeIds.has(link.target));\n      setGraphData({\n        nodes: data.nodes,\n        links: validLinks\n      });\n    } catch (err) {\n      console.error('Error fetching graph data:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleNodeClick = node => {\n    if (node.type === 'Book') {\n      navigate(`/books/${node.properties.id}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading book network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      mt: 4,\n      height: '90vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Book Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: \"Click and drag nodes to explore connections between books, authors, genres, and tags.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        height: 'calc(100% - 100px)',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(BookGraph, {\n        graphData: graphData,\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(BookExplorer, \"usadYH0DSGZZAgXB4OLkECOEyQw=\", false, function () {\n  return [useNavigate];\n});\n_c = BookExplorer;\nexport default BookExplorer;\nvar _c;\n$RefreshReg$(_c, \"BookExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","BookGraph","useNavigate","jsxDEV","_jsxDEV","BookExplorer","_s","graphData","setGraphData","nodes","links","loading","setLoading","error","setError","navigate","fetchGraphData","book","author","genre","tag","response","fetch","ok","Error","data","json","console","validNodeIds","Set","map","node","id","validLinks","filter","link","has","source","target","err","message","handleNodeClick","type","properties","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","color","maxWidth","height","variant","gutterBottom","elevation","overflow","onNodeClick","_c","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/pages/BookExplorer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport BookGraph from '../components/BookGraph';\nimport { useNavigate } from 'react-router-dom';\n\nfunction BookExplorer() {\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchGraphData();\n  }, []);\n\n  const fetchGraphData = async (book, author, genre, tag) => {\n    // Gemini Update to above from : const fetchGraphData = async () => {\n      try {\n          setLoading(true);\n          const response = await fetch('http://localhost:3001/api/recommendations/graph');\n          if (!response.ok) {\n              throw new Error('Failed to fetch graph data');\n          }\n          const data = await response.json();\n  \n          if (!data.nodes || !data.links) {\n              console.error('Invalid graph data structure:', data);\n              setError('Invalid graph data structure received');\n              return;\n          }\n  \n          // Filter out any invalid links\n          const validNodeIds = new Set(data.nodes.map(node => node.id));\n          const validLinks = data.links.filter(link => \n              validNodeIds.has(link.source) && validNodeIds.has(link.target)\n          );\n  \n          setGraphData({\n              nodes: data.nodes,\n              links: validLinks\n          });\n      } catch (err) {\n          console.error('Error fetching graph data:', err);\n          setError(err.message);\n      } finally {\n          setLoading(false);\n      }\n  };\n\n  const handleNodeClick = (node) => {\n    if (node.type === 'Book') {\n      navigate(`/books/${node.properties.id}`);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container sx={{ mt: 4 }}>\n        <Typography>Loading book network...</Typography>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container sx={{ mt: 4 }}>\n        <Typography color=\"error\">Error: {error}</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, height: '90vh' }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Book Explorer\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Click and drag nodes to explore connections between books, authors, genres, and tags.\n      </Typography>\n      \n      <Paper elevation={3} sx={{ height: 'calc(100% - 100px)', overflow: 'hidden' }}>\n        <BookGraph \n          graphData={graphData}\n          onNodeClick={handleNodeClick}\n        />\n      </Paper>\n    </Container>\n  );\n}\n\nexport default BookExplorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}