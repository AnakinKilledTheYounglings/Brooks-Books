{"ast":null,"code":"import React,{useState}from'react';import{Card,CardContent,CardMedia,IconButton,Typography,Box,TextField,//Button,\nCollapse}from'@mui/material';import{Favorite,FavoriteBorder,ChatBubbleOutline,Send}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DrawingCard(_ref){var _drawing$likes,_drawing$likes2,_drawing$comments,_drawing$comments2;let{drawing,bookId,onLikeUpdate}=_ref;const[likeCount,setLikeCount]=useState(((_drawing$likes=drawing.likes)===null||_drawing$likes===void 0?void 0:_drawing$likes.length)||0);const[isLiked,setIsLiked]=useState((_drawing$likes2=drawing.likes)===null||_drawing$likes2===void 0?void 0:_drawing$likes2.includes(localStorage.getItem('userId')));const[showComments,setShowComments]=useState(false);const[newComment,setNewComment]=useState('');const handleLike=async()=>{try{const endpoint=isLiked?'unlike':'like';const response=await fetch(`http://localhost:3001/api/books/${bookId}/drawings/${drawing._id}/${endpoint}`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});if(response.ok){setLikeCount(prev=>isLiked?prev-1:prev+1);setIsLiked(!isLiked);onLikeUpdate();}}catch(error){console.error('Error handling like:',error);}};const handleComment=async e=>{e.preventDefault();if(!newComment.trim())return;try{const response=await fetch(`http://localhost:3001/api/books/${bookId}/drawings/${drawing._id}/comments`,{method:'POST',headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`,'Content-Type':'application/json'},body:JSON.stringify({content:newComment})});if(response.ok){setNewComment('');onLikeUpdate();// This will refresh the whole book data, including comments\n}}catch(error){console.error('Error posting comment:',error);}};return/*#__PURE__*/_jsxs(Card,{sx:{mb:2},children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",image:drawing.imageUrl,alt:\"User Drawing\",sx:{height:'auto',maxHeight:'400px',objectFit:'contain'}}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:handleLike,color:isLiked?\"error\":\"default\",children:isLiked?/*#__PURE__*/_jsx(Favorite,{}):/*#__PURE__*/_jsx(FavoriteBorder,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:likeCount})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>setShowComments(!showComments),children:/*#__PURE__*/_jsx(ChatBubbleOutline,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:((_drawing$comments=drawing.comments)===null||_drawing$comments===void 0?void 0:_drawing$comments.length)||0})]})]}),/*#__PURE__*/_jsx(Collapse,{in:showComments,children:/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[(_drawing$comments2=drawing.comments)===null||_drawing$comments2===void 0?void 0:_drawing$comments2.map((comment,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:1,p:1,bgcolor:'grey.100',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"primary\",children:comment.username}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:comment.content})]},index)),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleComment,sx:{mt:2,display:'flex',gap:1},children:[/*#__PURE__*/_jsx(TextField,{size:\"small\",placeholder:\"Add a comment...\",value:newComment,onChange:e=>setNewComment(e.target.value),fullWidth:true,multiline:true,maxRows:3}),/*#__PURE__*/_jsx(IconButton,{type:\"submit\",color:\"primary\",disabled:!newComment.trim(),children:/*#__PURE__*/_jsx(Send,{})})]})]})})]})]});}export default DrawingCard;","map":{"version":3,"names":["React","useState","Card","CardContent","CardMedia","IconButton","Typography","Box","TextField","Collapse","Favorite","FavoriteBorder","ChatBubbleOutline","Send","jsx","_jsx","jsxs","_jsxs","DrawingCard","_ref","_drawing$likes","_drawing$likes2","_drawing$comments","_drawing$comments2","drawing","bookId","onLikeUpdate","likeCount","setLikeCount","likes","length","isLiked","setIsLiked","includes","localStorage","getItem","showComments","setShowComments","newComment","setNewComment","handleLike","endpoint","response","fetch","_id","method","headers","ok","prev","error","console","handleComment","e","preventDefault","trim","body","JSON","stringify","content","sx","mb","children","component","image","imageUrl","alt","height","maxHeight","objectFit","display","alignItems","gap","size","onClick","color","variant","comments","in","mt","map","comment","index","p","bgcolor","borderRadius","username","onSubmit","placeholder","value","onChange","target","fullWidth","multiline","maxRows","type","disabled"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/DrawingCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Card, \n  CardContent, \n  CardMedia, \n  IconButton, \n  Typography, \n  Box,\n  TextField,\n  //Button,\n  Collapse\n} from '@mui/material';\nimport { \n  Favorite, \n  FavoriteBorder, \n  ChatBubbleOutline,\n  Send\n} from '@mui/icons-material';\n\nfunction DrawingCard({ drawing, bookId, onLikeUpdate }) {\n  const [likeCount, setLikeCount] = useState(drawing.likes?.length || 0);\n  const [isLiked, setIsLiked] = useState(drawing.likes?.includes(localStorage.getItem('userId')));\n  const [showComments, setShowComments] = useState(false);\n  const [newComment, setNewComment] = useState('');\n\n  const handleLike = async () => {\n    try {\n      const endpoint = isLiked ? 'unlike' : 'like';\n      const response = await fetch(\n        `http://localhost:3001/api/books/${bookId}/drawings/${drawing._id}/${endpoint}`,\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        }\n      );\n\n      if (response.ok) {\n        setLikeCount(prev => isLiked ? prev - 1 : prev + 1);\n        setIsLiked(!isLiked);\n        onLikeUpdate();\n      }\n    } catch (error) {\n      console.error('Error handling like:', error);\n    }\n  };\n\n  const handleComment = async (e) => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n\n    try {\n      const response = await fetch(\n        `http://localhost:3001/api/books/${bookId}/drawings/${drawing._id}/comments`,\n        {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ content: newComment })\n        }\n      );\n\n      if (response.ok) {\n        setNewComment('');\n        onLikeUpdate(); // This will refresh the whole book data, including comments\n      }\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n\n  return (\n    <Card sx={{ mb: 2 }}>\n      <CardMedia\n        component=\"img\"\n        image={drawing.imageUrl}\n        alt=\"User Drawing\"\n        sx={{ height: 'auto', maxHeight: '400px', objectFit: 'contain' }}\n      />\n      <CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <IconButton \n              size=\"small\" \n              onClick={handleLike}\n              color={isLiked ? \"error\" : \"default\"}\n            >\n              {isLiked ? <Favorite /> : <FavoriteBorder />}\n            </IconButton>\n            <Typography variant=\"body2\">\n              {likeCount}\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <IconButton \n              size=\"small\" \n              onClick={() => setShowComments(!showComments)}\n            >\n              <ChatBubbleOutline />\n            </IconButton>\n            <Typography variant=\"body2\">\n              {drawing.comments?.length || 0}\n            </Typography>\n          </Box>\n        </Box>\n\n        <Collapse in={showComments}>\n          <Box sx={{ mt: 2 }}>\n            {/* Comments list */}\n            {drawing.comments?.map((comment, index) => (\n              <Box key={index} sx={{ mb: 1, p: 1, bgcolor: 'grey.100', borderRadius: 1 }}>\n                <Typography variant=\"subtitle2\" color=\"primary\">\n                  {comment.username}\n                </Typography>\n                <Typography variant=\"body2\">\n                  {comment.content}\n                </Typography>\n              </Box>\n            ))}\n\n            {/* Comment form */}\n            <Box \n              component=\"form\" \n              onSubmit={handleComment}\n              sx={{ \n                mt: 2, \n                display: 'flex', \n                gap: 1 \n              }}\n            >\n              <TextField\n                size=\"small\"\n                placeholder=\"Add a comment...\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                fullWidth\n                multiline\n                maxRows={3}\n              />\n              <IconButton \n                type=\"submit\" \n                color=\"primary\"\n                disabled={!newComment.trim()}\n              >\n                <Send />\n              </IconButton>\n            </Box>\n          </Box>\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default DrawingCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}