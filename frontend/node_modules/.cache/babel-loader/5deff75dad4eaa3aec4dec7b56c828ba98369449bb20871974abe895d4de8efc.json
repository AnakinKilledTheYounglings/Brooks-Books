{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/components/vocabulary/VocabularyQuiz.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/vocabulary/VocabularyQuiz.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, Typography, Button, CircularProgress, RadioGroup, FormControlLabel, Radio, Alert } from '@mui/material';\nimport vocabularyService from '../../services/vocabularyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VocabularyQuiz = ({\n  bookId\n}) => {\n  _s();\n  var _currentQuestion$opti;\n  console.log('VocabularyQuiz component rendering with bookId:', bookId);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        console.log('Fetching quiz for bookId:', bookId);\n        const quizData = await vocabularyService.getQuizForBook(bookId);\n        console.log('Quiz data received:', quizData);\n        if (quizData.questions) {\n          setQuestions(quizData.questions);\n        }\n      } catch (err) {\n        console.error('Error fetching quiz:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (bookId) {\n      fetchQuiz();\n    }\n  }, [bookId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          ml: 2\n        },\n        children: \"Loading quiz questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        m: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  if (!questions || questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        m: 2\n      },\n      children: \"No vocabulary words found for this book. Add some vocabulary words to take a quiz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: selectedAnswer,\n        onChange: e => setSelectedAnswer(e.target.value),\n        sx: {\n          my: 2\n        },\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }, this),\n          label: option,\n          sx: {\n            mb: 1\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          console.log('Selected answer:', selectedAnswer);\n          // Add your answer submission logic here\n        },\n        disabled: !selectedAnswer,\n        fullWidth: true,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyQuiz, \"hQgY6BQ86gPfIRBb5BOkYAqXNjg=\");\n_c = VocabularyQuiz;\nexport default VocabularyQuiz;\nvar _c;\n$RefreshReg$(_c, \"VocabularyQuiz\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","Typography","Button","CircularProgress","RadioGroup","FormControlLabel","Radio","Alert","vocabularyService","jsxDEV","_jsxDEV","VocabularyQuiz","bookId","_s","_currentQuestion$opti","console","log","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","loading","setLoading","error","setError","fetchQuiz","quizData","getQuizForBook","err","message","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","ml","severity","m","length","currentQuestion","p","variant","gutterBottom","question","value","onChange","e","target","my","options","map","option","index","control","label","mb","onClick","disabled","fullWidth","_c","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/vocabulary/VocabularyQuiz.jsx"],"sourcesContent":["// frontend/src/components/vocabulary/VocabularyQuiz.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Box,\n  Card,\n  Typography,\n  Button,\n  CircularProgress,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Alert\n} from '@mui/material';\nimport vocabularyService from '../../services/vocabularyService';\n\nconst VocabularyQuiz = ({ bookId }) => {\n  console.log('VocabularyQuiz component rendering with bookId:', bookId);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        console.log('Fetching quiz for bookId:', bookId);\n        const quizData = await vocabularyService.getQuizForBook(bookId);\n        console.log('Quiz data received:', quizData);\n        if (quizData.questions) {\n          setQuestions(quizData.questions);\n        }\n      } catch (err) {\n        console.error('Error fetching quiz:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (bookId) {\n      fetchQuiz();\n    }\n  }, [bookId]);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n        <Typography sx={{ ml: 2 }}>Loading quiz questions...</Typography>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ m: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!questions || questions.length === 0) {\n    return (\n      <Alert severity=\"info\" sx={{ m: 2 }}>\n        No vocabulary words found for this book. Add some vocabulary words to take a quiz!\n      </Alert>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Card sx={{ p: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Question {currentQuestionIndex + 1} of {questions.length}\n        </Typography>\n        \n        <Typography variant=\"body1\" gutterBottom>\n          {currentQuestion?.question}\n        </Typography>\n\n        <RadioGroup\n          value={selectedAnswer}\n          onChange={(e) => setSelectedAnswer(e.target.value)}\n          sx={{ my: 2 }}\n        >\n          {currentQuestion?.options?.map((option, index) => (\n            <FormControlLabel\n              key={index}\n              value={option}\n              control={<Radio />}\n              label={option}\n              sx={{ mb: 1 }}\n            />\n          ))}\n        </RadioGroup>\n\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            console.log('Selected answer:', selectedAnswer);\n            // Add your answer submission logic here\n          }}\n          disabled={!selectedAnswer}\n          fullWidth\n        >\n          Submit Answer\n        </Button>\n      </Card>\n    </Box>\n  );\n};\n\nexport default VocabularyQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}