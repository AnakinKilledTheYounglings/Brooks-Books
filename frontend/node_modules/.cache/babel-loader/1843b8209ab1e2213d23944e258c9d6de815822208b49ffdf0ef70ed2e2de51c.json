{"ast":null,"code":"// frontend/src/components/vocabulary/VocabularyQuiz.jsx\nimport React,{useState,useEffect}from'react';import{Box,Card,Typography,Button,CircularProgress,RadioGroup,FormControlLabel,Radio,Alert,Collapse}from'@mui/material';import{CheckCircle,Cancel}from'@mui/icons-material';import vocabularyService from'../../services/vocabularyService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VocabularyQuiz=_ref=>{var _currentQuestion$opti;let{bookId}=_ref;console.log('VocabularyQuiz component rendering with bookId:',bookId);const[questions,setQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState('');const[score,setScore]=useState(0);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[showFeedback,setShowFeedback]=useState(false);const[answeredCorrectly,setAnsweredCorrectly]=useState(false);const[quizCompleted,setQuizCompleted]=useState(false);useEffect(()=>{const fetchQuiz=async()=>{try{console.log('Fetching quiz for bookId:',bookId);const quizData=await vocabularyService.getQuizForBook(bookId);console.log('Quiz data received:',quizData);if(quizData.questions){setQuestions(quizData.questions);}}catch(err){console.error('Error fetching quiz:',err);setError(err.message);}finally{setLoading(false);}};if(bookId){fetchQuiz();}},[bookId]);const handleAnswerSubmit=()=>{const currentQuestion=questions[currentQuestionIndex];const isCorrect=selectedAnswer===currentQuestion.correctAnswer;setAnsweredCorrectly(isCorrect);setShowFeedback(true);if(isCorrect){setScore(score+1);}};const handleNextQuestion=()=>{if(currentQuestionIndex+1<questions.length){setCurrentQuestionIndex(currentQuestionIndex+1);setSelectedAnswer('');setShowFeedback(false);}else{setQuizCompleted(true);}};if(loading){return/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"200px\",children:[/*#__PURE__*/_jsx(CircularProgress,{}),/*#__PURE__*/_jsx(Typography,{sx:{ml:2},children:\"Loading quiz questions...\"})]});}if(error){return/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{m:2},children:error});}if(!questions||questions.length===0){return/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{m:2},children:\"No vocabulary words found for this book. Add some vocabulary words to take a quiz!\"});}if(quizCompleted){return/*#__PURE__*/_jsxs(Box,{sx:{p:3,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Quiz Completed!\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{mb:2},children:[\"Your Score: \",score,\" out of \",questions.length]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Percentage: \",(score/questions.length*100).toFixed(1),\"%\"]})]});}const currentQuestion=questions[currentQuestionIndex];return/*#__PURE__*/_jsx(Box,{sx:{p:2},children:/*#__PURE__*/_jsxs(Card,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:2,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Question \",currentQuestionIndex+1,\" of \",questions.length]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[\"Score: \",score]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",gutterBottom:true,children:currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.question}),/*#__PURE__*/_jsx(RadioGroup,{value:selectedAnswer,onChange:e=>setSelectedAnswer(e.target.value),sx:{my:2},children:currentQuestion===null||currentQuestion===void 0?void 0:(_currentQuestion$opti=currentQuestion.options)===null||_currentQuestion$opti===void 0?void 0:_currentQuestion$opti.map((option,index)=>/*#__PURE__*/_jsx(FormControlLabel,{value:option,control:/*#__PURE__*/_jsx(Radio,{}),label:option,sx:{mb:1},disabled:showFeedback},index))}),/*#__PURE__*/_jsx(Collapse,{in:showFeedback,children:/*#__PURE__*/_jsx(Alert,{severity:answeredCorrectly?\"success\":\"error\",icon:answeredCorrectly?/*#__PURE__*/_jsx(CheckCircle,{}):/*#__PURE__*/_jsx(Cancel,{}),sx:{mb:2},children:answeredCorrectly?\"Correct! Well done!\":`Incorrect. The correct answer is: ${currentQuestion===null||currentQuestion===void 0?void 0:currentQuestion.correctAnswer}`})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:showFeedback?handleNextQuestion:handleAnswerSubmit,disabled:!selectedAnswer&&!showFeedback,fullWidth:true,children:showFeedback?currentQuestionIndex+1===questions.length?\"Complete Quiz\":\"Next Question\":\"Submit Answer\"})]})});};export default VocabularyQuiz;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","Typography","Button","CircularProgress","RadioGroup","FormControlLabel","Radio","Alert","Collapse","CheckCircle","Cancel","vocabularyService","jsx","_jsx","jsxs","_jsxs","VocabularyQuiz","_ref","_currentQuestion$opti","bookId","console","log","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","loading","setLoading","error","setError","showFeedback","setShowFeedback","answeredCorrectly","setAnsweredCorrectly","quizCompleted","setQuizCompleted","fetchQuiz","quizData","getQuizForBook","err","message","handleAnswerSubmit","currentQuestion","isCorrect","correctAnswer","handleNextQuestion","length","display","justifyContent","alignItems","minHeight","children","sx","ml","severity","m","p","textAlign","variant","gutterBottom","mb","toFixed","question","value","onChange","e","target","my","options","map","option","index","control","label","disabled","in","icon","onClick","fullWidth"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/vocabulary/VocabularyQuiz.jsx"],"sourcesContent":["// frontend/src/components/vocabulary/VocabularyQuiz.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Box,\n  Card,\n  Typography,\n  Button,\n  CircularProgress,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Alert,\n  Collapse\n} from '@mui/material';\nimport { CheckCircle, Cancel } from '@mui/icons-material';\nimport vocabularyService from '../../services/vocabularyService';\n\nconst VocabularyQuiz = ({ bookId }) => {\n  console.log('VocabularyQuiz component rendering with bookId:', bookId);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [answeredCorrectly, setAnsweredCorrectly] = useState(false);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        console.log('Fetching quiz for bookId:', bookId);\n        const quizData = await vocabularyService.getQuizForBook(bookId);\n        console.log('Quiz data received:', quizData);\n        if (quizData.questions) {\n          setQuestions(quizData.questions);\n        }\n      } catch (err) {\n        console.error('Error fetching quiz:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (bookId) {\n      fetchQuiz();\n    }\n  }, [bookId]);\n\n  const handleAnswerSubmit = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    const isCorrect = selectedAnswer === currentQuestion.correctAnswer;\n    setAnsweredCorrectly(isCorrect);\n    setShowFeedback(true);\n    \n    if (isCorrect) {\n      setScore(score + 1);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedAnswer('');\n      setShowFeedback(false);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n        <Typography sx={{ ml: 2 }}>Loading quiz questions...</Typography>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ m: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!questions || questions.length === 0) {\n    return (\n      <Alert severity=\"info\" sx={{ m: 2 }}>\n        No vocabulary words found for this book. Add some vocabulary words to take a quiz!\n      </Alert>\n    );\n  }\n\n  if (quizCompleted) {\n    return (\n      <Box sx={{ p: 3, textAlign: 'center' }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Quiz Completed!\n        </Typography>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n          Your Score: {score} out of {questions.length}\n        </Typography>\n        <Typography variant=\"body1\">\n          Percentage: {((score / questions.length) * 100).toFixed(1)}%\n        </Typography>\n      </Box>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Card sx={{ p: 3 }}>\n        <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\">\n            Question {currentQuestionIndex + 1} of {questions.length}\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            Score: {score}\n          </Typography>\n        </Box>\n        \n        <Typography variant=\"body1\" gutterBottom>\n          {currentQuestion?.question}\n        </Typography>\n\n        <RadioGroup\n          value={selectedAnswer}\n          onChange={(e) => setSelectedAnswer(e.target.value)}\n          sx={{ my: 2 }}\n        >\n          {currentQuestion?.options?.map((option, index) => (\n            <FormControlLabel\n              key={index}\n              value={option}\n              control={<Radio />}\n              label={option}\n              sx={{ mb: 1 }}\n              disabled={showFeedback}\n            />\n          ))}\n        </RadioGroup>\n\n        <Collapse in={showFeedback}>\n          <Alert \n            severity={answeredCorrectly ? \"success\" : \"error\"}\n            icon={answeredCorrectly ? <CheckCircle /> : <Cancel />}\n            sx={{ mb: 2 }}\n          >\n            {answeredCorrectly \n              ? \"Correct! Well done!\" \n              : `Incorrect. The correct answer is: ${currentQuestion?.correctAnswer}`\n            }\n          </Alert>\n        </Collapse>\n\n        <Button\n          variant=\"contained\"\n          onClick={showFeedback ? handleNextQuestion : handleAnswerSubmit}\n          disabled={!selectedAnswer && !showFeedback}\n          fullWidth\n        >\n          {showFeedback \n            ? (currentQuestionIndex + 1 === questions.length ? \"Complete Quiz\" : \"Next Question\")\n            : \"Submit Answer\"\n          }\n        </Button>\n      </Card>\n    </Box>\n  );\n};\n\nexport default VocabularyQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}