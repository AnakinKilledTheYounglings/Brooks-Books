{"ast":null,"code":"// src/services/translationService.js\nexport const translateWord=async(word,targetLanguage)=>{try{console.log(`Translating \"${word}\" to ${targetLanguage}...`);const response=await fetch('http://localhost:3001/api/translate',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify({word,targetLanguage})});if(!response.ok){throw new Error('Translation failed');}const data=await response.json();return data.translation;}catch(error){console.error('Translation error:',error);throw error;// Rethrow to handle in the main function\n}};","map":{"version":3,"names":["translateWord","word","targetLanguage","console","log","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","ok","Error","data","json","translation","error"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/services/translationService.js"],"sourcesContent":["// src/services/translationService.js\nexport const translateWord = async (word, targetLanguage) => {\n  try {\n    console.log(`Translating \"${word}\" to ${targetLanguage}...`);\n    const response = await fetch('http://localhost:3001/api/translate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({\n        word,\n        targetLanguage\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error('Translation failed');\n    }\n\n    const data = await response.json();\n    return data.translation;\n  } catch (error) {\n    console.error('Translation error:', error);\n    throw error; // Rethrow to handle in the main function\n  }\n};"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,aAAa,CAAG,KAAAA,CAAOC,IAAI,CAAEC,cAAc,GAAK,CAC3D,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,gBAAgBH,IAAI,QAAQC,cAAc,KAAK,CAAC,CAC5D,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAE,CAClEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAC1D,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBZ,IAAI,CACJC,cACF,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACS,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoB,CAAC,CACvC,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAACE,WAAW,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdhB,OAAO,CAACgB,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,KAAM,CAAAA,KAAK,CAAE;AACf,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}