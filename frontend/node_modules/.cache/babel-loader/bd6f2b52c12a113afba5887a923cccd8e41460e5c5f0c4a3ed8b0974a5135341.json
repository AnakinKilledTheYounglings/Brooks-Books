{"ast":null,"code":"// src/components/VocabularyQuiz.js\nimport React,{useState,useEffect,useCallback}from'react';import{Dialog,DialogTitle,DialogContent,Button,Typography,Box,Radio,RadioGroup,FormControlLabel}from'@mui/material';import WordEtymology from'./WordEtymology';// Add this import\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function VocabularyQuiz(_ref){let{bookId,open,onClose}=_ref;const[questions,setQuestions]=useState([]);const[currentQuestion,setCurrentQuestion]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState('');const[score,setScore]=useState(0);const[showEtymology,setShowEtymology]=useState(false);// Move fetchQuestions inside useCallback\nconst fetchQuestions=useCallback(async()=>{try{const response=await fetch(`http://localhost:3001/api/books/${bookId}/vocabulary`);const data=await response.json();setQuestions(data);}catch(error){console.error('Error fetching questions:',error);}},[bookId]);// Add bookId as dependency\nconst handleSubmit=async()=>{try{const response=await fetch(`http://localhost:3001/api/users/vocabulary`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify({wordId:questions[currentQuestion]._id,answer:selectedAnswer})});const data=await response.json();if(data.correct){setScore(score+1);setShowEtymology(true);}if(currentQuestion<questions.length-1){setCurrentQuestion(currentQuestion+1);setSelectedAnswer('');setShowEtymology(false);}else{// Quiz complete\nonClose();}}catch(error){console.error('Error submitting answer:',error);}};useEffect(()=>{if(open){fetchQuestions();}},[open,bookId,fetchQuestions]);return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Vocabulary Quiz\"}),/*#__PURE__*/_jsx(DialogContent,{children:questions.length>0&&currentQuestion<questions.length?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:questions[currentQuestion].word}),/*#__PURE__*/_jsx(RadioGroup,{value:selectedAnswer,onChange:e=>setSelectedAnswer(e.target.value),children:questions[currentQuestion].options.map((option,index)=>/*#__PURE__*/_jsx(FormControlLabel,{value:option,control:/*#__PURE__*/_jsx(Radio,{}),label:option},index))}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSubmit,disabled:!selectedAnswer,sx:{mt:2},children:\"Submit Answer\"}),showEtymology&&/*#__PURE__*/_jsx(WordEtymology,{word:questions[currentQuestion].word,etymology:questions[currentQuestion].etymology,translations:questions[currentQuestion].translations})]}):/*#__PURE__*/_jsxs(Typography,{children:[\"Quiz complete! Score: \",score,\"/\",questions.length]})})]});}export default VocabularyQuiz;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Dialog","DialogTitle","DialogContent","Button","Typography","Box","Radio","RadioGroup","FormControlLabel","WordEtymology","jsx","_jsx","jsxs","_jsxs","VocabularyQuiz","_ref","bookId","open","onClose","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","showEtymology","setShowEtymology","fetchQuestions","response","fetch","data","json","error","console","handleSubmit","method","headers","localStorage","getItem","body","JSON","stringify","wordId","_id","answer","correct","length","maxWidth","fullWidth","children","variant","gutterBottom","word","value","onChange","e","target","options","map","option","index","control","label","onClick","disabled","sx","mt","etymology","translations"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/VocabularyQuiz.js"],"sourcesContent":["// src/components/VocabularyQuiz.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  Typography,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel\n} from '@mui/material';\nimport WordEtymology from './WordEtymology'; // Add this import\n\n\n\nfunction VocabularyQuiz({ bookId, open, onClose }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showEtymology, setShowEtymology] = useState(false);\n\n\n\n  // Move fetchQuestions inside useCallback\n  const fetchQuestions = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/books/${bookId}/vocabulary`);\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  }, [bookId]); // Add bookId as dependency\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/users/vocabulary`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          wordId: questions[currentQuestion]._id,\n          answer: selectedAnswer\n        })\n      });\n\n      const data = await response.json();\n      \n      if (data.correct) {\n        setScore(score + 1);\n        setShowEtymology(true);\n      }\n\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(currentQuestion + 1);\n        setSelectedAnswer('');\n        setShowEtymology(false);\n      } else {\n        // Quiz complete\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n    }\n  };\n\n  useEffect(() => {\n  if (open) {\n      fetchQuestions();\n  }\n  }, [open, bookId, fetchQuestions]);\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Vocabulary Quiz</DialogTitle>\n      <DialogContent>\n        {questions.length > 0 && currentQuestion < questions.length ? (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              {questions[currentQuestion].word}\n            </Typography>\n            <RadioGroup\n              value={selectedAnswer}\n              onChange={(e) => setSelectedAnswer(e.target.value)}\n            >\n              {questions[currentQuestion].options.map((option, index) => (\n                <FormControlLabel\n                  key={index}\n                  value={option}\n                  control={<Radio />}\n                  label={option}\n                />\n              ))}\n            </RadioGroup>\n            <Button\n              variant=\"contained\"\n              onClick={handleSubmit}\n              disabled={!selectedAnswer}\n              sx={{ mt: 2 }}\n            >\n              Submit Answer\n            </Button>\n\n            {showEtymology && (\n              <WordEtymology \n                word={questions[currentQuestion].word}\n                etymology={questions[currentQuestion].etymology}\n                translations={questions[currentQuestion].translations}\n              />\n            )}\n          </Box>\n        ) : (\n          <Typography>\n            Quiz complete! Score: {score}/{questions.length}\n          </Typography>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default VocabularyQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}