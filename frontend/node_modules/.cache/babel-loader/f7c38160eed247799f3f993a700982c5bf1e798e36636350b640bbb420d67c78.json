{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/pages/BookExplorer.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/BookExplorer.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper, TextField, MenuItem, Button } from '@mui/material';\nimport BookGraph from '../components/BookGraph';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookExplorer() {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedFilter, setSelectedFilter] = useState(null);\n  const [filterValue, setFilterValue] = useState('');\n  const [filterOptions, setFilterOptions] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchGraphData();\n  }, [selectedFilter, filterValue]);\n  const fetchGraphData = async () => {\n    try {\n      setLoading(true);\n      let url = 'http://localhost:3001/api/recommendations/graph';\n\n      // Add filter parameters if they exist\n      if (selectedFilter) {\n        url += `?nodeType=${selectedFilter}`;\n        if (filterValue) {\n          url += `&value=${encodeURIComponent(filterValue)}`;\n        }\n      }\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch graph data');\n      }\n      const data = await response.json();\n      if (!data.nodes || !data.links) {\n        console.error('Invalid graph data structure:', data);\n        setError('Invalid graph data structure received');\n        return;\n      }\n\n      // Filter out any invalid links\n      const validNodeIds = new Set(data.nodes.map(node => node.id));\n      const validLinks = data.links.filter(link => validNodeIds.has(link.source) && validNodeIds.has(link.target));\n      setGraphData({\n        nodes: data.nodes,\n        links: validLinks\n      });\n\n      // Update filter options based on node type\n      if (selectedFilter) {\n        const options = [...new Set(data.nodes.filter(node => node.type === selectedFilter).map(node => node.title || node.name))];\n        setFilterOptions(options);\n      }\n    } catch (err) {\n      console.error('Error fetching graph data:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFilterSelect = nodeType => {\n    setSelectedFilter(nodeType);\n    setFilterValue(''); // Clear the value filter when changing types\n  };\n  const handleNodeClick = node => {\n    if (node.type === 'Book') {\n      navigate(`/books/${node.properties.id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      mt: 4,\n      height: '90vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Book Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        gap: 2\n      },\n      children: [selectedFilter && filterOptions.length > 0 && /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        label: `Select ${selectedFilter}`,\n        value: filterValue,\n        onChange: e => setFilterValue(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), selectedFilter && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => {\n          setSelectedFilter(null);\n          setFilterValue('');\n        },\n        children: \"Clear Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        height: 'calc(100% - 100px)',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(BookGraph, {\n        graphData: graphData,\n        onNodeClick: handleNodeClick,\n        selectedFilter: selectedFilter,\n        onFilterSelect: handleFilterSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading book network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(BookExplorer, \"yDeA5BgSyNJD0j2GElKeY1sWhrM=\", false, function () {\n  return [useNavigate];\n});\n_c = BookExplorer;\nexport default BookExplorer;\nvar _c;\n$RefreshReg$(_c, \"BookExplorer\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","TextField","MenuItem","Button","BookGraph","useNavigate","jsxDEV","_jsxDEV","BookExplorer","_s","graphData","setGraphData","nodes","links","loading","setLoading","error","setError","selectedFilter","setSelectedFilter","filterValue","setFilterValue","filterOptions","setFilterOptions","navigate","fetchGraphData","url","encodeURIComponent","response","fetch","ok","Error","data","json","console","validNodeIds","Set","map","node","id","validLinks","filter","link","has","source","target","options","type","title","name","err","message","handleFilterSelect","nodeType","handleNodeClick","properties","maxWidth","sx","mt","height","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","gap","length","select","label","value","onChange","e","minWidth","option","onClick","elevation","overflow","onNodeClick","onFilterSelect","position","top","left","transform","color","_c","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/pages/BookExplorer.js"],"sourcesContent":["// frontend/src/pages/BookExplorer.js\nimport React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper,\n  TextField,\n  MenuItem,\n  Button\n} from '@mui/material';\nimport BookGraph from '../components/BookGraph';\nimport { useNavigate } from 'react-router-dom';\n\nfunction BookExplorer() {\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedFilter, setSelectedFilter] = useState(null);\n  const [filterValue, setFilterValue] = useState('');\n  const [filterOptions, setFilterOptions] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchGraphData();\n  }, [selectedFilter, filterValue]);\n\n  const fetchGraphData = async () => {\n    try {\n      setLoading(true);\n      let url = 'http://localhost:3001/api/recommendations/graph';\n      \n      // Add filter parameters if they exist\n      if (selectedFilter) {\n        url += `?nodeType=${selectedFilter}`;\n        if (filterValue) {\n          url += `&value=${encodeURIComponent(filterValue)}`;\n        }\n      }\n\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch graph data');\n      }\n      const data = await response.json();\n\n      if (!data.nodes || !data.links) {\n        console.error('Invalid graph data structure:', data);\n        setError('Invalid graph data structure received');\n        return;\n      }\n\n      // Filter out any invalid links\n      const validNodeIds = new Set(data.nodes.map(node => node.id));\n      const validLinks = data.links.filter(link => \n        validNodeIds.has(link.source) && validNodeIds.has(link.target)\n      );\n\n      setGraphData({\n        nodes: data.nodes,\n        links: validLinks\n      });\n\n      // Update filter options based on node type\n      if (selectedFilter) {\n        const options = [...new Set(data.nodes\n          .filter(node => node.type === selectedFilter)\n          .map(node => node.title || node.name)\n        )];\n        setFilterOptions(options);\n      }\n    } catch (err) {\n      console.error('Error fetching graph data:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFilterSelect = (nodeType) => {\n    setSelectedFilter(nodeType);\n    setFilterValue('');  // Clear the value filter when changing types\n  };\n\n  const handleNodeClick = (node) => {\n    if (node.type === 'Book') {\n      navigate(`/books/${node.properties.id}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, height: '90vh' }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Book Explorer\n      </Typography>\n      \n      {/* Filter Controls */}\n      <Box sx={{ mb: 3, display: 'flex', gap: 2 }}>\n        {selectedFilter && filterOptions.length > 0 && (\n          <TextField\n            select\n            label={`Select ${selectedFilter}`}\n            value={filterValue}\n            onChange={(e) => setFilterValue(e.target.value)}\n            sx={{ minWidth: 200 }}\n          >\n            {filterOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        )}\n        {selectedFilter && (\n          <Button \n            variant=\"outlined\" \n            onClick={() => {\n              setSelectedFilter(null);\n              setFilterValue('');\n            }}\n          >\n            Clear Filters\n          </Button>\n        )}\n      </Box>\n\n      <Paper elevation={3} sx={{ height: 'calc(100% - 100px)', overflow: 'hidden' }}>\n        <BookGraph \n          graphData={graphData}\n          onNodeClick={handleNodeClick}\n          selectedFilter={selectedFilter}\n          onFilterSelect={handleFilterSelect}\n        />\n      </Paper>\n\n      {loading && (\n        <Box sx={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\n          <Typography>Loading book network...</Typography>\n        </Box>\n      )}\n\n      {error && (\n        <Box sx={{ mt: 2 }}>\n          <Typography color=\"error\">Error: {error}</Typography>\n        </Box>\n      )}\n    </Container>\n  );\n}\n\nexport default BookExplorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}