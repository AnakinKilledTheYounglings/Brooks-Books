{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/components/VocabularyQuiz.js\",\n  _s = $RefreshSig$();\n// src/components/VocabularyQuiz.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Dialog, DialogTitle, DialogContent, Button, Typography, Box, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport WordEtymology from './WordEtymology'; // Add this import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VocabularyQuiz({\n  bookId,\n  open,\n  onClose\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showEtymology, setShowEtymology] = useState(false);\n\n  // Move fetchQuestions inside useCallback\n  const fetchQuestions = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/books/${bookId}/vocabulary`);\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  }, [bookId]); // Add bookId as dependency\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/users/vocabulary`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          wordId: questions[currentQuestion]._id,\n          answer: selectedAnswer\n        })\n      });\n      const data = await response.json();\n      if (data.correct) {\n        setScore(score + 1);\n        setShowEtymology(true);\n      }\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(currentQuestion + 1);\n        setSelectedAnswer('');\n        setShowEtymology(false);\n      } else {\n        // Quiz complete\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n    }\n  };\n  useEffect(() => {\n    if (open) {\n      fetchQuestions();\n    }\n  }, [open, bookId, fetchQuestions]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Vocabulary Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: questions.length > 0 && currentQuestion < questions.length ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: questions[currentQuestion].word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: selectedAnswer,\n          onChange: e => setSelectedAnswer(e.target.value),\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 28\n            }, this),\n            label: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          disabled: !selectedAnswer,\n          sx: {\n            mt: 2\n          },\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), showEtymology && /*#__PURE__*/_jsxDEV(WordEtymology, {\n          word: questions[currentQuestion].word,\n          etymology: questions[currentQuestion].etymology,\n          translations: questions[currentQuestion].translations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Quiz complete! Score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(VocabularyQuiz, \"hzxqjmiZk77QJgF1ascTF55DPeU=\");\n_c = VocabularyQuiz;\nexport default VocabularyQuiz;\nvar _c;\n$RefreshReg$(_c, \"VocabularyQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Dialog","DialogTitle","DialogContent","Button","Typography","Box","Radio","RadioGroup","FormControlLabel","WordEtymology","jsxDEV","_jsxDEV","VocabularyQuiz","bookId","open","onClose","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","showEtymology","setShowEtymology","fetchQuestions","response","fetch","data","json","error","console","handleSubmit","method","headers","localStorage","getItem","body","JSON","stringify","wordId","_id","answer","correct","length","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","word","value","onChange","e","target","options","map","option","index","control","label","onClick","disabled","sx","mt","etymology","translations","_c","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/VocabularyQuiz.js"],"sourcesContent":["// src/components/VocabularyQuiz.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  Typography,\n  Box,\n  Radio,\n  RadioGroup,\n  FormControlLabel\n} from '@mui/material';\nimport WordEtymology from './WordEtymology'; // Add this import\n\n\n\nfunction VocabularyQuiz({ bookId, open, onClose }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showEtymology, setShowEtymology] = useState(false);\n\n\n\n  // Move fetchQuestions inside useCallback\n  const fetchQuestions = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/books/${bookId}/vocabulary`);\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  }, [bookId]); // Add bookId as dependency\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/users/vocabulary`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          wordId: questions[currentQuestion]._id,\n          answer: selectedAnswer\n        })\n      });\n\n      const data = await response.json();\n      \n      if (data.correct) {\n        setScore(score + 1);\n        setShowEtymology(true);\n      }\n\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(currentQuestion + 1);\n        setSelectedAnswer('');\n        setShowEtymology(false);\n      } else {\n        // Quiz complete\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n    }\n  };\n\n  useEffect(() => {\n  if (open) {\n      fetchQuestions();\n  }\n  }, [open, bookId, fetchQuestions]);\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Vocabulary Quiz</DialogTitle>\n      <DialogContent>\n        {questions.length > 0 && currentQuestion < questions.length ? (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              {questions[currentQuestion].word}\n            </Typography>\n            <RadioGroup\n              value={selectedAnswer}\n              onChange={(e) => setSelectedAnswer(e.target.value)}\n            >\n              {questions[currentQuestion].options.map((option, index) => (\n                <FormControlLabel\n                  key={index}\n                  value={option}\n                  control={<Radio />}\n                  label={option}\n                />\n              ))}\n            </RadioGroup>\n            <Button\n              variant=\"contained\"\n              onClick={handleSubmit}\n              disabled={!selectedAnswer}\n              sx={{ mt: 2 }}\n            >\n              Submit Answer\n            </Button>\n\n            {showEtymology && (\n              <WordEtymology \n                word={questions[currentQuestion].word}\n                etymology={questions[currentQuestion].etymology}\n                translations={questions[currentQuestion].translations}\n              />\n            )}\n          </Box>\n        ) : (\n          <Typography>\n            Quiz complete! Score: {score}/{questions.length}\n          </Typography>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default VocabularyQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}