{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/pages/AdminDashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/pages/AdminDashboard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Container, Typography, Box, Card, CardContent, Button, TextField, Grid, Tab, Tabs, IconButton, Chip, Upload, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { Delete, Edit, Add, CloudUpload } from '@mui/icons-material';\nimport { GENRES } from '../constants/bookConstants';\n\n// In frontend/src/pages/AdminDashboard.js, update the VocabularyManagement component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VocabularyManagement = () => {\n  _s();\n  const [vocabularyWords, setVocabularyWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  useEffect(() => {\n    console.log('VocabularyManagement component mounted');\n    fetchVocabularyWords();\n  }, []);\n  const fetchVocabularyWords = async () => {\n    try {\n      console.log('Fetching vocabulary words...');\n      const response = await fetch('http://localhost:3001/api/vocabulary', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      console.log('Fetched vocabulary data:', data);\n      setVocabularyWords(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching vocabulary:', error);\n      setLoading(false);\n    }\n  };\n  const handleDeleteWord = async wordId => {\n    if (window.confirm('Are you sure you want to delete this word?')) {\n      try {\n        const response = await fetch(`http://localhost:3001/api/vocabulary/${wordId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          fetchVocabularyWords();\n        }\n      } catch (error) {\n        console.error('Error deleting word:', error);\n      }\n    }\n  };\n\n  // Render a sample Excel format for users\n  const sampleExcelFormat = `\n    Word | Definition | Example Sentence\n    happy | feeling or showing pleasure | She was happy to see her friends.\n    brave | ready to face danger | The brave firefighter saved the cat.\n    curious | eager to learn | The curious student asked many questions.\n  `;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }, this),\n        onClick: () => setOpenUploadDialog(true),\n        children: \"Upload Vocabulary (Excel/CSV)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Sample Excel Format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '1rem',\n            borderRadius: '4px',\n            whiteSpace: 'pre-wrap'\n          },\n          children: sampleExcelFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: vocabularyWords.map(word => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'start'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: word.word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  children: [\"Book: \", word.bookId ? word.bookId.title : 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: [\"Definition: \", word.definition]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), word.etymology && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Etymology: \", word.etymology.root, \" (\", word.etymology.originLanguage, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteWord(word._id),\n                  color: \"error\",\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, word._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openUploadDialog,\n      onClose: () => setOpenUploadDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Upload Vocabulary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          sx: {\n            mt: 1\n          },\n          children: \"Upload an Excel file (.xlsx) or CSV file with your vocabulary words. Please ensure it follows the format shown in the example above.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          sx: {\n            mt: 2\n          },\n          children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            accept: \".xlsx,.csv\",\n            onChange: async e => {\n              const file = e.target.files[0];\n              if (file) {\n                const formData = new FormData();\n                formData.append('file', file);\n                try {\n                  const response = await fetch('http://localhost:3001/api/vocabulary/upload', {\n                    method: 'POST',\n                    headers: {\n                      'Authorization': `Bearer ${localStorage.getItem('token')}`\n                    },\n                    body: formData\n                  });\n                  if (response.ok) {\n                    setOpenUploadDialog(false);\n                    fetchVocabularyWords();\n                  }\n                } catch (error) {\n                  console.error('Error uploading vocabulary:', error);\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenUploadDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyManagement, \"GRwWG750JPiMdA/H8ftwd+8iDQ8=\");\n_c = VocabularyManagement;\nfunction AdminDashboard() {\n  _s2();\n  const [activeTab, setActiveTab] = useState(0);\n  const [books, setBooks] = useState([]);\n  const [openBookDialog, setOpenBookDialog] = useState(false);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [bookFormData, setBookFormData] = useState({\n    title: '',\n    author: '',\n    description: '',\n    genres: [],\n    tags: [],\n    tagInput: '',\n    ageRange: {\n      min: 8,\n      max: 15\n    }\n  });\n  const [stats, setStats] = useState({\n    totalBooks: 0,\n    totalDrawings: 0,\n    activeUsers: 0\n  });\n\n  // First, make fetchBooks a useCallback\n  const fetchBooks = useCallback(async () => {\n    try {\n      //console.log('Fetching books...');\n      const response = await fetch('http://localhost:3001/api/books');\n      const data = await response.json();\n      //console.log('Books fetched:', data);\n      setBooks(data);\n      //setLoading(false);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n      //setError('Failed to load books');\n      //setLoading(false);\n    }\n  }, []); // Empty dependency array since it doesn't depend on state\n\n  const fetchStats = useCallback(async () => {\n    try {\n      // Calculate stats from books data\n      const statsData = {\n        totalBooks: books.length,\n        totalDrawings: books.reduce((sum, book) => {\n          var _book$drawings;\n          return sum + (((_book$drawings = book.drawings) === null || _book$drawings === void 0 ? void 0 : _book$drawings.length) || 0);\n        }, 0),\n        activeUsers: new Set(books.flatMap(book => (book.drawings || []).map(drawing => drawing.userId))).size,\n        booksPerAgeGroup: books.reduce((acc, book) => {\n          const range = `${book.ageRange.min}-${book.ageRange.max}`;\n          acc[range] = (acc[range] || 0) + 1;\n          return acc;\n        }, {})\n      };\n      setStats(statsData);\n      console.log('Updated stats:', statsData); // Debug log\n    } catch (error) {\n      console.error('Error calculating stats:', error);\n    }\n  }, [books]);\n\n  // Make sure this useEffect is present\n  useEffect(() => {\n    fetchStats();\n  }, [books, fetchStats]);\n  useEffect(() => {\n    console.log('Starting to fetch books');\n    fetchBooks();\n  }, [fetchBooks]);\n  const handleBookSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      console.log('Auth token:', token);\n      console.log('Selected book:', selectedBook);\n\n      // Ensure bookFormData.tags is an array\n      const existingTags = Array.isArray(bookFormData.tags) ? bookFormData.tags : [];\n\n      // Process the new tags\n      const newTags = bookFormData.tagInput ? bookFormData.tagInput.split(',').map(tag => tag.trim()).filter(tag => tag) : [];\n\n      // Combine existing and new tags, remove duplicates\n      const allTags = [...new Set([...existingTags, ...newTags])];\n      const dataToSend = {\n        ...bookFormData,\n        tags: allTags\n      };\n      delete dataToSend.tagInput;\n      const url = selectedBook ? `http://localhost:3001/api/books/${selectedBook._id}` : 'http://localhost:3001/api/books';\n      const method = selectedBook ? 'PUT' : 'POST';\n      console.log('Sending request:', {\n        url,\n        method,\n        data: dataToSend\n      });\n\n      // Before the fetch\n      console.log('About to send:', {\n        url,\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: dataToSend\n      });\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(dataToSend)\n      });\n      if (!response.ok) {\n        const text = await response.text();\n        console.error('Server response:', text);\n        throw new Error(`Server error: ${text}`);\n      }\n      const data = await response.json();\n      console.log('Success response:', data);\n      console.log('Response status:', response.status);\n      console.log('Response headers:', [...response.headers.entries()]);\n      setOpenBookDialog(false);\n      fetchBooks();\n      setSelectedBook(null);\n      setBookFormData({\n        title: '',\n        author: '',\n        description: '',\n        genres: [],\n        tags: [],\n        tagInput: '',\n        ageRange: {\n          min: 8,\n          max: 15\n        }\n      });\n    } catch (error) {\n      console.error('Error saving book:', error);\n      alert('Failed to save book: ' + error.message);\n    }\n  };\n\n  // In your AdminDashboard.js, update the handleBookSubmit function:\n\n  // Add genre field to the dialog form:\n  /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    label: \"Genre\",\n    value: bookFormData.genre || '',\n    onChange: e => setBookFormData({\n      ...bookFormData,\n      genre: e.target.value\n    }),\n    margin: \"normal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 3\n  }, this);\n  const handleDeleteBook = async bookId => {\n    if (window.confirm('Are you sure you want to delete this book?')) {\n      try {\n        const response = await fetch(`http://localhost:3001/api/books/${bookId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          fetchBooks();\n        }\n      } catch (error) {\n        console.error('Error deleting book:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: (e, newValue) => setActiveTab(newValue),\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Books Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Content Moderation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Vocabulary Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 26\n          }, this),\n          onClick: () => {\n            setSelectedBook(null);\n            setBookFormData({\n              title: '',\n              author: '',\n              description: '',\n              ageRange: {\n                min: 8,\n                max: 15\n              }\n            });\n            setOpenBookDialog(true);\n          },\n          children: \"Add New Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: books.map(book => {\n          var _book$drawings2;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'start'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: book.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"textSecondary\",\n                      children: book.author\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        mt: 1\n                      },\n                      children: [\"Age Range: \", book.ageRange.min, \"-\", book.ageRange.max]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: [\"Drawings: \", ((_book$drawings2 = book.drawings) === null || _book$drawings2 === void 0 ? void 0 : _book$drawings2.length) || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => {\n                        setSelectedBook(book);\n                        setBookFormData({\n                          title: book.title,\n                          author: book.author,\n                          description: book.description,\n                          genres: book.genres || [],\n                          tags: book.tags || [],\n                          ageRange: book.ageRange\n                        });\n                        setOpenBookDialog(true);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => handleDeleteBook(book._id),\n                      color: \"error\",\n                      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, book._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Platform Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Total Books\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.totalBooks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Total Drawings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.totalDrawings\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Active Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.activeUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Content Moderation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 9\n    }, this), activeTab === 3 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [console.log('Rendering vocabulary tab'), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Vocabulary Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VocabularyManagement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openBookDialog,\n      onClose: () => setOpenBookDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleBookSubmit,\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: selectedBook ? 'Edit Book' : 'Add New Book'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Title\",\n          value: bookFormData.title,\n          onChange: e => setBookFormData({\n            ...bookFormData,\n            title: e.target.value\n          }),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Author\",\n          value: bookFormData.author,\n          onChange: e => setBookFormData({\n            ...bookFormData,\n            author: e.target.value\n          }),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          value: bookFormData.description,\n          onChange: e => setBookFormData({\n            ...bookFormData,\n            description: e.target.value\n          }),\n          margin: \"normal\",\n          multiline: true,\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1,\n              flexWrap: 'wrap'\n            },\n            children: GENRES.map(genre => {\n              var _bookFormData$genres, _bookFormData$genres2;\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                label: genre,\n                onClick: () => {\n                  const currentGenres = bookFormData.genres || [];\n                  if (currentGenres.includes(genre)) {\n                    setBookFormData({\n                      ...bookFormData,\n                      genres: currentGenres.filter(g => g !== genre)\n                    });\n                  } else {\n                    setBookFormData({\n                      ...bookFormData,\n                      genres: [...currentGenres, genre]\n                    });\n                  }\n                },\n                color: (_bookFormData$genres = bookFormData.genres) !== null && _bookFormData$genres !== void 0 && _bookFormData$genres.includes(genre) ? \"primary\" : \"default\",\n                variant: (_bookFormData$genres2 = bookFormData.genres) !== null && _bookFormData$genres2 !== void 0 && _bookFormData$genres2.includes(genre) ? \"filled\" : \"outlined\"\n              }, genre, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Add tags (comma-separated)\",\n            value: bookFormData.tagInput || '',\n            onChange: e => {\n              setBookFormData({\n                ...bookFormData,\n                tagInput: e.target.value\n              });\n            },\n            helperText: \"Enter new tags separated by commas, they will be added when you save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), bookFormData.tags && bookFormData.tags.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1,\n              display: 'flex',\n              gap: 0.5,\n              flexWrap: 'wrap'\n            },\n            children: bookFormData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: tag,\n              onDelete: () => {\n                setBookFormData({\n                  ...bookFormData,\n                  tags: bookFormData.tags.filter((_, i) => i !== index)\n                });\n              },\n              size: \"small\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Age Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Min Age\",\n                type: \"number\",\n                value: bookFormData.ageRange.min,\n                onChange: e => setBookFormData({\n                  ...bookFormData,\n                  ageRange: {\n                    ...bookFormData.ageRange,\n                    min: parseInt(e.target.value)\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Max Age\",\n                type: \"number\",\n                value: bookFormData.ageRange.max,\n                onChange: e => setBookFormData({\n                  ...bookFormData,\n                  ageRange: {\n                    ...bookFormData.ageRange,\n                    max: parseInt(e.target.value)\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenBookDialog(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: selectedBook ? 'Save Changes' : 'Add Book'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n}\n\n// Bottom: export\n_s2(AdminDashboard, \"y7EypSapPz4Ghbw+HLULqov4Soc=\");\n_c2 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"VocabularyManagement\");\n$RefreshReg$(_c2, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Typography","Box","Card","CardContent","Button","TextField","Grid","Tab","Tabs","IconButton","Chip","Upload","CircularProgress","Dialog","DialogTitle","DialogContent","DialogActions","Delete","Edit","Add","CloudUpload","GENRES","jsxDEV","_jsxDEV","Fragment","_Fragment","VocabularyManagement","_s","vocabularyWords","setVocabularyWords","loading","setLoading","openUploadDialog","setOpenUploadDialog","console","log","fetchVocabularyWords","response","fetch","headers","localStorage","getItem","data","json","error","handleDeleteWord","wordId","window","confirm","method","ok","sampleExcelFormat","children","sx","mb","display","justifyContent","variant","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","gutterBottom","style","backgroundColor","padding","borderRadius","whiteSpace","container","spacing","map","word","item","xs","alignItems","color","bookId","title","mt","definition","etymology","root","originLanguage","_id","open","onClose","component","type","hidden","accept","onChange","e","file","target","files","formData","FormData","append","body","_c","AdminDashboard","_s2","activeTab","setActiveTab","books","setBooks","openBookDialog","setOpenBookDialog","selectedBook","setSelectedBook","bookFormData","setBookFormData","author","description","genres","tags","tagInput","ageRange","min","max","stats","setStats","totalBooks","totalDrawings","activeUsers","fetchBooks","fetchStats","statsData","length","reduce","sum","book","_book$drawings","drawings","Set","flatMap","drawing","userId","size","booksPerAgeGroup","acc","range","handleBookSubmit","preventDefault","token","existingTags","Array","isArray","newTags","split","tag","trim","filter","allTags","dataToSend","url","JSON","stringify","text","Error","status","entries","alert","message","fullWidth","label","value","genre","margin","handleDeleteBook","maxWidth","newValue","_book$drawings2","md","onSubmit","p","required","multiline","rows","gap","flexWrap","_bookFormData$genres","_bookFormData$genres2","currentGenres","includes","g","helperText","index","onDelete","_","i","parseInt","_c2","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["// frontend/src/pages/AdminDashboard.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  Grid,\n  Tab,\n  Tabs,\n  IconButton,\n  Chip,\n  Upload,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\nimport { Delete, Edit, Add, CloudUpload, } from '@mui/icons-material';\nimport { GENRES } from '../constants/bookConstants';\n\n// In frontend/src/pages/AdminDashboard.js, update the VocabularyManagement component\n\nconst VocabularyManagement = () => {\n  const [vocabularyWords, setVocabularyWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  \n  useEffect(() => {\n    console.log('VocabularyManagement component mounted');\n    fetchVocabularyWords();\n  }, []);\n\n  const fetchVocabularyWords = async () => {\n    try {\n      console.log('Fetching vocabulary words...');\n      const response = await fetch('http://localhost:3001/api/vocabulary', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      console.log('Fetched vocabulary data:', data);\n      setVocabularyWords(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching vocabulary:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteWord = async (wordId) => {\n    if (window.confirm('Are you sure you want to delete this word?')) {\n      try {\n        const response = await fetch(`http://localhost:3001/api/vocabulary/${wordId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          fetchVocabularyWords();\n        }\n      } catch (error) {\n        console.error('Error deleting word:', error);\n      }\n    }\n  };\n\n  // Render a sample Excel format for users\n  const sampleExcelFormat = `\n    Word | Definition | Example Sentence\n    happy | feeling or showing pleasure | She was happy to see her friends.\n    brave | ready to face danger | The brave firefighter saved the cat.\n    curious | eager to learn | The curious student asked many questions.\n  `;\n\n  return (\n    <Box>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between' }}>\n        <Button\n          variant=\"contained\"\n          startIcon={<CloudUpload />}\n          onClick={() => setOpenUploadDialog(true)}\n        >\n          Upload Vocabulary (Excel/CSV)\n        </Button>\n      </Box>\n\n      {/* Sample Format Card */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>Sample Excel Format</Typography>\n          <pre style={{ \n            backgroundColor: '#f5f5f5', \n            padding: '1rem', \n            borderRadius: '4px',\n            whiteSpace: 'pre-wrap'\n          }}>\n            {sampleExcelFormat}\n          </pre>\n        </CardContent>\n      </Card>\n\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={3}>\n          {vocabularyWords.map((word) => (\n            <Grid item xs={12} key={word._id}>\n              <Card>\n                <CardContent>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n                    <div>\n                      <Typography variant=\"h6\">{word.word}</Typography>\n                      <Typography color=\"textSecondary\">\n                        Book: {word.bookId ? word.bookId.title : 'N/A'}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                        Definition: {word.definition}\n                      </Typography>\n                      {word.etymology && (\n                        <Typography variant=\"body2\">\n                          Etymology: {word.etymology.root} ({word.etymology.originLanguage})\n                        </Typography>\n                      )}\n                    </div>\n                    <div>\n                      <IconButton \n                        onClick={() => handleDeleteWord(word._id)}\n                        color=\"error\"\n                      >\n                        <Delete />\n                      </IconButton>\n                    </div>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n\n      {/* Upload Dialog */}\n      <Dialog open={openUploadDialog} onClose={() => setOpenUploadDialog(false)}>\n        <DialogTitle>Upload Vocabulary</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body2\" gutterBottom sx={{ mt: 1 }}>\n            Upload an Excel file (.xlsx) or CSV file with your vocabulary words.\n            Please ensure it follows the format shown in the example above.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component=\"label\"\n            sx={{ mt: 2 }}\n          >\n            Choose File\n            <input\n              type=\"file\"\n              hidden\n              accept=\".xlsx,.csv\"\n              onChange={async (e) => {\n                const file = e.target.files[0];\n                if (file) {\n                  const formData = new FormData();\n                  formData.append('file', file);\n                  \n                  try {\n                    const response = await fetch('http://localhost:3001/api/vocabulary/upload', {\n                      method: 'POST',\n                      headers: {\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\n                      },\n                      body: formData\n                    });\n                    \n                    if (response.ok) {\n                      setOpenUploadDialog(false);\n                      fetchVocabularyWords();\n                    }\n                  } catch (error) {\n                    console.error('Error uploading vocabulary:', error);\n                  }\n                }\n              }}\n            />\n          </Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenUploadDialog(false)}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\n\n\nfunction AdminDashboard() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [books, setBooks] = useState([]);\n  const [openBookDialog, setOpenBookDialog] = useState(false);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [bookFormData, setBookFormData] = useState({\n    title: '',\n    author: '',\n    description: '',\n    genres: [],\n    tags: [],\n    tagInput: '',\n    ageRange: { min: 8, max: 15 }\n  });\n  const [stats, setStats] = useState({\n    totalBooks: 0,\n    totalDrawings: 0,\n    activeUsers: 0\n  });\n  \n  \n\n  // First, make fetchBooks a useCallback\n  const fetchBooks = useCallback(async () => {\n    try {\n      //console.log('Fetching books...');\n      const response = await fetch('http://localhost:3001/api/books');\n      const data = await response.json();\n      //console.log('Books fetched:', data);\n      setBooks(data);\n      //setLoading(false);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n      //setError('Failed to load books');\n      //setLoading(false);\n    }\n  }, []); // Empty dependency array since it doesn't depend on state\n  \n  \n    const fetchStats = useCallback(async () => {\n      try {\n        // Calculate stats from books data\n        const statsData = {\n          totalBooks: books.length,\n          totalDrawings: books.reduce((sum, book) => sum + (book.drawings?.length || 0), 0),\n          activeUsers: new Set(books.flatMap(book => \n            (book.drawings || []).map(drawing => drawing.userId)\n          )).size,\n          booksPerAgeGroup: books.reduce((acc, book) => {\n            const range = `${book.ageRange.min}-${book.ageRange.max}`;\n            acc[range] = (acc[range] || 0) + 1;\n            return acc;\n          }, {})\n        };\n        \n        setStats(statsData);\n        console.log('Updated stats:', statsData); // Debug log\n      } catch (error) {\n        console.error('Error calculating stats:', error);\n      }\n    }, [books]);\n  \n  \n    // Make sure this useEffect is present\n    useEffect(() => {\n      fetchStats();\n    }, [books, fetchStats]);\n    useEffect(() => {\n          console.log('Starting to fetch books');\n          fetchBooks();\n        }, [fetchBooks]);\n  \n    const handleBookSubmit = async (e) => {\n      e.preventDefault();\n      try {\n        const token = localStorage.getItem('token');\n        console.log('Auth token:', token);\n        console.log('Selected book:', selectedBook);\n    \n        // Ensure bookFormData.tags is an array\n        const existingTags = Array.isArray(bookFormData.tags) ? bookFormData.tags : [];\n    \n        // Process the new tags\n        const newTags = bookFormData.tagInput\n          ? bookFormData.tagInput.split(',').map(tag => tag.trim()).filter(tag => tag)\n          : [];\n    \n        // Combine existing and new tags, remove duplicates\n        const allTags = [...new Set([...existingTags, ...newTags])];\n    \n        const dataToSend = {\n          ...bookFormData,\n          tags: allTags\n        };\n        delete dataToSend.tagInput;\n    \n        const url = selectedBook\n          ? `http://localhost:3001/api/books/${selectedBook._id}`\n          : 'http://localhost:3001/api/books';\n    \n        const method = selectedBook ? 'PUT' : 'POST';\n        console.log('Sending request:', {\n          url,\n          method,\n          data: dataToSend\n        });\n\n        // Before the fetch\n        console.log('About to send:', {\n          url,\n          method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          },\n          body: dataToSend\n        });\n        \n        const response = await fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          },\n          body: JSON.stringify(dataToSend)\n        });\n    \n    \n        if (!response.ok) {\n          const text = await response.text();\n          console.error('Server response:', text);\n          throw new Error(`Server error: ${text}`);\n        }\n    \n        const data = await response.json();\n        console.log('Success response:', data);\n\n        console.log('Response status:', response.status);\n        console.log('Response headers:', [...response.headers.entries()]);\n    \n        setOpenBookDialog(false);\n        fetchBooks();\n        setSelectedBook(null);\n        setBookFormData({\n          title: '',\n          author: '',\n          description: '',\n          genres: [],\n          tags: [],\n          tagInput: '',\n          ageRange: { min: 8, max: 15 }\n        });\n      } catch (error) {\n        console.error('Error saving book:', error);\n        alert('Failed to save book: ' + error.message);\n      }\n    };\n\n\n  // In your AdminDashboard.js, update the handleBookSubmit function:\n  \n  \n  // Add genre field to the dialog form:\n  <TextField\n    fullWidth\n    label=\"Genre\"\n    value={bookFormData.genre || ''}\n    onChange={(e) => setBookFormData({ ...bookFormData, genre: e.target.value })}\n    margin=\"normal\"\n  />\n\n  const handleDeleteBook = async (bookId) => {\n    if (window.confirm('Are you sure you want to delete this book?')) {\n      try {\n        const response = await fetch(`http://localhost:3001/api/books/${bookId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n\n        if (response.ok) {\n          fetchBooks();\n        }\n      } catch (error) {\n        console.error('Error deleting book:', error);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Admin Dashboard\n      </Typography>\n\n      <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)} sx={{ mb: 4 }}>\n        <Tab label=\"Books Management\" />\n        <Tab label=\"Statistics\" />\n        <Tab label=\"Content Moderation\" />\n        <Tab label=\"Vocabulary Management\" /> {/* Add this new tab */}\n      </Tabs>\n\n      {activeTab === 0 && (\n        <>\n          <Box sx={{ mb: 3 }}>\n            <Button\n              variant=\"contained\"\n              startIcon={<Add />}\n              onClick={() => {\n                setSelectedBook(null);\n                setBookFormData({\n                  title: '',\n                  author: '',\n                  description: '',\n                  ageRange: { min: 8, max: 15 }\n                });\n                setOpenBookDialog(true);\n              }}\n            >\n              Add New Book\n            </Button>\n          </Box>\n\n          \n\n          <Grid container spacing={3}>\n            {books.map((book) => (\n              <Grid item xs={12} md={6} key={book._id}>\n                <Card>\n                  <CardContent>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n                      <div>\n                        <Typography variant=\"h6\">{book.title}</Typography>\n                        <Typography color=\"textSecondary\">{book.author}</Typography>\n                        <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                          Age Range: {book.ageRange.min}-{book.ageRange.max}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          Drawings: {book.drawings?.length || 0}\n                        </Typography>\n                      </div>\n                      <div>\n                        <IconButton\n                          onClick={() => {\n                            setSelectedBook(book);\n                            setBookFormData({\n                              title: book.title,\n                              author: book.author,\n                              description: book.description,\n                              genres: book.genres || [],\n                              tags: book.tags || [],\n                              ageRange: book.ageRange\n                            });\n                            setOpenBookDialog(true);\n                          }}\n                        >\n                          <Edit />\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteBook(book._id)} color=\"error\">\n                          <Delete />\n                        </IconButton>\n                      </div>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n\n  \n  \n  \n      {activeTab === 1 && (\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>Platform Statistics</Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={4}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Total Books\n                  </Typography>\n                  <Typography variant=\"h4\">{stats.totalBooks}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Total Drawings\n                  </Typography>\n                  <Typography variant=\"h4\">{stats.totalDrawings}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Active Users\n                  </Typography>\n                  <Typography variant=\"h4\">{stats.activeUsers}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n  \n      {activeTab === 2 && (\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>Content Moderation</Typography>\n          {/* Content moderation content */}\n        </Box>\n      )}\n\n      {activeTab === 3 && (\n        <Box>\n          {console.log('Rendering vocabulary tab')}\n          <Typography variant=\"h5\" gutterBottom>Vocabulary Management</Typography>\n          <VocabularyManagement />\n        </Box>\n      )}\n    \n  \n\n      {/* Book Dialog */}\n      <Dialog open={openBookDialog} onClose={() => setOpenBookDialog(false)} maxWidth=\"sm\" fullWidth>\n        <Box component=\"form\" onSubmit={handleBookSubmit} sx={{ p: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {selectedBook ? 'Edit Book' : 'Add New Book'}\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Title\"\n            value={bookFormData.title}\n            onChange={(e) => setBookFormData({ ...bookFormData, title: e.target.value })}\n            margin=\"normal\"\n            required\n          />\n          <TextField\n            fullWidth\n            label=\"Author\"\n            value={bookFormData.author}\n            onChange={(e) => setBookFormData({ ...bookFormData, author: e.target.value })}\n            margin=\"normal\"\n            required\n          />\n          <TextField\n            fullWidth\n            label=\"Description\"\n            value={bookFormData.description}\n            onChange={(e) => setBookFormData({ ...bookFormData, description: e.target.value })}\n            margin=\"normal\"\n            multiline\n            rows={3}\n          />\n          {/* Genre Selection */}\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>Genres</Typography>\n            <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n              {GENRES.map((genre) => (\n                <Chip\n                  key={genre}\n                  label={genre}\n                  onClick={() => {\n                    const currentGenres = bookFormData.genres || [];\n                    if (currentGenres.includes(genre)) {\n                      setBookFormData({\n                        ...bookFormData,\n                        genres: currentGenres.filter(g => g !== genre)\n                      });\n                    } else {\n                      setBookFormData({\n                        ...bookFormData,\n                        genres: [...currentGenres, genre]\n                      });\n                    }\n                  }}\n                  color={bookFormData.genres?.includes(genre) ? \"primary\" : \"default\"}\n                  variant={bookFormData.genres?.includes(genre) ? \"filled\" : \"outlined\"}\n                />\n              ))}\n            </Box>\n          </Box>\n          \n          {/* Tags Input */}\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>Tags</Typography>\n            <TextField\n              fullWidth\n              label=\"Add tags (comma-separated)\"\n              value={bookFormData.tagInput || ''}\n              onChange={(e) => {\n                setBookFormData({\n                  ...bookFormData,\n                  tagInput: e.target.value\n                });\n              }}\n              helperText=\"Enter new tags separated by commas, they will be added when you save\"\n            />\n            {bookFormData.tags && bookFormData.tags.length > 0 && (\n              <Box sx={{ mt: 1, display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\n                {bookFormData.tags.map((tag, index) => (\n                  <Chip\n                    key={index}\n                    label={tag}\n                    onDelete={() => {\n                      setBookFormData({\n                        ...bookFormData,\n                        tags: bookFormData.tags.filter((_, i) => i !== index)\n                      });\n                    }}\n                    size=\"small\"\n                  />\n                ))}\n              </Box>\n            )}\n          </Box>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>Age Range</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <TextField\n                  fullWidth\n                  label=\"Min Age\"\n                  type=\"number\"\n                  value={bookFormData.ageRange.min}\n                  onChange={(e) => setBookFormData({\n                    ...bookFormData,\n                    ageRange: { ...bookFormData.ageRange, min: parseInt(e.target.value) }\n                  })}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  fullWidth\n                  label=\"Max Age\"\n                  type=\"number\"\n                  value={bookFormData.ageRange.max}\n                  onChange={(e) => setBookFormData({\n                    ...bookFormData,\n                    ageRange: { ...bookFormData.ageRange, max: parseInt(e.target.value) }\n                  })}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\n            <Button onClick={() => setOpenBookDialog(false)}>Cancel</Button>\n            <Button type=\"submit\" variant=\"contained\">\n              {selectedBook ? 'Save Changes' : 'Add Book'}\n            </Button>\n          </Box>\n        </Box>\n      </Dialog>\n    </Container>\n  );\n}\n\n// Bottom: export\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}