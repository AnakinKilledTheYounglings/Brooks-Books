{"ast":null,"code":"// frontend/src/components/vocabulary/VocabularyInterface.jsx\nimport React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import vocabularyService from'../../services/vocabularyService';import{getWordDetails}from'../../utils/wordProcessing';import TranslationPanel from'./TranslationPanel';import EtymologyTree from'../EtymologyTree';import Etymology from'./Etymology';import{Book,Search,Save}from'lucide-react';import{etymologyService}from'../../services/etymologyService';import{Card}from'../ui/card';import{Button}from'../ui/button';import{Textarea}from'../ui/textarea';import{Alert}from'../ui/alert';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VocabularyInterface=_ref=>{let{bookId}=_ref;const navigate=useNavigate();const[passage,setPassage]=useState('');const[selectedWord,setSelectedWord]=useState('');const[wordDetails,setWordDetails]=useState(null);const[savedWords,setSavedWords]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');// Load saved words for this book\nuseEffect(()=>{if(bookId){loadSavedWords();}},[bookId]);const loadSavedWords=async()=>{try{const words=await vocabularyService.getBookVocabulary(bookId);setSavedWords(words);}catch(err){setError('Failed to load vocabulary words');console.error(err);}};const handleTextSelection=()=>{const selection=window.getSelection();const selectedText=selection.toString().trim();if(selectedText&&selectedText.split(' ').length===1){setSelectedWord(selectedText);handleWordLookup(selectedText);}};const handleWordLookup=async word=>{setLoading(true);try{console.log('Looking up word:',word);const wordData=await getWordDetails(word);console.log('Word data received:',wordData);setWordDetails({word:wordData.word,definitions:wordData.definitions,etymology:wordData.etymology,phonetics:wordData.phonetics,translations:wordData.translations,partOfSpeech:wordData.partOfSpeech});}catch(err){setError('Failed to look up word details');console.error(err);}finally{setLoading(false);}};const handleSaveWord=async()=>{if(!selectedWord||!wordDetails)return;try{const wordData={word:selectedWord,bookId,context:{passage:passage,pageNumber:null},etymology:wordDetails.etymology,definitions:wordDetails.definitions,translations:wordDetails.translations};await vocabularyService.addVocabularyWord(wordData);await loadSavedWords();setSelectedWord('');setWordDetails(null);}catch(err){setError('Failed to save word');console.error(err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto p-4 space-y-6\",children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"destructive\",children:error}),/*#__PURE__*/_jsxs(Card,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"Vocabulary Helper\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Enter Book Passage\"}),/*#__PURE__*/_jsx(Textarea,{value:passage,onChange:e=>setPassage(e.target.value),placeholder:\"Enter a passage from the book...\",className:\"min-h-[200px]\"})]}),passage&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-2\",children:\"Select Words for Analysis\"}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border rounded-lg bg-gray-50\",onMouseUp:handleTextSelection,children:passage})]}),selectedWord&&wordDetails&&/*#__PURE__*/_jsxs(Card,{className:\"p-6 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-2xl font-semibold text-amber-900\",children:[\"Word Analysis: \",selectedWord]}),/*#__PURE__*/_jsxs(Button,{onClick:handleSaveWord,disabled:loading,className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Save,{className:\"w-4 h-4\"}),\"Save Word\"]})]}),wordDetails.phonetics&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:wordDetails.phonetics.text}),wordDetails.phonetics.audio&&/*#__PURE__*/_jsx(\"audio\",{controls:true,src:wordDetails.phonetics.audio,className:\"mt-2\",children:\"Your browser does not support the audio element.\"})]}),wordDetails.definitions&&wordDetails.definitions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-lg\",children:\"Definitions:\"}),wordDetails.definitions.map((def,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4 p-2 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"italic\",children:def.partOfSpeech}),\": \",def.definition]}),def.example&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 ml-4 mt-1\",children:[\"Example: \\\"\",def.example,\"\\\"\"]})]},index))]}),wordDetails.etymology&&/*#__PURE__*/_jsx(EtymologyTree,{etymologyData:{word:selectedWord,...wordDetails.etymology}}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-lg mb-3\",children:\"Translations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-3 gap-4\",children:Object.entries(wordDetails.translations).map(_ref2=>{let[lang,translation]=_ref2;if(!translation)return null;const langNames={es:'Spanish',fr:'French',pt:'Portuguese',it:'Italian',hi:'Hindi',zh:'Chinese'};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 bg-white rounded-lg shadow-sm border border-gray-100\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:langNames[lang]}),/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:translation})]},lang);})})]})]})]})]}),savedWords.length>0&&/*#__PURE__*/_jsxs(Card,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold mb-4\",children:\"Saved Words\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:savedWords.map((word,index)=>{var _word$etymology,_word$context;return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 border rounded-lg hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:word.word}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Root: \",(_word$etymology=word.etymology)===null||_word$etymology===void 0?void 0:_word$etymology.root]}),((_word$context=word.context)===null||_word$context===void 0?void 0:_word$context.passage)&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:[\"Context: \\\"\",word.context.passage,\"\\\"\"]})]},index);})})]})]});};export default VocabularyInterface;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","vocabularyService","getWordDetails","TranslationPanel","EtymologyTree","Etymology","Book","Search","Save","etymologyService","Card","Button","Textarea","Alert","jsx","_jsx","jsxs","_jsxs","VocabularyInterface","_ref","bookId","navigate","passage","setPassage","selectedWord","setSelectedWord","wordDetails","setWordDetails","savedWords","setSavedWords","loading","setLoading","error","setError","loadSavedWords","words","getBookVocabulary","err","console","handleTextSelection","selection","window","getSelection","selectedText","toString","trim","split","length","handleWordLookup","word","log","wordData","definitions","etymology","phonetics","translations","partOfSpeech","handleSaveWord","context","pageNumber","addVocabularyWord","className","children","variant","value","onChange","e","target","placeholder","onMouseUp","onClick","disabled","text","audio","controls","src","map","def","index","definition","example","etymologyData","Object","entries","_ref2","lang","translation","langNames","es","fr","pt","it","hi","zh","_word$etymology","_word$context","root"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/vocabulary/VocabularyInterface.jsx"],"sourcesContent":["// frontend/src/components/vocabulary/VocabularyInterface.jsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport vocabularyService from '../../services/vocabularyService';\nimport { getWordDetails } from '../../utils/wordProcessing';\nimport TranslationPanel from './TranslationPanel';\nimport EtymologyTree from '../EtymologyTree';\nimport Etymology from './Etymology';\nimport { Book, Search, Save } from 'lucide-react';\nimport { etymologyService } from '../../services/etymologyService';\n\nimport { Card } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { Textarea } from '../ui/textarea';\nimport { Alert } from '../ui/alert';\n\n\n\nconst VocabularyInterface = ({ bookId }) => {\n  const navigate = useNavigate();\n  const [passage, setPassage] = useState('');\n  const [selectedWord, setSelectedWord] = useState('');\n  const [wordDetails, setWordDetails] = useState(null);\n  const [savedWords, setSavedWords] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Load saved words for this book\n  useEffect(() => {\n    if (bookId) {\n      loadSavedWords();\n    }\n  }, [bookId]);\n\n  const loadSavedWords = async () => {\n    try {\n      const words = await vocabularyService.getBookVocabulary(bookId);\n      setSavedWords(words);\n    } catch (err) {\n      setError('Failed to load vocabulary words');\n      console.error(err);\n    }\n  };\n\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    const selectedText = selection.toString().trim();\n    \n    if (selectedText && selectedText.split(' ').length === 1) {\n      setSelectedWord(selectedText);\n      handleWordLookup(selectedText);\n    }\n  };\n\n  const handleWordLookup = async (word) => {\n    setLoading(true);\n    try {\n      console.log('Looking up word:', word);\n      const wordData = await getWordDetails(word);\n      console.log('Word data received:', wordData);\n      \n      setWordDetails({\n        word: wordData.word,\n        definitions: wordData.definitions,\n        etymology: wordData.etymology,\n        phonetics: wordData.phonetics,\n        translations: wordData.translations,\n        partOfSpeech: wordData.partOfSpeech\n      });\n    } catch (err) {\n      setError('Failed to look up word details');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveWord = async () => {\n    if (!selectedWord || !wordDetails) return;\n\n    try {\n      const wordData = {\n        word: selectedWord,\n        bookId,\n        context: {\n          passage: passage,\n          pageNumber: null\n        },\n        etymology: wordDetails.etymology,\n        definitions: wordDetails.definitions,\n        translations: wordDetails.translations\n      };\n\n      await vocabularyService.addVocabularyWord(wordData);\n      await loadSavedWords();\n      setSelectedWord('');\n      setWordDetails(null);\n    } catch (err) {\n      setError('Failed to save word');\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4 space-y-6\">\n      {error && (\n        <Alert variant=\"destructive\">\n          {error}\n        </Alert>\n      )}\n\n      <Card className=\"p-6\">\n        <h2 className=\"text-2xl font-bold mb-4\">Vocabulary Helper</h2>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Enter Book Passage\n            </label>\n            <Textarea\n              value={passage}\n              onChange={(e) => setPassage(e.target.value)}\n              placeholder=\"Enter a passage from the book...\"\n              className=\"min-h-[200px]\"\n            />\n          </div>\n\n          {passage && (\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Select Words for Analysis\n              </label>\n              <div \n                className=\"p-4 border rounded-lg bg-gray-50\"\n                onMouseUp={handleTextSelection}\n              >\n                {passage}\n              </div>\n            </div>\n          )}\n\n          {selectedWord && wordDetails && (\n            <Card className=\"p-6 space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-2xl font-semibold text-amber-900\">\n                  Word Analysis: {selectedWord}\n                </h3>\n                <Button\n                  onClick={handleSaveWord}\n                  disabled={loading}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Save className=\"w-4 h-4\" />\n                  Save Word\n                </Button>\n              </div>\n\n              {/* Phonetics Section */}\n              {wordDetails.phonetics && (\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <p className=\"text-gray-600\">{wordDetails.phonetics.text}</p>\n                  {wordDetails.phonetics.audio && (\n                    <audio controls src={wordDetails.phonetics.audio} className=\"mt-2\">\n                      Your browser does not support the audio element.\n                    </audio>\n                  )}\n                </div>\n              )}\n\n              {/* Definitions Section */}\n              {wordDetails.definitions && wordDetails.definitions.length > 0 && (\n                <div className=\"space-y-2\">\n                  <h4 className=\"font-medium text-lg\">Definitions:</h4>\n                  {wordDetails.definitions.map((def, index) => (\n                    <div key={index} className=\"ml-4 p-2 bg-gray-50 rounded\">\n                      <p>\n                        <span className=\"italic\">{def.partOfSpeech}</span>: {def.definition}\n                      </p>\n                      {def.example && (\n                        <p className=\"text-gray-600 ml-4 mt-1\">\n                          Example: \"{def.example}\"\n                        </p>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {/* Etymology Tree */}\n              {wordDetails.etymology && (\n                <EtymologyTree \n                  etymologyData={{\n                    word: selectedWord,\n                    ...wordDetails.etymology\n                  }} \n                />\n              )}\n\n              {/* Translations Section */}\n              <div className=\"mt-6 bg-gray-50 p-4 rounded-lg\">\n                <h4 className=\"font-medium text-lg mb-3\">Translations</h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                  {Object.entries(wordDetails.translations).map(([lang, translation]) => {\n                    if (!translation) return null;\n                    \n                    const langNames = {\n                      es: 'Spanish',\n                      fr: 'French',\n                      pt: 'Portuguese',\n                      it: 'Italian',\n                      hi: 'Hindi',\n                      zh: 'Chinese'\n                    };\n\n                    return (\n                      <div \n                        key={lang}\n                        className=\"p-3 bg-white rounded-lg shadow-sm border border-gray-100\"\n                      >\n                        <div className=\"text-sm text-gray-500\">\n                          {langNames[lang]}\n                        </div>\n                        <div className=\"font-medium\">\n                          {translation}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Card>\n          )}\n        </div>\n      </Card>\n\n      {savedWords.length > 0 && (\n        <Card className=\"p-6\">\n          <h3 className=\"text-xl font-bold mb-4\">Saved Words</h3>\n          <div className=\"space-y-3\">\n            {savedWords.map((word, index) => (\n              <div \n                key={index}\n                className=\"p-3 border rounded-lg hover:bg-gray-50\"\n              >\n                <h4 className=\"font-medium\">{word.word}</h4>\n                <p className=\"text-sm text-gray-600\">\n                  Root: {word.etymology?.root}\n                </p>\n                {word.context?.passage && (\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Context: \"{word.context.passage}\"\n                  </p>\n                )}\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default VocabularyInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}