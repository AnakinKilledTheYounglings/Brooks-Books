{"ast":null,"code":"// frontend/src/services/localEtymologyData.js\nexport const LOCAL_ETYMOLOGY_DATA={pieRoots:{'*bher-':{meaning:'to carry, bring',descendants:{latin:['ferre','fertile','transfer'],greek:['pherein','phosphorus'],germanic:['bear','birth'],sanskrit:['bharati']}},'*weid-':{meaning:'to see, to know',descendants:{latin:['videre','vision','video'],greek:['idein','idea'],germanic:['wit','wise'],sanskrit:['veda']}},'*ped-':{meaning:'foot',descendants:{latin:['pes','pedal','pedestrian'],greek:['pous','podium'],germanic:['foot','fetch'],sanskrit:['pad']}},'*gherd-':{meaning:'enclosure, yard',descendants:{latin:['hortus','garden'],greek:['khortos'],germanic:['garden','yard'],slavic:['gorod']}}},historicalForms:{'heart':{'Proto-Germanic':'*hertō','West Germanic':'*herta','Old English':'heorte','Middle English':'herte','Early Modern English':'heart','Modern English':'heart'},'house':{'Proto-Germanic':'*hūsą','West Germanic':'*hūs','Old English':'hūs','Middle English':'hous','Early Modern English':'house','Modern English':'house'},'water':{'Proto-Germanic':'*watōr','West Germanic':'*water','Old English':'wæter','Middle English':'water','Early Modern English':'water','Modern English':'water'}},soundChanges:{'Proto-Germanic':{description:\"Grimm's Law consonant shifts\",examples:['p > f','t > þ','k > h','b > p','d > t','g > k']},'West Germanic':{description:'Loss of word-final -z',examples:['*dagaz > *dag']},'Old English':{description:'I-mutation and breaking of vowels',examples:['*mūs > mȳs','*fallan > feallan']}},modernCognates:{'heart':{'German':'Herz','Dutch':'hart','Swedish':'hjärta','Danish':'hjerte'},'house':{'German':'Haus','Dutch':'huis','Swedish':'hus','Danish':'hus'},'water':{'German':'Wasser','Dutch':'water','Swedish':'vatten','Danish':'vand'}},semanticDevelopment:{'nice':['From Latin \"nescius\" (ignorant)','Old French \"nice\" (silly, simple)','Middle English (foolish)','Early Modern English (precise, careful)','Modern English (pleasant, agreeable)'],'silly':['Old English \"sælig\" (blessed, happy)','Middle English \"seely\" (innocent, weak)','Early Modern English (helpless, simple)','Modern English (foolish, absurd)']},findPIERoot(word){word=word.toLowerCase();for(const[root,info]of Object.entries(this.pieRoots)){for(const descendants of Object.values(info.descendants)){if(descendants.some(desc=>desc.toLowerCase()===word||word.includes(desc.toLowerCase()))){return{root,meaning:info.meaning,descendants:info.descendants};}}}return null;},getEvolution(word){word=word.toLowerCase();if(this.historicalForms[word]){return Object.entries(this.historicalForms[word]).map(_ref=>{var _this$soundChanges$pe;let[period,form]=_ref;return{period,form,years:this.getYearsForPeriod(period),changes:((_this$soundChanges$pe=this.soundChanges[period])===null||_this$soundChanges$pe===void 0?void 0:_this$soundChanges$pe.description)||null};});}return null;},getCognates(word){return this.modernCognates[word.toLowerCase()]||null;},getSemanticDevelopment(word){return this.semanticDevelopment[word.toLowerCase()]||null;},getYearsForPeriod(period){const periods={'Proto-Germanic':'500 BCE-200 CE','West Germanic':'200-500 CE','Old English':'500-1100 CE','Middle English':'1100-1500 CE','Early Modern English':'1500-1800 CE','Modern English':'1800-present'};return periods[period]||'';}};","map":{"version":3,"names":["LOCAL_ETYMOLOGY_DATA","pieRoots","meaning","descendants","latin","greek","germanic","sanskrit","slavic","historicalForms","soundChanges","description","examples","modernCognates","semanticDevelopment","findPIERoot","word","toLowerCase","root","info","Object","entries","values","some","desc","includes","getEvolution","map","_ref","_this$soundChanges$pe","period","form","years","getYearsForPeriod","changes","getCognates","getSemanticDevelopment","periods"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/services/localEtymologyData.js"],"sourcesContent":["// frontend/src/services/localEtymologyData.js\n\nexport const LOCAL_ETYMOLOGY_DATA = {\n  pieRoots: {\n    '*bher-': {\n      meaning: 'to carry, bring',\n      descendants: {\n        latin: ['ferre', 'fertile', 'transfer'],\n        greek: ['pherein', 'phosphorus'],\n        germanic: ['bear', 'birth'],\n        sanskrit: ['bharati']\n      }\n    },\n    '*weid-': {\n      meaning: 'to see, to know',\n      descendants: {\n        latin: ['videre', 'vision', 'video'],\n        greek: ['idein', 'idea'],\n        germanic: ['wit', 'wise'],\n        sanskrit: ['veda']\n      }\n    },\n    '*ped-': {\n      meaning: 'foot',\n      descendants: {\n        latin: ['pes', 'pedal', 'pedestrian'],\n        greek: ['pous', 'podium'],\n        germanic: ['foot', 'fetch'],\n        sanskrit: ['pad']\n      }\n    },\n    '*gherd-': {\n      meaning: 'enclosure, yard',\n      descendants: {\n        latin: ['hortus', 'garden'],\n        greek: ['khortos'],\n        germanic: ['garden', 'yard'],\n        slavic: ['gorod']\n      }\n    }\n  },\n\n  historicalForms: {\n    'heart': {\n      'Proto-Germanic': '*hertō',\n      'West Germanic': '*herta',\n      'Old English': 'heorte',\n      'Middle English': 'herte',\n      'Early Modern English': 'heart',\n      'Modern English': 'heart'\n    },\n    'house': {\n      'Proto-Germanic': '*hūsą',\n      'West Germanic': '*hūs',\n      'Old English': 'hūs',\n      'Middle English': 'hous',\n      'Early Modern English': 'house',\n      'Modern English': 'house'\n    },\n    'water': {\n      'Proto-Germanic': '*watōr',\n      'West Germanic': '*water',\n      'Old English': 'wæter',\n      'Middle English': 'water',\n      'Early Modern English': 'water',\n      'Modern English': 'water'\n    }\n  },\n\n  soundChanges: {\n    'Proto-Germanic': {\n      description: \"Grimm's Law consonant shifts\",\n      examples: [\n        'p > f',\n        't > þ',\n        'k > h',\n        'b > p',\n        'd > t',\n        'g > k'\n      ]\n    },\n    'West Germanic': {\n      description: 'Loss of word-final -z',\n      examples: ['*dagaz > *dag']\n    },\n    'Old English': {\n      description: 'I-mutation and breaking of vowels',\n      examples: ['*mūs > mȳs', '*fallan > feallan']\n    }\n  },\n\n  modernCognates: {\n    'heart': {\n      'German': 'Herz',\n      'Dutch': 'hart',\n      'Swedish': 'hjärta',\n      'Danish': 'hjerte'\n    },\n    'house': {\n      'German': 'Haus',\n      'Dutch': 'huis',\n      'Swedish': 'hus',\n      'Danish': 'hus'\n    },\n    'water': {\n      'German': 'Wasser',\n      'Dutch': 'water',\n      'Swedish': 'vatten',\n      'Danish': 'vand'\n    }\n  },\n\n  semanticDevelopment: {\n    'nice': [\n      'From Latin \"nescius\" (ignorant)',\n      'Old French \"nice\" (silly, simple)',\n      'Middle English (foolish)',\n      'Early Modern English (precise, careful)',\n      'Modern English (pleasant, agreeable)'\n    ],\n    'silly': [\n      'Old English \"sælig\" (blessed, happy)',\n      'Middle English \"seely\" (innocent, weak)',\n      'Early Modern English (helpless, simple)',\n      'Modern English (foolish, absurd)'\n    ]\n  },\n\n  findPIERoot(word) {\n    word = word.toLowerCase();\n    for (const [root, info] of Object.entries(this.pieRoots)) {\n      for (const descendants of Object.values(info.descendants)) {\n        if (descendants.some(desc => desc.toLowerCase() === word || word.includes(desc.toLowerCase()))) {\n          return {\n            root,\n            meaning: info.meaning,\n            descendants: info.descendants\n          };\n        }\n      }\n    }\n    return null;\n  },\n\n  getEvolution(word) {\n    word = word.toLowerCase();\n    if (this.historicalForms[word]) {\n      return Object.entries(this.historicalForms[word]).map(([period, form]) => ({\n        period,\n        form,\n        years: this.getYearsForPeriod(period),\n        changes: this.soundChanges[period]?.description || null\n      }));\n    }\n    return null;\n  },\n\n  getCognates(word) {\n    return this.modernCognates[word.toLowerCase()] || null;\n  },\n\n  getSemanticDevelopment(word) {\n    return this.semanticDevelopment[word.toLowerCase()] || null;\n  },\n\n  getYearsForPeriod(period) {\n    const periods = {\n      'Proto-Germanic': '500 BCE-200 CE',\n      'West Germanic': '200-500 CE',\n      'Old English': '500-1100 CE',\n      'Middle English': '1100-1500 CE',\n      'Early Modern English': '1500-1800 CE',\n      'Modern English': '1800-present'\n    };\n    return periods[period] || '';\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}