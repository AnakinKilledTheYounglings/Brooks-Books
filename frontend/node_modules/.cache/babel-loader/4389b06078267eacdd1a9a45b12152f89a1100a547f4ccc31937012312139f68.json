{"ast":null,"code":"// frontend/src/services/api.js\nconst API_BASE_URL = 'http://localhost:3001';\nexport const api = {\n  async searchGifs(query) {\n    const response = await fetch(`${API_BASE_URL}/api/gifs/search?q=${encodeURIComponent(query)}`);\n    if (!response.ok) throw new Error('Failed to fetch GIFs');\n    return response.json();\n  },\n  async getTrendingGifs() {\n    const response = await fetch(`${API_BASE_URL}/api/gifs/trending`);\n    if (!response.ok) throw new Error('Failed to fetch trending GIFs');\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_BASE_URL","api","searchGifs","query","response","fetch","encodeURIComponent","ok","Error","json","getTrendingGifs"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\nconst API_BASE_URL = 'http://localhost:3001';\n\nexport const api = {\n  async searchGifs(query) {\n    const response = await fetch(`${API_BASE_URL}/api/gifs/search?q=${encodeURIComponent(query)}`);\n    if (!response.ok) throw new Error('Failed to fetch GIFs');\n    return response.json();\n  },\n\n  async getTrendingGifs() {\n    const response = await fetch(`${API_BASE_URL}/api/gifs/trending`);\n    if (!response.ok) throw new Error('Failed to fetch trending GIFs');\n    return response.json();\n  }\n};"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,GAAG,GAAG;EACjB,MAAMC,UAAUA,CAACC,KAAK,EAAE;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,sBAAsBM,kBAAkB,CAACH,KAAK,CAAC,EAAE,CAAC;IAC9F,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzD,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,eAAeA,CAAA,EAAG;IACtB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,oBAAoB,CAAC;IACjE,IAAI,CAACI,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClE,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}