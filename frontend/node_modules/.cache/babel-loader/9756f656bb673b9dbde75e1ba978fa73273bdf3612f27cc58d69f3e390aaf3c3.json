{"ast":null,"code":"var _jsxFileName = \"/Users/BrooksCole/Documents/reading-community/frontend/src/components/GifPicker.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/GifPicker.js\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, Grid, Box, IconButton, CircularProgress, Typography } from '@mui/material';\nimport { Close as CloseIcon, Search as SearchIcon } from '@mui/icons-material';\nimport { api } from '../services/api'; // Add this import at the top\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GifPicker = ({\n  open,\n  onClose,\n  onSelect\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleGifSelect = gif => {\n    var _gif$media_formats, _gif$media_formats$gi;\n    // Make sure we're accessing the correct URL property\n    const gifUrl = ((_gif$media_formats = gif.media_formats) === null || _gif$media_formats === void 0 ? void 0 : (_gif$media_formats$gi = _gif$media_formats.gif) === null || _gif$media_formats$gi === void 0 ? void 0 : _gif$media_formats$gi.url) || gif.url;\n    if (!gifUrl) {\n      console.error('No valid URL found in GIF data:', gif);\n      return;\n    }\n    onSelect({\n      ...gif,\n      url: gifUrl\n    });\n  };\n\n  //fetch gifs & send requeest to services/api.js\n  const fetchGifs = async query => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = query ? await api.searchGifs(query) : await api.getTrendingGifs();\n      setGifs(data);\n    } catch (err) {\n      console.error('GIF fetch error:', err);\n      setError('Failed to load GIFs');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (open) {\n      fetchGifs(''); // Load trending GIFs when opened\n    }\n  }, [open]);\n  const handleSearch = e => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      fetchGifs(searchTerm);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Select a GIF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onClose,\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSearch,\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          placeholder: \"Search GIFs...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        p: 3,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        align: \"center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: gifs.map((gif, index) => {\n          var _gif$media_formats2, _gif$media_formats2$t, _gif$media_formats3, _gif$media_formats3$g;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"img\",\n              src: ((_gif$media_formats2 = gif.media_formats) === null || _gif$media_formats2 === void 0 ? void 0 : (_gif$media_formats2$t = _gif$media_formats2.tinygif) === null || _gif$media_formats2$t === void 0 ? void 0 : _gif$media_formats2$t.url) || ((_gif$media_formats3 = gif.media_formats) === null || _gif$media_formats3 === void 0 ? void 0 : (_gif$media_formats3$g = _gif$media_formats3.gif) === null || _gif$media_formats3$g === void 0 ? void 0 : _gif$media_formats3$g.url),\n              alt: gif.content_description || 'GIF',\n              sx: {\n                width: '100%',\n                height: 'auto',\n                cursor: 'pointer',\n                borderRadius: 1,\n                '&:hover': {\n                  opacity: 0.8\n                }\n              },\n              onClick: () => {\n                handleGifSelect(gif);\n                onClose();\n              },\n              onError: e => {\n                console.error('Failed to load GIF:', gif);\n                e.target.style.display = 'none';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GifPicker, \"LZCxaNPXygNqsrngflzZuzO+x2A=\");\n_c = GifPicker;\nexport default GifPicker;\nvar _c;\n$RefreshReg$(_c, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","TextField","Grid","Box","IconButton","CircularProgress","Typography","Close","CloseIcon","Search","SearchIcon","api","jsxDEV","_jsxDEV","GifPicker","open","onClose","onSelect","_s","searchTerm","setSearchTerm","gifs","setGifs","loading","setLoading","error","setError","handleGifSelect","gif","_gif$media_formats","_gif$media_formats$gi","gifUrl","media_formats","url","console","fetchGifs","query","data","searchGifs","getTrendingGifs","err","handleSearch","e","preventDefault","trim","maxWidth","fullWidth","children","display","alignItems","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","component","onSubmit","sx","mb","placeholder","value","onChange","target","InputProps","endAdornment","type","p","color","align","container","spacing","map","index","_gif$media_formats2","_gif$media_formats2$t","_gif$media_formats3","_gif$media_formats3$g","item","xs","sm","md","src","tinygif","alt","content_description","width","height","cursor","borderRadius","opacity","onError","style","_c","$RefreshReg$"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/components/GifPicker.js"],"sourcesContent":["// frontend/src/components/GifPicker.js\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Grid,\n  Box,\n  IconButton,\n  CircularProgress,\n  Typography\n} from '@mui/material';\nimport { Close as CloseIcon, Search as SearchIcon } from '@mui/icons-material';\nimport { api } from '../services/api';  // Add this import at the top\n\nconst GifPicker = ({ open, onClose, onSelect }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleGifSelect = (gif) => {\n    // Make sure we're accessing the correct URL property\n    const gifUrl = gif.media_formats?.gif?.url || gif.url;\n    if (!gifUrl) {\n      console.error('No valid URL found in GIF data:', gif);\n      return;\n    }\n    onSelect({ ...gif, url: gifUrl });\n  };\n\n//fetch gifs & send requeest to services/api.js\n  const fetchGifs = async (query) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = query \n        ? await api.searchGifs(query)\n        : await api.getTrendingGifs();\n      setGifs(data);\n    } catch (err) {\n      console.error('GIF fetch error:', err);\n      setError('Failed to load GIFs');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n    useEffect(() => {\n      if (open) {\n        fetchGifs('');  // Load trending GIFs when opened\n      }\n    }, [open]);\n\n    const handleSearch = (e) => {\n      e.preventDefault();\n      if (searchTerm.trim()) {\n        fetchGifs(searchTerm);\n      }\n    };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <DialogTitle>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography>Select a GIF</Typography>\n          <IconButton onClick={onClose} size=\"small\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      \n      <DialogContent>\n        <Box component=\"form\" onSubmit={handleSearch} sx={{ mb: 2 }}>\n          <TextField\n            fullWidth\n            placeholder=\"Search GIFs...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              endAdornment: (\n                <IconButton type=\"submit\">\n                  <SearchIcon />\n                </IconButton>\n              )\n            }}\n          />\n        </Box>\n\n        {loading ? (\n          <Box display=\"flex\" justifyContent=\"center\" p={3}>\n            <CircularProgress />\n          </Box>\n        ) : error ? (\n          <Typography color=\"error\" align=\"center\">{error}</Typography>\n        ) : (\n          <Grid container spacing={2}>\n            {gifs.map((gif, index) => (\n              <Grid item xs={6} sm={4} md={3} key={index}>\n                <Box \n                  component=\"img\"\n                  src={gif.media_formats?.tinygif?.url || gif.media_formats?.gif?.url}\n                  alt={gif.content_description || 'GIF'}\n                  sx={{\n                    width: '100%',\n                    height: 'auto',\n                    cursor: 'pointer',\n                    borderRadius: 1,\n                    '&:hover': {\n                      opacity: 0.8\n                    }\n                  }}\n                  onClick={() => {\n                    handleGifSelect(gif);\n                    onClose();\n                  }}\n                  onError={(e) => {\n                    console.error('Failed to load GIF:', gif);\n                    e.target.style.display = 'none';\n                  }}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default GifPicker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}