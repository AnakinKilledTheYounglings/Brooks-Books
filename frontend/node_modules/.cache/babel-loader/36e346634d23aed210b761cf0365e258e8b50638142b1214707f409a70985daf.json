{"ast":null,"code":"// frontend/src/services/etymologyAPI.js\n// This will be your interface to whatever external API you choose later\nexport class EtymologyAPI{constructor(){let apiKey=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;this.apiKey=apiKey;this.baseUrl=process.env.REACT_APP_ETYMOLOGY_API_URL||'default_url';}async getWordEtymology(word){// This is where you'll implement the actual API call later\ntry{// For now, return null to fall back to local data\nreturn null;// Later, you'll implement something like:\n// const response = await fetch(`${this.baseUrl}/etymology/${word}`, {\n//   headers: {\n//     'Authorization': `Bearer ${this.apiKey}`,\n//   }\n// });\n// return await response.json();\n}catch(error){console.error('Etymology API error:',error);return null;}}}// Create a singleton instance\nexport const etymologyAPI=new EtymologyAPI();","map":{"version":3,"names":["EtymologyAPI","constructor","apiKey","arguments","length","undefined","baseUrl","process","env","REACT_APP_ETYMOLOGY_API_URL","getWordEtymology","word","error","console","etymologyAPI"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/services/etymologyAPI.js"],"sourcesContent":["// frontend/src/services/etymologyAPI.js\n\n// This will be your interface to whatever external API you choose later\nexport class EtymologyAPI {\n  constructor(apiKey = null) {\n    this.apiKey = apiKey;\n    this.baseUrl = process.env.REACT_APP_ETYMOLOGY_API_URL || 'default_url';\n  }\n\n  async getWordEtymology(word) {\n    // This is where you'll implement the actual API call later\n    try {\n      // For now, return null to fall back to local data\n      return null;\n      \n      // Later, you'll implement something like:\n      // const response = await fetch(`${this.baseUrl}/etymology/${word}`, {\n      //   headers: {\n      //     'Authorization': `Bearer ${this.apiKey}`,\n      //   }\n      // });\n      // return await response.json();\n    } catch (error) {\n      console.error('Etymology API error:', error);\n      return null;\n    }\n  }\n}\n\n// Create a singleton instance\nexport const etymologyAPI = new EtymologyAPI();"],"mappings":"AAAA;AAEA;AACA,MAAO,MAAM,CAAAA,YAAa,CACxBC,WAAWA,CAAA,CAAgB,IAAf,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACvB,IAAI,CAACD,MAAM,CAAGA,MAAM,CACpB,IAAI,CAACI,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B,EAAI,aAAa,CACzE,CAEA,KAAM,CAAAC,gBAAgBA,CAACC,IAAI,CAAE,CAC3B;AACA,GAAI,CACF;AACA,MAAO,KAAI,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,KAAI,CACb,CACF,CACF,CAEA;AACA,MAAO,MAAM,CAAAE,YAAY,CAAG,GAAI,CAAAd,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}