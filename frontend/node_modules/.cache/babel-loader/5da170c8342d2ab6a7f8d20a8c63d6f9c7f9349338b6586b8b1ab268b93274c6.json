{"ast":null,"code":"/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '171';\nconst MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2\n};\nconst TOUCH = {\n  ROTATE: 0,\n  PAN: 1,\n  DOLLY_PAN: 2,\n  DOLLY_ROTATE: 3\n};\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n  addEventListener(type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    const listeners = this._listeners;\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  }\n  hasEventListener(type, listener) {\n    if (this._listeners === undefined) return false;\n    const listeners = this._listeners;\n    return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n  }\n  removeEventListener(type, listener) {\n    if (this._listeners === undefined) return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n    if (listenerArray !== undefined) {\n      const index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n  dispatchEvent(event) {\n    if (this._listeners === undefined) return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      // Make a copy, in case listeners are removed while iterating.\n      const array = listenerArray.slice(0);\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n      event.target = null;\n    }\n  }\n}\nconst _lut = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff'];\nlet _seed = 1234567;\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n  const d0 = Math.random() * 0xffffffff | 0;\n  const d1 = Math.random() * 0xffffffff | 0;\n  const d2 = Math.random() * 0xffffffff | 0;\n  const d3 = Math.random() * 0xffffffff | 0;\n  const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\n\n  // .toLowerCase() here flattens concatenated strings to save heap memory space.\n  return uuid.toLowerCase();\n}\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo(n, m) {\n  return (n % m + m) % m;\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear(x, a1, a2, b1, b2) {\n  return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp(x, y, value) {\n  if (x !== y) {\n    return (value - x) / (y - x);\n  } else {\n    return 0;\n  }\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp(x, y, lambda, dt) {\n  return lerp(x, y, 1 - Math.exp(-lambda * dt));\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong(x) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return length - Math.abs(euclideanModulo(x, length * 2) - length);\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n  x = (x - min) / (max - min);\n  return x * x * (3 - 2 * x);\n}\nfunction smootherstep(x, min, max) {\n  if (x <= min) return 0;\n  if (x >= max) return 1;\n  x = (x - min) / (max - min);\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\n\n// Random integer from <low, high> interval\nfunction randInt(low, high) {\n  return low + Math.floor(Math.random() * (high - low + 1));\n}\n\n// Random float from <low, high> interval\nfunction randFloat(low, high) {\n  return low + Math.random() * (high - low);\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread(range) {\n  return range * (0.5 - Math.random());\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom(s) {\n  if (s !== undefined) _seed = s;\n\n  // Mulberry32 generator\n\n  let t = _seed += 0x6D2B79F5;\n  t = Math.imul(t ^ t >>> 15, t | 1);\n  t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n  return ((t ^ t >>> 14) >>> 0) / 4294967296;\n}\nfunction degToRad(degrees) {\n  return degrees * DEG2RAD;\n}\nfunction radToDeg(radians) {\n  return radians * RAD2DEG;\n}\nfunction isPowerOfTwo(value) {\n  return (value & value - 1) === 0 && value !== 0;\n}\nfunction ceilPowerOfTwo(value) {\n  return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n}\nfunction floorPowerOfTwo(value) {\n  return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n}\nfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n  // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n  // rotations are applied to the axes in the order specified by 'order'\n  // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n  // angles are in radians\n\n  const cos = Math.cos;\n  const sin = Math.sin;\n  const c2 = cos(b / 2);\n  const s2 = sin(b / 2);\n  const c13 = cos((a + c) / 2);\n  const s13 = sin((a + c) / 2);\n  const c1_3 = cos((a - c) / 2);\n  const s1_3 = sin((a - c) / 2);\n  const c3_1 = cos((c - a) / 2);\n  const s3_1 = sin((c - a) / 2);\n  switch (order) {\n    case 'XYX':\n      q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n      break;\n    case 'YZY':\n      q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n      break;\n    case 'ZXZ':\n      q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n      break;\n    case 'XZX':\n      q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n      break;\n    case 'YXY':\n      q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n      break;\n    case 'ZYZ':\n      q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n      break;\n    default:\n      console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n  }\n}\nfunction denormalize(value, array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return value;\n    case Uint32Array:\n      return value / 4294967295.0;\n    case Uint16Array:\n      return value / 65535.0;\n    case Uint8Array:\n      return value / 255.0;\n    case Int32Array:\n      return Math.max(value / 2147483647.0, -1.0);\n    case Int16Array:\n      return Math.max(value / 32767.0, -1.0);\n    case Int8Array:\n      return Math.max(value / 127.0, -1.0);\n    default:\n      throw new Error('Invalid component type.');\n  }\n}\nfunction normalize(value, array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return value;\n    case Uint32Array:\n      return Math.round(value * 4294967295.0);\n    case Uint16Array:\n      return Math.round(value * 65535.0);\n    case Uint8Array:\n      return Math.round(value * 255.0);\n    case Int32Array:\n      return Math.round(value * 2147483647.0);\n    case Int16Array:\n      return Math.round(value * 32767.0);\n    case Int8Array:\n      return Math.round(value * 127.0);\n    default:\n      throw new Error('Invalid component type.');\n  }\n}\nconst MathUtils = {\n  DEG2RAD: DEG2RAD,\n  RAD2DEG: RAD2DEG,\n  generateUUID: generateUUID,\n  clamp: clamp,\n  euclideanModulo: euclideanModulo,\n  mapLinear: mapLinear,\n  inverseLerp: inverseLerp,\n  lerp: lerp,\n  damp: damp,\n  pingpong: pingpong,\n  smoothstep: smoothstep,\n  smootherstep: smootherstep,\n  randInt: randInt,\n  randFloat: randFloat,\n  randFloatSpread: randFloatSpread,\n  seededRandom: seededRandom,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  isPowerOfTwo: isPowerOfTwo,\n  ceilPowerOfTwo: ceilPowerOfTwo,\n  floorPowerOfTwo: floorPowerOfTwo,\n  setQuaternionFromProperEuler: setQuaternionFromProperEuler,\n  normalize: normalize,\n  denormalize: denormalize\n};\nclass Vector2 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    Vector2.prototype.isVector2 = true;\n    this.x = x;\n    this.y = y;\n  }\n  get width() {\n    return this.x;\n  }\n  set width(value) {\n    this.x = value;\n  }\n  get height() {\n    return this.y;\n  }\n  set height(value) {\n    this.y = value;\n  }\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  }\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone() {\n    return new this.constructor(this.x, this.y);\n  }\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  }\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  }\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  }\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  }\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  }\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n  applyMatrix3(m) {\n    const x = this.x,\n      y = this.y;\n    const e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6];\n    this.y = e[1] * x + e[4] * y + e[7];\n    return this;\n  }\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  }\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  }\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = clamp(this.x, min.x, max.x);\n    this.y = clamp(this.y, min.y, max.y);\n    return this;\n  }\n  clampScalar(minVal, maxVal) {\n    this.x = clamp(this.x, minVal, maxVal);\n    this.y = clamp(this.y, minVal, maxVal);\n    return this;\n  }\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max));\n  }\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  }\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  }\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  }\n  roundToZero() {\n    this.x = Math.trunc(this.x);\n    this.y = Math.trunc(this.y);\n    return this;\n  }\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n  cross(v) {\n    return this.x * v.y - this.y * v.x;\n  }\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y);\n  }\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n  angle() {\n    // computes the angle in radians with respect to the positive x-axis\n\n    const angle = Math.atan2(-this.y, -this.x) + Math.PI;\n    return angle;\n  }\n  angleTo(v) {\n    const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n    if (denominator === 0) return Math.PI / 2;\n    const theta = this.dot(v) / denominator;\n\n    // clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n  }\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n  distanceToSquared(v) {\n    const dx = this.x - v.x,\n      dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  }\n  manhattanDistanceTo(v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n  }\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  }\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    return this;\n  }\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    return this;\n  }\n  rotateAround(center, angle) {\n    const c = Math.cos(angle),\n      s = Math.sin(angle);\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    return this;\n  }\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n  }\n}\nclass Matrix3 {\n  constructor(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    Matrix3.prototype.isMatrix3 = true;\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    if (n11 !== undefined) {\n      this.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);\n    }\n  }\n  set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    const te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  }\n  identity() {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  }\n  copy(m) {\n    const te = this.elements;\n    const me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    return this;\n  }\n  extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrix3Column(this, 0);\n    yAxis.setFromMatrix3Column(this, 1);\n    zAxis.setFromMatrix3Column(this, 2);\n    return this;\n  }\n  setFromMatrix4(m) {\n    const me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  }\n  multiply(m) {\n    return this.multiplyMatrices(this, m);\n  }\n  premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  }\n  multiplyMatrices(a, b) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n    const a11 = ae[0],\n      a12 = ae[3],\n      a13 = ae[6];\n    const a21 = ae[1],\n      a22 = ae[4],\n      a23 = ae[7];\n    const a31 = ae[2],\n      a32 = ae[5],\n      a33 = ae[8];\n    const b11 = be[0],\n      b12 = be[3],\n      b13 = be[6];\n    const b21 = be[1],\n      b22 = be[4],\n      b23 = be[7];\n    const b31 = be[2],\n      b32 = be[5],\n      b33 = be[8];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return this;\n  }\n  multiplyScalar(s) {\n    const te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  }\n  determinant() {\n    const te = this.elements;\n    const a = te[0],\n      b = te[1],\n      c = te[2],\n      d = te[3],\n      e = te[4],\n      f = te[5],\n      g = te[6],\n      h = te[7],\n      i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  }\n  invert() {\n    const te = this.elements,\n      n11 = te[0],\n      n21 = te[1],\n      n31 = te[2],\n      n12 = te[3],\n      n22 = te[4],\n      n32 = te[5],\n      n13 = te[6],\n      n23 = te[7],\n      n33 = te[8],\n      t11 = n33 * n22 - n32 * n23,\n      t12 = n32 * n13 - n33 * n12,\n      t13 = n23 * n12 - n22 * n13,\n      det = n11 * t11 + n21 * t12 + n31 * t13;\n    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  }\n  transpose() {\n    let tmp;\n    const m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  }\n  getNormalMatrix(matrix4) {\n    return this.setFromMatrix4(matrix4).invert().transpose();\n  }\n  transposeIntoArray(r) {\n    const m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  }\n  setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n    const c = Math.cos(rotation);\n    const s = Math.sin(rotation);\n    this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n    return this;\n  }\n\n  //\n\n  scale(sx, sy) {\n    this.premultiply(_m3.makeScale(sx, sy));\n    return this;\n  }\n  rotate(theta) {\n    this.premultiply(_m3.makeRotation(-theta));\n    return this;\n  }\n  translate(tx, ty) {\n    this.premultiply(_m3.makeTranslation(tx, ty));\n    return this;\n  }\n\n  // for 2D Transforms\n\n  makeTranslation(x, y) {\n    if (x.isVector2) {\n      this.set(1, 0, x.x, 0, 1, x.y, 0, 0, 1);\n    } else {\n      this.set(1, 0, x, 0, 1, y, 0, 0, 1);\n    }\n    return this;\n  }\n  makeRotation(theta) {\n    // counterclockwise\n\n    const c = Math.cos(theta);\n    const s = Math.sin(theta);\n    this.set(c, -s, 0, s, c, 0, 0, 0, 1);\n    return this;\n  }\n  makeScale(x, y) {\n    this.set(x, 0, 0, 0, y, 0, 0, 0, 1);\n    return this;\n  }\n\n  //\n\n  equals(matrix) {\n    const te = this.elements;\n    const me = matrix.elements;\n    for (let i = 0; i < 9; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n    return true;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    for (let i = 0; i < 9; i++) {\n      this.elements[i] = array[i + offset];\n    }\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  }\n  clone() {\n    return new this.constructor().fromArray(this.elements);\n  }\n}\nconst _m3 = /*@__PURE__*/new Matrix3();\nfunction arrayNeedsUint32(array) {\n  // assumes larger values usually on last\n\n  for (let i = array.length - 1; i >= 0; --i) {\n    if (array[i] >= 65535) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n  }\n  return false;\n}\nconst TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  Uint8ClampedArray: Uint8ClampedArray,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array\n};\nfunction getTypedArray(type, buffer) {\n  return new TYPED_ARRAYS[type](buffer);\n}\nfunction createElementNS(name) {\n  return document.createElementNS('http://www.w3.org/1999/xhtml', name);\n}\nfunction createCanvasElement() {\n  const canvas = createElementNS('canvas');\n  canvas.style.display = 'block';\n  return canvas;\n}\nconst _cache = {};\nfunction warnOnce(message) {\n  if (message in _cache) return;\n  _cache[message] = true;\n  console.warn(message);\n}\nfunction probeAsync(gl, sync, interval) {\n  return new Promise(function (resolve, reject) {\n    function probe() {\n      switch (gl.clientWaitSync(sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0)) {\n        case gl.WAIT_FAILED:\n          reject();\n          break;\n        case gl.TIMEOUT_EXPIRED:\n          setTimeout(probe, interval);\n          break;\n        default:\n          resolve();\n      }\n    }\n    setTimeout(probe, interval);\n  });\n}\nfunction toNormalizedProjectionMatrix(projectionMatrix) {\n  const m = projectionMatrix.elements;\n\n  // Convert [-1, 1] to [0, 1] projection matrix\n  m[2] = 0.5 * m[2] + 0.5 * m[3];\n  m[6] = 0.5 * m[6] + 0.5 * m[7];\n  m[10] = 0.5 * m[10] + 0.5 * m[11];\n  m[14] = 0.5 * m[14] + 0.5 * m[15];\n}\nfunction toReversedProjectionMatrix(projectionMatrix) {\n  const m = projectionMatrix.elements;\n  const isPerspectiveMatrix = m[11] === -1;\n\n  // Reverse [0, 1] projection matrix\n  if (isPerspectiveMatrix) {\n    m[10] = -m[10] - 1;\n    m[14] = -m[14];\n  } else {\n    m[10] = -m[10];\n    m[14] = -m[14] + 1;\n  }\n}\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/new Matrix3().set(0.4123908, 0.3575843, 0.1804808, 0.2126390, 0.7151687, 0.0721923, 0.0193308, 0.1191948, 0.9505322);\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/new Matrix3().set(3.2409699, -1.5373832, -0.4986108, -0.9692436, 1.8759675, 0.0415551, 0.0556301, -0.2039770, 1.0569715);\nfunction createColorManagement() {\n  const ColorManagement = {\n    enabled: true,\n    workingColorSpace: LinearSRGBColorSpace,\n    /**\n     * Implementations of supported color spaces.\n     *\n     * Required:\n     *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n     *\t- whitePoint: reference white [ x y ]\n     *\t- transfer: transfer function (pre-defined)\n     *\t- toXYZ: Matrix3 RGB to XYZ transform\n     *\t- fromXYZ: Matrix3 XYZ to RGB transform\n     *\t- luminanceCoefficients: RGB luminance coefficients\n     *\n     * Optional:\n     *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n     *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n     *\n     * Reference:\n     * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n     */\n    spaces: {},\n    convert: function (color, sourceColorSpace, targetColorSpace) {\n      if (this.enabled === false || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {\n        return color;\n      }\n      if (this.spaces[sourceColorSpace].transfer === SRGBTransfer) {\n        color.r = SRGBToLinear(color.r);\n        color.g = SRGBToLinear(color.g);\n        color.b = SRGBToLinear(color.b);\n      }\n      if (this.spaces[sourceColorSpace].primaries !== this.spaces[targetColorSpace].primaries) {\n        color.applyMatrix3(this.spaces[sourceColorSpace].toXYZ);\n        color.applyMatrix3(this.spaces[targetColorSpace].fromXYZ);\n      }\n      if (this.spaces[targetColorSpace].transfer === SRGBTransfer) {\n        color.r = LinearToSRGB(color.r);\n        color.g = LinearToSRGB(color.g);\n        color.b = LinearToSRGB(color.b);\n      }\n      return color;\n    },\n    fromWorkingColorSpace: function (color, targetColorSpace) {\n      return this.convert(color, this.workingColorSpace, targetColorSpace);\n    },\n    toWorkingColorSpace: function (color, sourceColorSpace) {\n      return this.convert(color, sourceColorSpace, this.workingColorSpace);\n    },\n    getPrimaries: function (colorSpace) {\n      return this.spaces[colorSpace].primaries;\n    },\n    getTransfer: function (colorSpace) {\n      if (colorSpace === NoColorSpace) return LinearTransfer;\n      return this.spaces[colorSpace].transfer;\n    },\n    getLuminanceCoefficients: function (target) {\n      let colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.workingColorSpace;\n      return target.fromArray(this.spaces[colorSpace].luminanceCoefficients);\n    },\n    define: function (colorSpaces) {\n      Object.assign(this.spaces, colorSpaces);\n    },\n    // Internal APIs\n\n    _getMatrix: function (targetMatrix, sourceColorSpace, targetColorSpace) {\n      return targetMatrix.copy(this.spaces[sourceColorSpace].toXYZ).multiply(this.spaces[targetColorSpace].fromXYZ);\n    },\n    _getDrawingBufferColorSpace: function (colorSpace) {\n      return this.spaces[colorSpace].outputColorSpaceConfig.drawingBufferColorSpace;\n    },\n    _getUnpackColorSpace: function () {\n      let colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.workingColorSpace;\n      return this.spaces[colorSpace].workingColorSpaceConfig.unpackColorSpace;\n    }\n  };\n\n  /******************************************************************************\n   * sRGB definitions\n   */\n\n  const REC709_PRIMARIES = [0.640, 0.330, 0.300, 0.600, 0.150, 0.060];\n  const REC709_LUMINANCE_COEFFICIENTS = [0.2126, 0.7152, 0.0722];\n  const D65 = [0.3127, 0.3290];\n  ColorManagement.define({\n    [LinearSRGBColorSpace]: {\n      primaries: REC709_PRIMARIES,\n      whitePoint: D65,\n      transfer: LinearTransfer,\n      toXYZ: LINEAR_REC709_TO_XYZ,\n      fromXYZ: XYZ_TO_LINEAR_REC709,\n      luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n      workingColorSpaceConfig: {\n        unpackColorSpace: SRGBColorSpace\n      },\n      outputColorSpaceConfig: {\n        drawingBufferColorSpace: SRGBColorSpace\n      }\n    },\n    [SRGBColorSpace]: {\n      primaries: REC709_PRIMARIES,\n      whitePoint: D65,\n      transfer: SRGBTransfer,\n      toXYZ: LINEAR_REC709_TO_XYZ,\n      fromXYZ: XYZ_TO_LINEAR_REC709,\n      luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n      outputColorSpaceConfig: {\n        drawingBufferColorSpace: SRGBColorSpace\n      }\n    }\n  });\n  return ColorManagement;\n}\nconst ColorManagement = /*@__PURE__*/createColorManagement();\nfunction SRGBToLinear(c) {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\nfunction LinearToSRGB(c) {\n  return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n}\nlet _canvas;\nclass ImageUtils {\n  static getDataURL(image) {\n    if (/^data:/i.test(image.src)) {\n      return image.src;\n    }\n    if (typeof HTMLCanvasElement === 'undefined') {\n      return image.src;\n    }\n    let canvas;\n    if (image instanceof HTMLCanvasElement) {\n      canvas = image;\n    } else {\n      if (_canvas === undefined) _canvas = createElementNS('canvas');\n      _canvas.width = image.width;\n      _canvas.height = image.height;\n      const context = _canvas.getContext('2d');\n      if (image instanceof ImageData) {\n        context.putImageData(image, 0, 0);\n      } else {\n        context.drawImage(image, 0, 0, image.width, image.height);\n      }\n      canvas = _canvas;\n    }\n    if (canvas.width > 2048 || canvas.height > 2048) {\n      console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n      return canvas.toDataURL('image/jpeg', 0.6);\n    } else {\n      return canvas.toDataURL('image/png');\n    }\n  }\n  static sRGBToLinear(image) {\n    if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n      const canvas = createElementNS('canvas');\n      canvas.width = image.width;\n      canvas.height = image.height;\n      const context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height);\n      const imageData = context.getImageData(0, 0, image.width, image.height);\n      const data = imageData.data;\n      for (let i = 0; i < data.length; i++) {\n        data[i] = SRGBToLinear(data[i] / 255) * 255;\n      }\n      context.putImageData(imageData, 0, 0);\n      return canvas;\n    } else if (image.data) {\n      const data = image.data.slice(0);\n      for (let i = 0; i < data.length; i++) {\n        if (data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n          data[i] = Math.floor(SRGBToLinear(data[i] / 255) * 255);\n        } else {\n          // assuming float\n\n          data[i] = SRGBToLinear(data[i]);\n        }\n      }\n      return {\n        data: data,\n        width: image.width,\n        height: image.height\n      };\n    } else {\n      console.warn('THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.');\n      return image;\n    }\n  }\n}\nlet _sourceId = 0;\nclass Source {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.isSource = true;\n    Object.defineProperty(this, 'id', {\n      value: _sourceId++\n    });\n    this.uuid = generateUUID();\n    this.data = data;\n    this.dataReady = true;\n    this.version = 0;\n  }\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    if (!isRootObject && meta.images[this.uuid] !== undefined) {\n      return meta.images[this.uuid];\n    }\n    const output = {\n      uuid: this.uuid,\n      url: ''\n    };\n    const data = this.data;\n    if (data !== null) {\n      let url;\n      if (Array.isArray(data)) {\n        // cube texture\n\n        url = [];\n        for (let i = 0, l = data.length; i < l; i++) {\n          if (data[i].isDataTexture) {\n            url.push(serializeImage(data[i].image));\n          } else {\n            url.push(serializeImage(data[i]));\n          }\n        }\n      } else {\n        // texture\n\n        url = serializeImage(data);\n      }\n      output.url = url;\n    }\n    if (!isRootObject) {\n      meta.images[this.uuid] = output;\n    }\n    return output;\n  }\n}\nfunction serializeImage(image) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    // default images\n\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n\n      return {\n        data: Array.from(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name\n      };\n    } else {\n      console.warn('THREE.Texture: Unable to serialize Texture.');\n      return {};\n    }\n  }\n}\nlet _textureId = 0;\nclass Texture extends EventDispatcher {\n  constructor() {\n    let image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n    let mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n    let wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n    let wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n    let magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n    let minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n    let format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n    let type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n    let anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : Texture.DEFAULT_ANISOTROPY;\n    let colorSpace = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : NoColorSpace;\n    super();\n    this.isTexture = true;\n    Object.defineProperty(this, 'id', {\n      value: _textureId++\n    });\n    this.uuid = generateUUID();\n    this.name = '';\n    this.source = new Source(image);\n    this.mipmaps = [];\n    this.mapping = mapping;\n    this.channel = 0;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.anisotropy = anisotropy;\n    this.format = format;\n    this.internalFormat = null;\n    this.type = type;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n    this.colorSpace = colorSpace;\n    this.userData = {};\n    this.version = 0;\n    this.onUpdate = null;\n    this.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n    this.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n  }\n  get image() {\n    return this.source.data;\n  }\n  set image(value) {\n    if (value === void 0) {\n      value = null;\n    }\n    this.source.data = value;\n  }\n  updateMatrix() {\n    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.name = source.name;\n    this.source = source.source;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.channel = source.channel;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.internalFormat = source.internalFormat;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.center.copy(source.center);\n    this.rotation = source.rotation;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.colorSpace = source.colorSpace;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    this.needsUpdate = true;\n    return this;\n  }\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n    const output = {\n      metadata: {\n        version: 4.6,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      image: this.source.toJSON(meta).uuid,\n      mapping: this.mapping,\n      channel: this.channel,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      center: [this.center.x, this.center.y],\n      rotation: this.rotation,\n      wrap: [this.wrapS, this.wrapT],\n      format: this.format,\n      internalFormat: this.internalFormat,\n      type: this.type,\n      colorSpace: this.colorSpace,\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n      flipY: this.flipY,\n      generateMipmaps: this.generateMipmaps,\n      premultiplyAlpha: this.premultiplyAlpha,\n      unpackAlignment: this.unpackAlignment\n    };\n    if (Object.keys(this.userData).length > 0) output.userData = this.userData;\n    if (!isRootObject) {\n      meta.textures[this.uuid] = output;\n    }\n    return output;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  transformUv(uv) {\n    if (this.mapping !== UVMapping) return uv;\n    uv.applyMatrix3(this.matrix);\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n        case ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n          break;\n      }\n    }\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n        case ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n          break;\n      }\n    }\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n    return uv;\n  }\n  set needsUpdate(value) {\n    if (value === true) {\n      this.version++;\n      this.source.needsUpdate = true;\n    }\n  }\n  set needsPMREMUpdate(value) {\n    if (value === true) {\n      this.pmremVersion++;\n    }\n  }\n}\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\nclass Vector4 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    Vector4.prototype.isVector4 = true;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n  get width() {\n    return this.z;\n  }\n  set width(value) {\n    this.z = value;\n  }\n  get height() {\n    return this.w;\n  }\n  set height(value) {\n    this.w = value;\n  }\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  }\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n  setZ(z) {\n    this.z = z;\n    return this;\n  }\n  setW(w) {\n    this.w = w;\n    return this;\n  }\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      case 2:\n        this.z = value;\n        break;\n      case 3:\n        this.w = value;\n        break;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      case 3:\n        return this.w;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone() {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  }\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  }\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  }\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  }\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  }\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  }\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  }\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    this.w *= v.w;\n    return this;\n  }\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  }\n  applyMatrix4(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z,\n      w = this.w;\n    const e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  }\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    this.w /= v.w;\n    return this;\n  }\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n  setAxisAngleFromQuaternion(q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n    // q is assumed to be normalized\n\n    this.w = 2 * Math.acos(q.w);\n    const s = Math.sqrt(1 - q.w * q.w);\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n    return this;\n  }\n  setAxisAngleFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    let angle, x, y, z; // variables for result\n    const epsilon = 0.01,\n      // margin to allow for rounding errors\n      epsilon2 = 0.1,\n      // margin to distinguish between 0 and 180 degrees\n\n      te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      }\n\n      // otherwise this singularity is angle = 180\n\n      angle = Math.PI;\n      const xx = (m11 + 1) / 2;\n      const yy = (m22 + 1) / 2;\n      const zz = (m33 + 1) / 2;\n      const xy = (m12 + m21) / 4;\n      const xz = (m13 + m31) / 4;\n      const yz = (m23 + m32) / 4;\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    }\n\n    // as we have reached here there are no singularities so we can handle normally\n\n    let s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1;\n\n    // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  }\n  setFromMatrixPosition(m) {\n    const e = m.elements;\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n    this.w = e[15];\n    return this;\n  }\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  }\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  }\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = clamp(this.x, min.x, max.x);\n    this.y = clamp(this.y, min.y, max.y);\n    this.z = clamp(this.z, min.z, max.z);\n    this.w = clamp(this.w, min.w, max.w);\n    return this;\n  }\n  clampScalar(minVal, maxVal) {\n    this.x = clamp(this.x, minVal, maxVal);\n    this.y = clamp(this.y, minVal, maxVal);\n    this.z = clamp(this.z, minVal, maxVal);\n    this.w = clamp(this.w, minVal, maxVal);\n    return this;\n  }\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max));\n  }\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  }\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  }\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  }\n  roundToZero() {\n    this.x = Math.trunc(this.x);\n    this.y = Math.trunc(this.y);\n    this.z = Math.trunc(this.z);\n    this.w = Math.trunc(this.w);\n    return this;\n  }\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  }\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  }\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  }\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  }\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  }\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n    this.w = v1.w + (v2.w - v1.w) * alpha;\n    return this;\n  }\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    this.w = attribute.getW(index);\n    return this;\n  }\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n    this.w = Math.random();\n    return this;\n  }\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n    yield this.z;\n    yield this.w;\n  }\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super();\n    this.isRenderTarget = true;\n    this.width = width;\n    this.height = height;\n    this.depth = 1;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    const image = {\n      width: width,\n      height: height,\n      depth: 1\n    };\n    options = Object.assign({\n      generateMipmaps: false,\n      internalFormat: null,\n      minFilter: LinearFilter,\n      depthBuffer: true,\n      stencilBuffer: false,\n      resolveDepthBuffer: true,\n      resolveStencilBuffer: true,\n      depthTexture: null,\n      samples: 0,\n      count: 1\n    }, options);\n    const texture = new Texture(image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace);\n    texture.flipY = false;\n    texture.generateMipmaps = options.generateMipmaps;\n    texture.internalFormat = options.internalFormat;\n    this.textures = [];\n    const count = options.count;\n    for (let i = 0; i < count; i++) {\n      this.textures[i] = texture.clone();\n      this.textures[i].isRenderTargetTexture = true;\n    }\n    this.depthBuffer = options.depthBuffer;\n    this.stencilBuffer = options.stencilBuffer;\n    this.resolveDepthBuffer = options.resolveDepthBuffer;\n    this.resolveStencilBuffer = options.resolveStencilBuffer;\n    this.depthTexture = options.depthTexture;\n    this.samples = options.samples;\n  }\n  get texture() {\n    return this.textures[0];\n  }\n  set texture(value) {\n    this.textures[0] = value;\n  }\n  setSize(width, height) {\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    if (this.width !== width || this.height !== height || this.depth !== depth) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n      for (let i = 0, il = this.textures.length; i < il; i++) {\n        this.textures[i].image.width = width;\n        this.textures[i].image.height = height;\n        this.textures[i].image.depth = depth;\n      }\n      this.dispose();\n    }\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n    this.scissor.copy(source.scissor);\n    this.scissorTest = source.scissorTest;\n    this.viewport.copy(source.viewport);\n    this.textures.length = 0;\n    for (let i = 0, il = source.textures.length; i < il; i++) {\n      this.textures[i] = source.textures[i].clone();\n      this.textures[i].isRenderTargetTexture = true;\n    }\n\n    // ensure image object is not shared, see #20328\n\n    const image = Object.assign({}, source.texture.image);\n    this.texture.source = new Source(image);\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.resolveDepthBuffer = source.resolveDepthBuffer;\n    this.resolveStencilBuffer = source.resolveStencilBuffer;\n    if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();\n    this.samples = source.samples;\n    return this;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n}\nclass WebGLRenderTarget extends RenderTarget {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(width, height, options);\n    this.isWebGLRenderTarget = true;\n  }\n}\nclass DataArrayTexture extends Texture {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    super(null);\n    this.isDataArrayTexture = true;\n    this.image = {\n      data,\n      width,\n      height,\n      depth\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n    this.layerUpdates = new Set();\n  }\n  addLayerUpdate(layerIndex) {\n    this.layerUpdates.add(layerIndex);\n  }\n  clearLayerUpdates() {\n    this.layerUpdates.clear();\n  }\n}\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(width, height, options);\n    this.isWebGLArrayRenderTarget = true;\n    this.depth = depth;\n    this.texture = new DataArrayTexture(null, width, height, depth);\n    this.texture.isRenderTargetTexture = true;\n  }\n}\nclass Data3DTexture extends Texture {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let depth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n\n    super(null);\n    this.isData3DTexture = true;\n    this.image = {\n      data,\n      width,\n      height,\n      depth\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n}\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(width, height, options);\n    this.isWebGL3DRenderTarget = true;\n    this.depth = depth;\n    this.texture = new Data3DTexture(null, width, height, depth);\n    this.texture.isRenderTargetTexture = true;\n  }\n}\nclass Quaternion {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    this.isQuaternion = true;\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n  }\n  static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n\n    let x0 = src0[srcOffset0 + 0],\n      y0 = src0[srcOffset0 + 1],\n      z0 = src0[srcOffset0 + 2],\n      w0 = src0[srcOffset0 + 3];\n    const x1 = src1[srcOffset1 + 0],\n      y1 = src1[srcOffset1 + 1],\n      z1 = src1[srcOffset1 + 2],\n      w1 = src1[srcOffset1 + 3];\n    if (t === 0) {\n      dst[dstOffset + 0] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n      return;\n    }\n    if (t === 1) {\n      dst[dstOffset + 0] = x1;\n      dst[dstOffset + 1] = y1;\n      dst[dstOffset + 2] = z1;\n      dst[dstOffset + 3] = w1;\n      return;\n    }\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      let s = 1 - t;\n      const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n        dir = cos >= 0 ? 1 : -1,\n        sqrSin = 1 - cos * cos;\n\n      // Skip the Slerp for tiny steps to avoid numeric problems:\n      if (sqrSin > Number.EPSILON) {\n        const sin = Math.sqrt(sqrSin),\n          len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n      const tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir;\n\n      // Normalize in case we just did a lerp:\n      if (s === 1 - t) {\n        const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n  static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n    const x0 = src0[srcOffset0];\n    const y0 = src0[srcOffset0 + 1];\n    const z0 = src0[srcOffset0 + 2];\n    const w0 = src0[srcOffset0 + 3];\n    const x1 = src1[srcOffset1];\n    const y1 = src1[srcOffset1 + 1];\n    const z1 = src1[srcOffset1 + 2];\n    const w1 = src1[srcOffset1 + 3];\n    dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n    dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n    dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n    dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n    return dst;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    this._x = value;\n    this._onChangeCallback();\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    this._y = value;\n    this._onChangeCallback();\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    this._z = value;\n    this._onChangeCallback();\n  }\n  get w() {\n    return this._w;\n  }\n  set w(value) {\n    this._w = value;\n    this._onChangeCallback();\n  }\n  set(x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this._onChangeCallback();\n    return this;\n  }\n  clone() {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  }\n  copy(quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this._onChangeCallback();\n    return this;\n  }\n  setFromEuler(euler) {\n    let update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const x = euler._x,\n      y = euler._y,\n      z = euler._z,\n      order = euler._order;\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n    const cos = Math.cos;\n    const sin = Math.sin;\n    const c1 = cos(x / 2);\n    const c2 = cos(y / 2);\n    const c3 = cos(z / 2);\n    const s1 = sin(x / 2);\n    const s2 = sin(y / 2);\n    const s3 = sin(z / 2);\n    switch (order) {\n      case 'XYZ':\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n      case 'YXZ':\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n      case 'ZXY':\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n      case 'ZYX':\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n      case 'YZX':\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n      case 'XZY':\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n      default:\n        console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n    }\n    if (update === true) this._onChangeCallback();\n    return this;\n  }\n  setFromAxisAngle(axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n    // assumes axis is normalized\n\n    const halfAngle = angle / 2,\n      s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this._onChangeCallback();\n    return this;\n  }\n  setFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10],\n      trace = m11 + m22 + m33;\n    if (trace > 0) {\n      const s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      const s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      const s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      const s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n    this._onChangeCallback();\n    return this;\n  }\n  setFromUnitVectors(vFrom, vTo) {\n    // assumes direction vectors vFrom and vTo are normalized\n\n    let r = vFrom.dot(vTo) + 1;\n    if (r < Number.EPSILON) {\n      // vFrom and vTo point in opposite directions\n\n      r = 0;\n      if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n        this._x = -vFrom.y;\n        this._y = vFrom.x;\n        this._z = 0;\n        this._w = r;\n      } else {\n        this._x = 0;\n        this._y = -vFrom.z;\n        this._z = vFrom.y;\n        this._w = r;\n      }\n    } else {\n      // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n      this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n      this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n      this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n      this._w = r;\n    }\n    return this.normalize();\n  }\n  angleTo(q) {\n    return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n  }\n  rotateTowards(q, step) {\n    const angle = this.angleTo(q);\n    if (angle === 0) return this;\n    const t = Math.min(1, step / angle);\n    this.slerp(q, t);\n    return this;\n  }\n  identity() {\n    return this.set(0, 0, 0, 1);\n  }\n  invert() {\n    // quaternion is assumed to have unit length\n\n    return this.conjugate();\n  }\n  conjugate() {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this._onChangeCallback();\n    return this;\n  }\n  dot(v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  }\n  lengthSq() {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  }\n  length() {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  }\n  normalize() {\n    let l = this.length();\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n    this._onChangeCallback();\n    return this;\n  }\n  multiply(q) {\n    return this.multiplyQuaternions(this, q);\n  }\n  premultiply(q) {\n    return this.multiplyQuaternions(q, this);\n  }\n  multiplyQuaternions(a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    const qax = a._x,\n      qay = a._y,\n      qaz = a._z,\n      qaw = a._w;\n    const qbx = b._x,\n      qby = b._y,\n      qbz = b._z,\n      qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this._onChangeCallback();\n    return this;\n  }\n  slerp(qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    const x = this._x,\n      y = this._y,\n      z = this._z,\n      w = this._w;\n\n    // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n    const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n    if (sqrSinHalfTheta <= Number.EPSILON) {\n      const s = 1 - t;\n      this._w = s * w + t * this._w;\n      this._x = s * x + t * this._x;\n      this._y = s * y + t * this._y;\n      this._z = s * z + t * this._z;\n      this.normalize(); // normalize calls _onChangeCallback()\n\n      return this;\n    }\n    const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n    const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n      ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this._onChangeCallback();\n    return this;\n  }\n  slerpQuaternions(qa, qb, t) {\n    return this.copy(qa).slerp(qb, t);\n  }\n  random() {\n    // sets this quaternion to a uniform random unit quaternnion\n\n    // Ken Shoemake\n    // Uniform random rotations\n    // D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n    const theta1 = 2 * Math.PI * Math.random();\n    const theta2 = 2 * Math.PI * Math.random();\n    const x0 = Math.random();\n    const r1 = Math.sqrt(1 - x0);\n    const r2 = Math.sqrt(x0);\n    return this.set(r1 * Math.sin(theta1), r1 * Math.cos(theta1), r2 * Math.sin(theta2), r2 * Math.cos(theta2));\n  }\n  equals(quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this._onChangeCallback();\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this._x = attribute.getX(index);\n    this._y = attribute.getY(index);\n    this._z = attribute.getZ(index);\n    this._w = attribute.getW(index);\n    this._onChangeCallback();\n    return this;\n  }\n  toJSON() {\n    return this.toArray();\n  }\n  _onChange(callback) {\n    this._onChangeCallback = callback;\n    return this;\n  }\n  _onChangeCallback() {}\n  *[Symbol.iterator]() {\n    yield this._x;\n    yield this._y;\n    yield this._z;\n    yield this._w;\n  }\n}\nclass Vector3 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    Vector3.prototype.isVector3 = true;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n  set(x, y, z) {\n    if (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  }\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n  setZ(z) {\n    this.z = z;\n    return this;\n  }\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      case 2:\n        this.z = value;\n        break;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone() {\n    return new this.constructor(this.x, this.y, this.z);\n  }\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  }\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  }\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  }\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  }\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  }\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  }\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  }\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  }\n  multiplyVectors(a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  }\n  applyEuler(euler) {\n    return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n  }\n  applyAxisAngle(axis, angle) {\n    return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n  }\n  applyMatrix3(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  }\n  applyNormalMatrix(m) {\n    return this.applyMatrix3(m).normalize();\n  }\n  applyMatrix4(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const e = m.elements;\n    const w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n    return this;\n  }\n  applyQuaternion(q) {\n    // quaternion q is assumed to have unit length\n\n    const vx = this.x,\n      vy = this.y,\n      vz = this.z;\n    const qx = q.x,\n      qy = q.y,\n      qz = q.z,\n      qw = q.w;\n\n    // t = 2 * cross( q.xyz, v );\n    const tx = 2 * (qy * vz - qz * vy);\n    const ty = 2 * (qz * vx - qx * vz);\n    const tz = 2 * (qx * vy - qy * vx);\n\n    // v + q.w * t + cross( q.xyz, t );\n    this.x = vx + qw * tx + qy * tz - qz * ty;\n    this.y = vy + qw * ty + qz * tx - qx * tz;\n    this.z = vz + qw * tz + qx * ty - qy * tx;\n    return this;\n  }\n  project(camera) {\n    return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n  }\n  unproject(camera) {\n    return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n  }\n  transformDirection(m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  }\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  }\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  }\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  }\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = clamp(this.x, min.x, max.x);\n    this.y = clamp(this.y, min.y, max.y);\n    this.z = clamp(this.z, min.z, max.z);\n    return this;\n  }\n  clampScalar(minVal, maxVal) {\n    this.x = clamp(this.x, minVal, maxVal);\n    this.y = clamp(this.y, minVal, maxVal);\n    this.z = clamp(this.z, minVal, maxVal);\n    return this;\n  }\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max));\n  }\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  }\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  }\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  }\n  roundToZero() {\n    this.x = Math.trunc(this.x);\n    this.y = Math.trunc(this.y);\n    this.z = Math.trunc(this.z);\n    return this;\n  }\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  }\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  // TODO lengthSquared?\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  }\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  }\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n    return this;\n  }\n  cross(v) {\n    return this.crossVectors(this, v);\n  }\n  crossVectors(a, b) {\n    const ax = a.x,\n      ay = a.y,\n      az = a.z;\n    const bx = b.x,\n      by = b.y,\n      bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  }\n  projectOnVector(v) {\n    const denominator = v.lengthSq();\n    if (denominator === 0) return this.set(0, 0, 0);\n    const scalar = v.dot(this) / denominator;\n    return this.copy(v).multiplyScalar(scalar);\n  }\n  projectOnPlane(planeNormal) {\n    _vector$c.copy(this).projectOnVector(planeNormal);\n    return this.sub(_vector$c);\n  }\n  reflect(normal) {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n\n    return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n  }\n  angleTo(v) {\n    const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n    if (denominator === 0) return Math.PI / 2;\n    const theta = this.dot(v) / denominator;\n\n    // clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n  }\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n  distanceToSquared(v) {\n    const dx = this.x - v.x,\n      dy = this.y - v.y,\n      dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  }\n  manhattanDistanceTo(v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n  }\n  setFromSpherical(s) {\n    return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n  }\n  setFromSphericalCoords(radius, phi, theta) {\n    const sinPhiRadius = Math.sin(phi) * radius;\n    this.x = sinPhiRadius * Math.sin(theta);\n    this.y = Math.cos(phi) * radius;\n    this.z = sinPhiRadius * Math.cos(theta);\n    return this;\n  }\n  setFromCylindrical(c) {\n    return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n  }\n  setFromCylindricalCoords(radius, theta, y) {\n    this.x = radius * Math.sin(theta);\n    this.y = y;\n    this.z = radius * Math.cos(theta);\n    return this;\n  }\n  setFromMatrixPosition(m) {\n    const e = m.elements;\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n    return this;\n  }\n  setFromMatrixScale(m) {\n    const sx = this.setFromMatrixColumn(m, 0).length();\n    const sy = this.setFromMatrixColumn(m, 1).length();\n    const sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  }\n  setFromMatrixColumn(m, index) {\n    return this.fromArray(m.elements, index * 4);\n  }\n  setFromMatrix3Column(m, index) {\n    return this.fromArray(m.elements, index * 3);\n  }\n  setFromEuler(e) {\n    this.x = e._x;\n    this.y = e._y;\n    this.z = e._z;\n    return this;\n  }\n  setFromColor(c) {\n    this.x = c.r;\n    this.y = c.g;\n    this.z = c.b;\n    return this;\n  }\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    return this;\n  }\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n    return this;\n  }\n  randomDirection() {\n    // https://mathworld.wolfram.com/SpherePointPicking.html\n\n    const theta = Math.random() * Math.PI * 2;\n    const u = Math.random() * 2 - 1;\n    const c = Math.sqrt(1 - u * u);\n    this.x = c * Math.cos(theta);\n    this.y = u;\n    this.z = c * Math.sin(theta);\n    return this;\n  }\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n    yield this.z;\n  }\n}\nconst _vector$c = /*@__PURE__*/new Vector3();\nconst _quaternion$4 = /*@__PURE__*/new Quaternion();\nclass Box3 {\n  constructor() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(+Infinity, +Infinity, +Infinity);\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(-Infinity, -Infinity, -Infinity);\n    this.isBox3 = true;\n    this.min = min;\n    this.max = max;\n  }\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n  setFromArray(array) {\n    this.makeEmpty();\n    for (let i = 0, il = array.length; i < il; i += 3) {\n      this.expandByPoint(_vector$b.fromArray(array, i));\n    }\n    return this;\n  }\n  setFromBufferAttribute(attribute) {\n    this.makeEmpty();\n    for (let i = 0, il = attribute.count; i < il; i++) {\n      this.expandByPoint(_vector$b.fromBufferAttribute(attribute, i));\n    }\n    return this;\n  }\n  setFromPoints(points) {\n    this.makeEmpty();\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n    return this;\n  }\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n  setFromObject(object) {\n    let precise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.makeEmpty();\n    return this.expandByObject(object, precise);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n  makeEmpty() {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  }\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  }\n  getCenter(target) {\n    return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n  getSize(target) {\n    return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n  }\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n  expandByObject(object) {\n    let precise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n\n    object.updateWorldMatrix(false, false);\n    const geometry = object.geometry;\n    if (geometry !== undefined) {\n      const positionAttribute = geometry.getAttribute('position');\n\n      // precise AABB computation based on vertex data requires at least a position attribute.\n      // instancing isn't supported so far and uses the normal (conservative) code path.\n\n      if (precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true) {\n        for (let i = 0, l = positionAttribute.count; i < l; i++) {\n          if (object.isMesh === true) {\n            object.getVertexPosition(i, _vector$b);\n          } else {\n            _vector$b.fromBufferAttribute(positionAttribute, i);\n          }\n          _vector$b.applyMatrix4(object.matrixWorld);\n          this.expandByPoint(_vector$b);\n        }\n      } else {\n        if (object.boundingBox !== undefined) {\n          // object-level bounding box\n\n          if (object.boundingBox === null) {\n            object.computeBoundingBox();\n          }\n          _box$4.copy(object.boundingBox);\n        } else {\n          // geometry-level bounding box\n\n          if (geometry.boundingBox === null) {\n            geometry.computeBoundingBox();\n          }\n          _box$4.copy(geometry.boundingBox);\n        }\n        _box$4.applyMatrix4(object.matrixWorld);\n        this.union(_box$4);\n      }\n    }\n    const children = object.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      this.expandByObject(children[i], precise);\n    }\n    return this;\n  }\n  containsPoint(point) {\n    return point.x >= this.min.x && point.x <= this.max.x && point.y >= this.min.y && point.y <= this.max.y && point.z >= this.min.z && point.z <= this.max.z;\n  }\n  containsBox(box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n  }\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  }\n  intersectsBox(box) {\n    // using 6 splitting planes to rule out intersections.\n    return box.max.x >= this.min.x && box.min.x <= this.max.x && box.max.y >= this.min.y && box.min.y <= this.max.y && box.max.z >= this.min.z && box.min.z <= this.max.z;\n  }\n  intersectsSphere(sphere) {\n    // Find the point on the AABB closest to the sphere center.\n    this.clampPoint(sphere.center, _vector$b);\n\n    // If that point is inside the sphere, the AABB and sphere intersect.\n    return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n  }\n  intersectsPlane(plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n\n    let min, max;\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n    return min <= -plane.constant && max >= -plane.constant;\n  }\n  intersectsTriangle(triangle) {\n    if (this.isEmpty()) {\n      return false;\n    }\n\n    // compute box center and extents\n    this.getCenter(_center);\n    _extents.subVectors(this.max, _center);\n\n    // translate triangle to aabb origin\n    _v0$2.subVectors(triangle.a, _center);\n    _v1$7.subVectors(triangle.b, _center);\n    _v2$4.subVectors(triangle.c, _center);\n\n    // compute edge vectors for triangle\n    _f0.subVectors(_v1$7, _v0$2);\n    _f1.subVectors(_v2$4, _v1$7);\n    _f2.subVectors(_v0$2, _v2$4);\n\n    // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n    // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n    // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n    let axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n    if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {\n      return false;\n    }\n\n    // test 3 face normals from the aabb\n    axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {\n      return false;\n    }\n\n    // finally testing the face normal of the triangle\n    // use already existing triangle edge vectors here\n    _triangleNormal.crossVectors(_f0, _f1);\n    axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n    return satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents);\n  }\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n  distanceToPoint(point) {\n    return this.clampPoint(point, _vector$b).distanceTo(point);\n  }\n  getBoundingSphere(target) {\n    if (this.isEmpty()) {\n      target.makeEmpty();\n    } else {\n      this.getCenter(target.center);\n      target.radius = this.getSize(_vector$b).length() * 0.5;\n    }\n    return target;\n  }\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n\n    // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  }\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n  applyMatrix4(matrix) {\n    // transform of empty box is an empty box.\n    if (this.isEmpty()) return this;\n\n    // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n    _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n    _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n    _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n    _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n    _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n    _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n    _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n    _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n    this.setFromPoints(_points);\n    return this;\n  }\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}\nconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\nconst _vector$b = /*@__PURE__*/new Vector3();\nconst _box$4 = /*@__PURE__*/new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/new Vector3();\nconst _v1$7 = /*@__PURE__*/new Vector3();\nconst _v2$4 = /*@__PURE__*/new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/new Vector3();\nconst _f1 = /*@__PURE__*/new Vector3();\nconst _f2 = /*@__PURE__*/new Vector3();\nconst _center = /*@__PURE__*/new Vector3();\nconst _extents = /*@__PURE__*/new Vector3();\nconst _triangleNormal = /*@__PURE__*/new Vector3();\nconst _testAxis = /*@__PURE__*/new Vector3();\nfunction satForAxes(axes, v0, v1, v2, extents) {\n  for (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n    _testAxis.fromArray(axes, i);\n    // project the aabb onto the separating axis\n    const r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z);\n    // project all 3 vertices of the triangle onto the separating axis\n    const p0 = v0.dot(_testAxis);\n    const p1 = v1.dot(_testAxis);\n    const p2 = v2.dot(_testAxis);\n    // actual test, basically see if either of the most extreme of the triangle points intersects r\n    if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n      // points of the projected triangle are outside the projected half-length of the aabb\n      // the axis is separating and we can exit\n      return false;\n    }\n  }\n  return true;\n}\nconst _box$3 = /*@__PURE__*/new Box3();\nconst _v1$6 = /*@__PURE__*/new Vector3();\nconst _v2$3 = /*@__PURE__*/new Vector3();\nclass Sphere {\n  constructor() {\n    let center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let radius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    this.isSphere = true;\n    this.center = center;\n    this.radius = radius;\n  }\n  set(center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  }\n  setFromPoints(points, optionalCenter) {\n    const center = this.center;\n    if (optionalCenter !== undefined) {\n      center.copy(optionalCenter);\n    } else {\n      _box$3.setFromPoints(points).getCenter(center);\n    }\n    let maxRadiusSq = 0;\n    for (let i = 0, il = points.length; i < il; i++) {\n      maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n    }\n    this.radius = Math.sqrt(maxRadiusSq);\n    return this;\n  }\n  copy(sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  }\n  isEmpty() {\n    return this.radius < 0;\n  }\n  makeEmpty() {\n    this.center.set(0, 0, 0);\n    this.radius = -1;\n    return this;\n  }\n  containsPoint(point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  }\n  distanceToPoint(point) {\n    return point.distanceTo(this.center) - this.radius;\n  }\n  intersectsSphere(sphere) {\n    const radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  }\n  intersectsBox(box) {\n    return box.intersectsSphere(this);\n  }\n  intersectsPlane(plane) {\n    return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n  }\n  clampPoint(point, target) {\n    const deltaLengthSq = this.center.distanceToSquared(point);\n    target.copy(point);\n    if (deltaLengthSq > this.radius * this.radius) {\n      target.sub(this.center).normalize();\n      target.multiplyScalar(this.radius).add(this.center);\n    }\n    return target;\n  }\n  getBoundingBox(target) {\n    if (this.isEmpty()) {\n      // Empty sphere produces empty bounding box\n      target.makeEmpty();\n      return target;\n    }\n    target.set(this.center, this.center);\n    target.expandByScalar(this.radius);\n    return target;\n  }\n  applyMatrix4(matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  }\n  translate(offset) {\n    this.center.add(offset);\n    return this;\n  }\n  expandByPoint(point) {\n    if (this.isEmpty()) {\n      this.center.copy(point);\n      this.radius = 0;\n      return this;\n    }\n    _v1$6.subVectors(point, this.center);\n    const lengthSq = _v1$6.lengthSq();\n    if (lengthSq > this.radius * this.radius) {\n      // calculate the minimal sphere\n\n      const length = Math.sqrt(lengthSq);\n      const delta = (length - this.radius) * 0.5;\n      this.center.addScaledVector(_v1$6, delta / length);\n      this.radius += delta;\n    }\n    return this;\n  }\n  union(sphere) {\n    if (sphere.isEmpty()) {\n      return this;\n    }\n    if (this.isEmpty()) {\n      this.copy(sphere);\n      return this;\n    }\n    if (this.center.equals(sphere.center) === true) {\n      this.radius = Math.max(this.radius, sphere.radius);\n    } else {\n      _v2$3.subVectors(sphere.center, this.center).setLength(sphere.radius);\n      this.expandByPoint(_v1$6.copy(sphere.center).add(_v2$3));\n      this.expandByPoint(_v1$6.copy(sphere.center).sub(_v2$3));\n    }\n    return this;\n  }\n  equals(sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nconst _vector$a = /*@__PURE__*/new Vector3();\nconst _segCenter = /*@__PURE__*/new Vector3();\nconst _segDir = /*@__PURE__*/new Vector3();\nconst _diff = /*@__PURE__*/new Vector3();\nconst _edge1 = /*@__PURE__*/new Vector3();\nconst _edge2 = /*@__PURE__*/new Vector3();\nconst _normal$1 = /*@__PURE__*/new Vector3();\nclass Ray {\n  constructor() {\n    let origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 0, -1);\n    this.origin = origin;\n    this.direction = direction;\n  }\n  set(origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  }\n  copy(ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  }\n  at(t, target) {\n    return target.copy(this.origin).addScaledVector(this.direction, t);\n  }\n  lookAt(v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n    return this;\n  }\n  recast(t) {\n    this.origin.copy(this.at(t, _vector$a));\n    return this;\n  }\n  closestPointToPoint(point, target) {\n    target.subVectors(point, this.origin);\n    const directionDistance = target.dot(this.direction);\n    if (directionDistance < 0) {\n      return target.copy(this.origin);\n    }\n    return target.copy(this.origin).addScaledVector(this.direction, directionDistance);\n  }\n  distanceToPoint(point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  }\n  distanceSqToPoint(point) {\n    const directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction);\n\n    // point behind the ray\n\n    if (directionDistance < 0) {\n      return this.origin.distanceToSquared(point);\n    }\n    _vector$a.copy(this.origin).addScaledVector(this.direction, directionDistance);\n    return _vector$a.distanceToSquared(point);\n  }\n  distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n    // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n    // It returns the min distance between the ray and the segment\n    // defined by v0 and v1\n    // It can also set two optional targets :\n    // - The closest point on the ray\n    // - The closest point on the segment\n\n    _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n    _segDir.copy(v1).sub(v0).normalize();\n    _diff.copy(this.origin).sub(_segCenter);\n    const segExtent = v0.distanceTo(v1) * 0.5;\n    const a01 = -this.direction.dot(_segDir);\n    const b0 = _diff.dot(this.direction);\n    const b1 = -_diff.dot(_segDir);\n    const c = _diff.lengthSq();\n    const det = Math.abs(1 - a01 * a01);\n    let s0, s1, sqrDist, extDet;\n    if (det > 0) {\n      // The ray and segment are not parallel.\n\n      s0 = a01 * b1 - b0;\n      s1 = a01 * b0 - b1;\n      extDet = segExtent * det;\n      if (s0 >= 0) {\n        if (s1 >= -extDet) {\n          if (s1 <= extDet) {\n            // region 0\n            // Minimum at interior points of ray and segment.\n\n            const invDet = 1 / det;\n            s0 *= invDet;\n            s1 *= invDet;\n            sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n          } else {\n            // region 1\n\n            s1 = segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          // region 5\n\n          s1 = -segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      } else {\n        if (s1 <= -extDet) {\n          // region 4\n\n          s0 = Math.max(0, -(-a01 * segExtent + b0));\n          s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        } else if (s1 <= extDet) {\n          // region 3\n\n          s0 = 0;\n          s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = s1 * (s1 + 2 * b1) + c;\n        } else {\n          // region 2\n\n          s0 = Math.max(0, -(a01 * segExtent + b0));\n          s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      }\n    } else {\n      // Ray and segment are parallel.\n\n      s1 = a01 > 0 ? -segExtent : segExtent;\n      s0 = Math.max(0, -(a01 * s1 + b0));\n      sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n    }\n    if (optionalPointOnRay) {\n      optionalPointOnRay.copy(this.origin).addScaledVector(this.direction, s0);\n    }\n    if (optionalPointOnSegment) {\n      optionalPointOnSegment.copy(_segCenter).addScaledVector(_segDir, s1);\n    }\n    return sqrDist;\n  }\n  intersectSphere(sphere, target) {\n    _vector$a.subVectors(sphere.center, this.origin);\n    const tca = _vector$a.dot(this.direction);\n    const d2 = _vector$a.dot(_vector$a) - tca * tca;\n    const radius2 = sphere.radius * sphere.radius;\n    if (d2 > radius2) return null;\n    const thc = Math.sqrt(radius2 - d2);\n\n    // t0 = first intersect point - entrance on front of sphere\n    const t0 = tca - thc;\n\n    // t1 = second intersect point - exit point on back of sphere\n    const t1 = tca + thc;\n\n    // test to see if t1 is behind the ray - if so, return null\n    if (t1 < 0) return null;\n\n    // test to see if t0 is behind the ray:\n    // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n    // in order to always return an intersect point that is in front of the ray.\n    if (t0 < 0) return this.at(t1, target);\n\n    // else t0 is in front of the ray, so return the first collision point scaled by t0\n    return this.at(t0, target);\n  }\n  intersectsSphere(sphere) {\n    return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n  }\n  distanceToPlane(plane) {\n    const denominator = plane.normal.dot(this.direction);\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      }\n\n      // Null is preferable to undefined since undefined means.... it is undefined\n\n      return null;\n    }\n    const t = -(this.origin.dot(plane.normal) + plane.constant) / denominator;\n\n    // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  }\n  intersectPlane(plane, target) {\n    const t = this.distanceToPlane(plane);\n    if (t === null) {\n      return null;\n    }\n    return this.at(t, target);\n  }\n  intersectsPlane(plane) {\n    // check if the ray lies on the plane first\n\n    const distToPoint = plane.distanceToPoint(this.origin);\n    if (distToPoint === 0) {\n      return true;\n    }\n    const denominator = plane.normal.dot(this.direction);\n    if (denominator * distToPoint < 0) {\n      return true;\n    }\n\n    // ray origin is behind the plane (and is pointing behind it)\n\n    return false;\n  }\n  intersectBox(box, target) {\n    let tmin, tmax, tymin, tymax, tzmin, tzmax;\n    const invdirx = 1 / this.direction.x,\n      invdiry = 1 / this.direction.y,\n      invdirz = 1 / this.direction.z;\n    const origin = this.origin;\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n    if (tmin > tymax || tymin > tmax) return null;\n    if (tymin > tmin || isNaN(tmin)) tmin = tymin;\n    if (tymax < tmax || isNaN(tmax)) tmax = tymax;\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax;\n\n    //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, target);\n  }\n  intersectsBox(box) {\n    return this.intersectBox(box, _vector$a) !== null;\n  }\n  intersectTriangle(a, b, c, backfaceCulling, target) {\n    // Compute the offset origin, edges, and normal.\n\n    // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n    _edge1.subVectors(b, a);\n    _edge2.subVectors(c, a);\n    _normal$1.crossVectors(_edge1, _edge2);\n\n    // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n    // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n    //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n    //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n    //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n    let DdN = this.direction.dot(_normal$1);\n    let sign;\n    if (DdN > 0) {\n      if (backfaceCulling) return null;\n      sign = 1;\n    } else if (DdN < 0) {\n      sign = -1;\n      DdN = -DdN;\n    } else {\n      return null;\n    }\n    _diff.subVectors(this.origin, a);\n    const DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2));\n\n    // b1 < 0, no intersection\n    if (DdQxE2 < 0) {\n      return null;\n    }\n    const DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff));\n\n    // b2 < 0, no intersection\n    if (DdE1xQ < 0) {\n      return null;\n    }\n\n    // b1+b2 > 1, no intersection\n    if (DdQxE2 + DdE1xQ > DdN) {\n      return null;\n    }\n\n    // Line intersects triangle, check if ray does.\n    const QdN = -sign * _diff.dot(_normal$1);\n\n    // t < 0, no intersection\n    if (QdN < 0) {\n      return null;\n    }\n\n    // Ray intersects triangle.\n    return this.at(QdN / DdN, target);\n  }\n  applyMatrix4(matrix4) {\n    this.origin.applyMatrix4(matrix4);\n    this.direction.transformDirection(matrix4);\n    return this;\n  }\n  equals(ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nclass Matrix4 {\n  constructor(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    Matrix4.prototype.isMatrix4 = true;\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    if (n11 !== undefined) {\n      this.set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);\n    }\n  }\n  set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    const te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  }\n  identity() {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  }\n  clone() {\n    return new Matrix4().fromArray(this.elements);\n  }\n  copy(m) {\n    const te = this.elements;\n    const me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    te[9] = me[9];\n    te[10] = me[10];\n    te[11] = me[11];\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    te[15] = me[15];\n    return this;\n  }\n  copyPosition(m) {\n    const te = this.elements,\n      me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  }\n  setFromMatrix3(m) {\n    const me = m.elements;\n    this.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n    return this;\n  }\n  extractBasis(xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  }\n  makeBasis(xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  }\n  extractRotation(m) {\n    // this method does not support reflection matrices\n\n    const te = this.elements;\n    const me = m.elements;\n    const scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n    const scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n    const scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n    te[0] = me[0] * scaleX;\n    te[1] = me[1] * scaleX;\n    te[2] = me[2] * scaleX;\n    te[3] = 0;\n    te[4] = me[4] * scaleY;\n    te[5] = me[5] * scaleY;\n    te[6] = me[6] * scaleY;\n    te[7] = 0;\n    te[8] = me[8] * scaleZ;\n    te[9] = me[9] * scaleZ;\n    te[10] = me[10] * scaleZ;\n    te[11] = 0;\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  }\n  makeRotationFromEuler(euler) {\n    const te = this.elements;\n    const x = euler.x,\n      y = euler.y,\n      z = euler.z;\n    const a = Math.cos(x),\n      b = Math.sin(x);\n    const c = Math.cos(y),\n      d = Math.sin(y);\n    const e = Math.cos(z),\n      f = Math.sin(z);\n    if (euler.order === 'XYZ') {\n      const ae = a * e,\n        af = a * f,\n        be = b * e,\n        bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      const ce = c * e,\n        cf = c * f,\n        de = d * e,\n        df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      const ce = c * e,\n        cf = c * f,\n        de = d * e,\n        df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      const ae = a * e,\n        af = a * f,\n        be = b * e,\n        bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      const ac = a * c,\n        ad = a * d,\n        bc = b * c,\n        bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      const ac = a * c,\n        ad = a * d,\n        bc = b * c,\n        bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    }\n\n    // bottom row\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n\n    // last column\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  }\n  makeRotationFromQuaternion(q) {\n    return this.compose(_zero, q, _one);\n  }\n  lookAt(eye, target, up) {\n    const te = this.elements;\n    _z.subVectors(eye, target);\n    if (_z.lengthSq() === 0) {\n      // eye and target are in the same position\n\n      _z.z = 1;\n    }\n    _z.normalize();\n    _x.crossVectors(up, _z);\n    if (_x.lengthSq() === 0) {\n      // up and z are parallel\n\n      if (Math.abs(up.z) === 1) {\n        _z.x += 0.0001;\n      } else {\n        _z.z += 0.0001;\n      }\n      _z.normalize();\n      _x.crossVectors(up, _z);\n    }\n    _x.normalize();\n    _y.crossVectors(_z, _x);\n    te[0] = _x.x;\n    te[4] = _y.x;\n    te[8] = _z.x;\n    te[1] = _x.y;\n    te[5] = _y.y;\n    te[9] = _z.y;\n    te[2] = _x.z;\n    te[6] = _y.z;\n    te[10] = _z.z;\n    return this;\n  }\n  multiply(m) {\n    return this.multiplyMatrices(this, m);\n  }\n  premultiply(m) {\n    return this.multiplyMatrices(m, this);\n  }\n  multiplyMatrices(a, b) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n    const a11 = ae[0],\n      a12 = ae[4],\n      a13 = ae[8],\n      a14 = ae[12];\n    const a21 = ae[1],\n      a22 = ae[5],\n      a23 = ae[9],\n      a24 = ae[13];\n    const a31 = ae[2],\n      a32 = ae[6],\n      a33 = ae[10],\n      a34 = ae[14];\n    const a41 = ae[3],\n      a42 = ae[7],\n      a43 = ae[11],\n      a44 = ae[15];\n    const b11 = be[0],\n      b12 = be[4],\n      b13 = be[8],\n      b14 = be[12];\n    const b21 = be[1],\n      b22 = be[5],\n      b23 = be[9],\n      b24 = be[13];\n    const b31 = be[2],\n      b32 = be[6],\n      b33 = be[10],\n      b34 = be[14];\n    const b41 = be[3],\n      b42 = be[7],\n      b43 = be[11],\n      b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  }\n  multiplyScalar(s) {\n    const te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  }\n  determinant() {\n    const te = this.elements;\n    const n11 = te[0],\n      n12 = te[4],\n      n13 = te[8],\n      n14 = te[12];\n    const n21 = te[1],\n      n22 = te[5],\n      n23 = te[9],\n      n24 = te[13];\n    const n31 = te[2],\n      n32 = te[6],\n      n33 = te[10],\n      n34 = te[14];\n    const n41 = te[3],\n      n42 = te[7],\n      n43 = te[11],\n      n44 = te[15];\n\n    //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  }\n  transpose() {\n    const te = this.elements;\n    let tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  }\n  setPosition(x, y, z) {\n    const te = this.elements;\n    if (x.isVector3) {\n      te[12] = x.x;\n      te[13] = x.y;\n      te[14] = x.z;\n    } else {\n      te[12] = x;\n      te[13] = y;\n      te[14] = z;\n    }\n    return this;\n  }\n  invert() {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    const te = this.elements,\n      n11 = te[0],\n      n21 = te[1],\n      n31 = te[2],\n      n41 = te[3],\n      n12 = te[4],\n      n22 = te[5],\n      n32 = te[6],\n      n42 = te[7],\n      n13 = te[8],\n      n23 = te[9],\n      n33 = te[10],\n      n43 = te[11],\n      n14 = te[12],\n      n24 = te[13],\n      n34 = te[14],\n      n44 = te[15],\n      t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n      t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n      t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n      t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n    if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  }\n  scale(v) {\n    const te = this.elements;\n    const x = v.x,\n      y = v.y,\n      z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  }\n  getMaxScaleOnAxis() {\n    const te = this.elements;\n    const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  }\n  makeTranslation(x, y, z) {\n    if (x.isVector3) {\n      this.set(1, 0, 0, x.x, 0, 1, 0, x.y, 0, 0, 1, x.z, 0, 0, 0, 1);\n    } else {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    }\n    return this;\n  }\n  makeRotationX(theta) {\n    const c = Math.cos(theta),\n      s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  }\n  makeRotationY(theta) {\n    const c = Math.cos(theta),\n      s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  }\n  makeRotationZ(theta) {\n    const c = Math.cos(theta),\n      s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  }\n  makeRotationAxis(axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const t = 1 - c;\n    const x = axis.x,\n      y = axis.y,\n      z = axis.z;\n    const tx = t * x,\n      ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  }\n  makeScale(x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  }\n  makeShear(xy, xz, yx, yz, zx, zy) {\n    this.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n    return this;\n  }\n  compose(position, quaternion, scale) {\n    const te = this.elements;\n    const x = quaternion._x,\n      y = quaternion._y,\n      z = quaternion._z,\n      w = quaternion._w;\n    const x2 = x + x,\n      y2 = y + y,\n      z2 = z + z;\n    const xx = x * x2,\n      xy = x * y2,\n      xz = x * z2;\n    const yy = y * y2,\n      yz = y * z2,\n      zz = z * z2;\n    const wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n    const sx = scale.x,\n      sy = scale.y,\n      sz = scale.z;\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n    te[12] = position.x;\n    te[13] = position.y;\n    te[14] = position.z;\n    te[15] = 1;\n    return this;\n  }\n  decompose(position, quaternion, scale) {\n    const te = this.elements;\n    let sx = _v1$5.set(te[0], te[1], te[2]).length();\n    const sy = _v1$5.set(te[4], te[5], te[6]).length();\n    const sz = _v1$5.set(te[8], te[9], te[10]).length();\n\n    // if determine is negative, we need to invert one scale\n    const det = this.determinant();\n    if (det < 0) sx = -sx;\n    position.x = te[12];\n    position.y = te[13];\n    position.z = te[14];\n\n    // scale the rotation part\n    _m1$2.copy(this);\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n    _m1$2.elements[0] *= invSX;\n    _m1$2.elements[1] *= invSX;\n    _m1$2.elements[2] *= invSX;\n    _m1$2.elements[4] *= invSY;\n    _m1$2.elements[5] *= invSY;\n    _m1$2.elements[6] *= invSY;\n    _m1$2.elements[8] *= invSZ;\n    _m1$2.elements[9] *= invSZ;\n    _m1$2.elements[10] *= invSZ;\n    quaternion.setFromRotationMatrix(_m1$2);\n    scale.x = sx;\n    scale.y = sy;\n    scale.z = sz;\n    return this;\n  }\n  makePerspective(left, right, top, bottom, near, far) {\n    let coordinateSystem = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : WebGLCoordinateSystem;\n    const te = this.elements;\n    const x = 2 * near / (right - left);\n    const y = 2 * near / (top - bottom);\n    const a = (right + left) / (right - left);\n    const b = (top + bottom) / (top - bottom);\n    let c, d;\n    if (coordinateSystem === WebGLCoordinateSystem) {\n      c = -(far + near) / (far - near);\n      d = -2 * far * near / (far - near);\n    } else if (coordinateSystem === WebGPUCoordinateSystem) {\n      c = -far / (far - near);\n      d = -far * near / (far - near);\n    } else {\n      throw new Error('THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem);\n    }\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  }\n  makeOrthographic(left, right, top, bottom, near, far) {\n    let coordinateSystem = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : WebGLCoordinateSystem;\n    const te = this.elements;\n    const w = 1.0 / (right - left);\n    const h = 1.0 / (top - bottom);\n    const p = 1.0 / (far - near);\n    const x = (right + left) * w;\n    const y = (top + bottom) * h;\n    let z, zInv;\n    if (coordinateSystem === WebGLCoordinateSystem) {\n      z = (far + near) * p;\n      zInv = -2 * p;\n    } else if (coordinateSystem === WebGPUCoordinateSystem) {\n      z = near * p;\n      zInv = -1 * p;\n    } else {\n      throw new Error('THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem);\n    }\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = zInv;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  }\n  equals(matrix) {\n    const te = this.elements;\n    const me = matrix.elements;\n    for (let i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n    return true;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    for (let i = 0; i < 16; i++) {\n      this.elements[i] = array[i + offset];\n    }\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n}\nconst _v1$5 = /*@__PURE__*/new Vector3();\nconst _m1$2 = /*@__PURE__*/new Matrix4();\nconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\nconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\nconst _x = /*@__PURE__*/new Vector3();\nconst _y = /*@__PURE__*/new Vector3();\nconst _z = /*@__PURE__*/new Vector3();\nconst _matrix$2 = /*@__PURE__*/new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/new Quaternion();\nclass Euler {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Euler.DEFAULT_ORDER;\n    this.isEuler = true;\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    this._x = value;\n    this._onChangeCallback();\n  }\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    this._y = value;\n    this._onChangeCallback();\n  }\n  get z() {\n    return this._z;\n  }\n  set z(value) {\n    this._z = value;\n    this._onChangeCallback();\n  }\n  get order() {\n    return this._order;\n  }\n  set order(value) {\n    this._order = value;\n    this._onChangeCallback();\n  }\n  set(x, y, z) {\n    let order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this._order;\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n    this._onChangeCallback();\n    return this;\n  }\n  clone() {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  }\n  copy(euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this._onChangeCallback();\n    return this;\n  }\n  setFromRotationMatrix(m) {\n    let order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._order;\n    let update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements;\n    const m11 = te[0],\n      m12 = te[4],\n      m13 = te[8];\n    const m21 = te[1],\n      m22 = te[5],\n      m23 = te[9];\n    const m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n    switch (order) {\n      case 'XYZ':\n        this._y = Math.asin(clamp(m13, -1, 1));\n        if (Math.abs(m13) < 0.9999999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n        break;\n      case 'YXZ':\n        this._x = Math.asin(-clamp(m23, -1, 1));\n        if (Math.abs(m23) < 0.9999999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n        break;\n      case 'ZXY':\n        this._x = Math.asin(clamp(m32, -1, 1));\n        if (Math.abs(m32) < 0.9999999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n        break;\n      case 'ZYX':\n        this._y = Math.asin(-clamp(m31, -1, 1));\n        if (Math.abs(m31) < 0.9999999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n        break;\n      case 'YZX':\n        this._z = Math.asin(clamp(m21, -1, 1));\n        if (Math.abs(m21) < 0.9999999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n        break;\n      case 'XZY':\n        this._z = Math.asin(-clamp(m12, -1, 1));\n        if (Math.abs(m12) < 0.9999999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n        break;\n      default:\n        console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n    }\n    this._order = order;\n    if (update === true) this._onChangeCallback();\n    return this;\n  }\n  setFromQuaternion(q, order, update) {\n    _matrix$2.makeRotationFromQuaternion(q);\n    return this.setFromRotationMatrix(_matrix$2, order, update);\n  }\n  setFromVector3(v) {\n    let order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._order;\n    return this.set(v.x, v.y, v.z, order);\n  }\n  reorder(newOrder) {\n    // WARNING: this discards revolution information -bhouston\n\n    _quaternion$3.setFromEuler(this);\n    return this.setFromQuaternion(_quaternion$3, newOrder);\n  }\n  equals(euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  }\n  fromArray(array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this._onChangeCallback();\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  }\n  _onChange(callback) {\n    this._onChangeCallback = callback;\n    return this;\n  }\n  _onChangeCallback() {}\n  *[Symbol.iterator]() {\n    yield this._x;\n    yield this._y;\n    yield this._z;\n    yield this._order;\n  }\n}\nEuler.DEFAULT_ORDER = 'XYZ';\nclass Layers {\n  constructor() {\n    this.mask = 1 | 0;\n  }\n  set(channel) {\n    this.mask = (1 << channel | 0) >>> 0;\n  }\n  enable(channel) {\n    this.mask |= 1 << channel | 0;\n  }\n  enableAll() {\n    this.mask = 0xffffffff | 0;\n  }\n  toggle(channel) {\n    this.mask ^= 1 << channel | 0;\n  }\n  disable(channel) {\n    this.mask &= ~(1 << channel | 0);\n  }\n  disableAll() {\n    this.mask = 0;\n  }\n  test(layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n  isEnabled(channel) {\n    return (this.mask & (1 << channel | 0)) !== 0;\n  }\n}\nlet _object3DId = 0;\nconst _v1$4 = /*@__PURE__*/new Vector3();\nconst _q1 = /*@__PURE__*/new Quaternion();\nconst _m1$1 = /*@__PURE__*/new Matrix4();\nconst _target = /*@__PURE__*/new Vector3();\nconst _position$3 = /*@__PURE__*/new Vector3();\nconst _scale$2 = /*@__PURE__*/new Vector3();\nconst _quaternion$2 = /*@__PURE__*/new Quaternion();\nconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\nconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\nconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\nconst _addedEvent = {\n  type: 'added'\n};\nconst _removedEvent = {\n  type: 'removed'\n};\nconst _childaddedEvent = {\n  type: 'childadded',\n  child: null\n};\nconst _childremovedEvent = {\n  type: 'childremoved',\n  child: null\n};\nclass Object3D extends EventDispatcher {\n  constructor() {\n    super();\n    this.isObject3D = true;\n    Object.defineProperty(this, 'id', {\n      value: _object3DId++\n    });\n    this.uuid = generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DEFAULT_UP.clone();\n    const position = new Vector3();\n    const rotation = new Euler();\n    const quaternion = new Quaternion();\n    const scale = new Vector3(1, 1, 1);\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n    rotation._onChange(onRotationChange);\n    quaternion._onChange(onQuaternionChange);\n    Object.defineProperties(this, {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n    this.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.animations = [];\n    this.userData = {};\n  }\n  onBeforeShadow(/* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */) {}\n  onAfterShadow(/* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */) {}\n  onBeforeRender(/* renderer, scene, camera, geometry, material, group */) {}\n  onAfterRender(/* renderer, scene, camera, geometry, material, group */) {}\n  applyMatrix4(matrix) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    this.matrix.premultiply(matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  }\n  applyQuaternion(q) {\n    this.quaternion.premultiply(q);\n    return this;\n  }\n  setRotationFromAxisAngle(axis, angle) {\n    // assumes axis is normalized\n\n    this.quaternion.setFromAxisAngle(axis, angle);\n  }\n  setRotationFromEuler(euler) {\n    this.quaternion.setFromEuler(euler, true);\n  }\n  setRotationFromMatrix(m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    this.quaternion.setFromRotationMatrix(m);\n  }\n  setRotationFromQuaternion(q) {\n    // assumes q is normalized\n\n    this.quaternion.copy(q);\n  }\n  rotateOnAxis(axis, angle) {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n\n    _q1.setFromAxisAngle(axis, angle);\n    this.quaternion.multiply(_q1);\n    return this;\n  }\n  rotateOnWorldAxis(axis, angle) {\n    // rotate object on axis in world space\n    // axis is assumed to be normalized\n    // method assumes no rotated parent\n\n    _q1.setFromAxisAngle(axis, angle);\n    this.quaternion.premultiply(_q1);\n    return this;\n  }\n  rotateX(angle) {\n    return this.rotateOnAxis(_xAxis, angle);\n  }\n  rotateY(angle) {\n    return this.rotateOnAxis(_yAxis, angle);\n  }\n  rotateZ(angle) {\n    return this.rotateOnAxis(_zAxis, angle);\n  }\n  translateOnAxis(axis, distance) {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n\n    _v1$4.copy(axis).applyQuaternion(this.quaternion);\n    this.position.add(_v1$4.multiplyScalar(distance));\n    return this;\n  }\n  translateX(distance) {\n    return this.translateOnAxis(_xAxis, distance);\n  }\n  translateY(distance) {\n    return this.translateOnAxis(_yAxis, distance);\n  }\n  translateZ(distance) {\n    return this.translateOnAxis(_zAxis, distance);\n  }\n  localToWorld(vector) {\n    this.updateWorldMatrix(true, false);\n    return vector.applyMatrix4(this.matrixWorld);\n  }\n  worldToLocal(vector) {\n    this.updateWorldMatrix(true, false);\n    return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n  }\n  lookAt(x, y, z) {\n    // This method does not support objects having non-uniformly-scaled parent(s)\n\n    if (x.isVector3) {\n      _target.copy(x);\n    } else {\n      _target.set(x, y, z);\n    }\n    const parent = this.parent;\n    this.updateWorldMatrix(true, false);\n    _position$3.setFromMatrixPosition(this.matrixWorld);\n    if (this.isCamera || this.isLight) {\n      _m1$1.lookAt(_position$3, _target, this.up);\n    } else {\n      _m1$1.lookAt(_target, _position$3, this.up);\n    }\n    this.quaternion.setFromRotationMatrix(_m1$1);\n    if (parent) {\n      _m1$1.extractRotation(parent.matrixWorld);\n      _q1.setFromRotationMatrix(_m1$1);\n      this.quaternion.premultiply(_q1.invert());\n    }\n  }\n  add(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n      return this;\n    }\n    if (object === this) {\n      console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n      return this;\n    }\n    if (object && object.isObject3D) {\n      object.removeFromParent();\n      object.parent = this;\n      this.children.push(object);\n      object.dispatchEvent(_addedEvent);\n      _childaddedEvent.child = object;\n      this.dispatchEvent(_childaddedEvent);\n      _childaddedEvent.child = null;\n    } else {\n      console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n    }\n    return this;\n  }\n  remove(object) {\n    if (arguments.length > 1) {\n      for (let i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n      return this;\n    }\n    const index = this.children.indexOf(object);\n    if (index !== -1) {\n      object.parent = null;\n      this.children.splice(index, 1);\n      object.dispatchEvent(_removedEvent);\n      _childremovedEvent.child = object;\n      this.dispatchEvent(_childremovedEvent);\n      _childremovedEvent.child = null;\n    }\n    return this;\n  }\n  removeFromParent() {\n    const parent = this.parent;\n    if (parent !== null) {\n      parent.remove(this);\n    }\n    return this;\n  }\n  clear() {\n    return this.remove(...this.children);\n  }\n  attach(object) {\n    // adds object as a child of this, while maintaining the object's world transform\n\n    // Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n    this.updateWorldMatrix(true, false);\n    _m1$1.copy(this.matrixWorld).invert();\n    if (object.parent !== null) {\n      object.parent.updateWorldMatrix(true, false);\n      _m1$1.multiply(object.parent.matrixWorld);\n    }\n    object.applyMatrix4(_m1$1);\n    object.removeFromParent();\n    object.parent = this;\n    this.children.push(object);\n    object.updateWorldMatrix(false, true);\n    object.dispatchEvent(_addedEvent);\n    _childaddedEvent.child = object;\n    this.dispatchEvent(_childaddedEvent);\n    _childaddedEvent.child = null;\n    return this;\n  }\n  getObjectById(id) {\n    return this.getObjectByProperty('id', id);\n  }\n  getObjectByName(name) {\n    return this.getObjectByProperty('name', name);\n  }\n  getObjectByProperty(name, value) {\n    if (this[name] === value) return this;\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      const object = child.getObjectByProperty(name, value);\n      if (object !== undefined) {\n        return object;\n      }\n    }\n    return undefined;\n  }\n  getObjectsByProperty(name, value) {\n    let result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    if (this[name] === value) result.push(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].getObjectsByProperty(name, value, result);\n    }\n    return result;\n  }\n  getWorldPosition(target) {\n    this.updateWorldMatrix(true, false);\n    return target.setFromMatrixPosition(this.matrixWorld);\n  }\n  getWorldQuaternion(target) {\n    this.updateWorldMatrix(true, false);\n    this.matrixWorld.decompose(_position$3, target, _scale$2);\n    return target;\n  }\n  getWorldScale(target) {\n    this.updateWorldMatrix(true, false);\n    this.matrixWorld.decompose(_position$3, _quaternion$2, target);\n    return target;\n  }\n  getWorldDirection(target) {\n    this.updateWorldMatrix(true, false);\n    const e = this.matrixWorld.elements;\n    return target.set(e[8], e[9], e[10]).normalize();\n  }\n  raycast(/* raycaster, intersects */) {}\n  traverse(callback) {\n    callback(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  }\n  traverseVisible(callback) {\n    if (this.visible === false) return;\n    callback(this);\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  }\n  traverseAncestors(callback) {\n    const parent = this.parent;\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  }\n  updateMatrix() {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  }\n  updateMatrixWorld(force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.matrixWorldAutoUpdate === true) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n      }\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    }\n\n    // make sure descendants are updated if required\n\n    const children = this.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      const child = children[i];\n      child.updateMatrixWorld(force);\n    }\n  }\n  updateWorldMatrix(updateParents, updateChildren) {\n    const parent = this.parent;\n    if (updateParents === true && parent !== null) {\n      parent.updateWorldMatrix(true, false);\n    }\n    if (this.matrixAutoUpdate) this.updateMatrix();\n    if (this.matrixWorldAutoUpdate === true) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n    }\n\n    // make sure descendants are updated\n\n    if (updateChildren === true) {\n      const children = this.children;\n      for (let i = 0, l = children.length; i < l; i++) {\n        const child = children[i];\n        child.updateWorldMatrix(false, true);\n      }\n    }\n  }\n  toJSON(meta) {\n    // meta is a string when called from JSON.stringify\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    const output = {};\n\n    // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {},\n        shapes: {},\n        skeletons: {},\n        animations: {},\n        nodes: {}\n      };\n      output.metadata = {\n        version: 4.6,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    }\n\n    // standard Object3D serialization\n\n    const object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (this.frustumCulled === false) object.frustumCulled = false;\n    if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n    if (Object.keys(this.userData).length > 0) object.userData = this.userData;\n    object.layers = this.layers.mask;\n    object.matrix = this.matrix.toArray();\n    object.up = this.up.toArray();\n    if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false;\n\n    // object specific properties\n\n    if (this.isInstancedMesh) {\n      object.type = 'InstancedMesh';\n      object.count = this.count;\n      object.instanceMatrix = this.instanceMatrix.toJSON();\n      if (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n    }\n    if (this.isBatchedMesh) {\n      object.type = 'BatchedMesh';\n      object.perObjectFrustumCulled = this.perObjectFrustumCulled;\n      object.sortObjects = this.sortObjects;\n      object.drawRanges = this._drawRanges;\n      object.reservedRanges = this._reservedRanges;\n      object.visibility = this._visibility;\n      object.active = this._active;\n      object.bounds = this._bounds.map(bound => ({\n        boxInitialized: bound.boxInitialized,\n        boxMin: bound.box.min.toArray(),\n        boxMax: bound.box.max.toArray(),\n        sphereInitialized: bound.sphereInitialized,\n        sphereRadius: bound.sphere.radius,\n        sphereCenter: bound.sphere.center.toArray()\n      }));\n      object.maxInstanceCount = this._maxInstanceCount;\n      object.maxVertexCount = this._maxVertexCount;\n      object.maxIndexCount = this._maxIndexCount;\n      object.geometryInitialized = this._geometryInitialized;\n      object.geometryCount = this._geometryCount;\n      object.matricesTexture = this._matricesTexture.toJSON(meta);\n      if (this._colorsTexture !== null) object.colorsTexture = this._colorsTexture.toJSON(meta);\n      if (this.boundingSphere !== null) {\n        object.boundingSphere = {\n          center: object.boundingSphere.center.toArray(),\n          radius: object.boundingSphere.radius\n        };\n      }\n      if (this.boundingBox !== null) {\n        object.boundingBox = {\n          min: object.boundingBox.min.toArray(),\n          max: object.boundingBox.max.toArray()\n        };\n      }\n    }\n\n    //\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n      return element.uuid;\n    }\n    if (this.isScene) {\n      if (this.background) {\n        if (this.background.isColor) {\n          object.background = this.background.toJSON();\n        } else if (this.background.isTexture) {\n          object.background = this.background.toJSON(meta).uuid;\n        }\n      }\n      if (this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true) {\n        object.environment = this.environment.toJSON(meta).uuid;\n      }\n    } else if (this.isMesh || this.isLine || this.isPoints) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n      const parameters = this.geometry.parameters;\n      if (parameters !== undefined && parameters.shapes !== undefined) {\n        const shapes = parameters.shapes;\n        if (Array.isArray(shapes)) {\n          for (let i = 0, l = shapes.length; i < l; i++) {\n            const shape = shapes[i];\n            serialize(meta.shapes, shape);\n          }\n        } else {\n          serialize(meta.shapes, shapes);\n        }\n      }\n    }\n    if (this.isSkinnedMesh) {\n      object.bindMode = this.bindMode;\n      object.bindMatrix = this.bindMatrix.toArray();\n      if (this.skeleton !== undefined) {\n        serialize(meta.skeletons, this.skeleton);\n        object.skeleton = this.skeleton.uuid;\n      }\n    }\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        const uuids = [];\n        for (let i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    }\n\n    //\n\n    if (this.children.length > 0) {\n      object.children = [];\n      for (let i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    //\n\n    if (this.animations.length > 0) {\n      object.animations = [];\n      for (let i = 0; i < this.animations.length; i++) {\n        const animation = this.animations[i];\n        object.animations.push(serialize(meta.animations, animation));\n      }\n    }\n    if (isRootObject) {\n      const geometries = extractFromCache(meta.geometries);\n      const materials = extractFromCache(meta.materials);\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      const shapes = extractFromCache(meta.shapes);\n      const skeletons = extractFromCache(meta.skeletons);\n      const animations = extractFromCache(meta.animations);\n      const nodes = extractFromCache(meta.nodes);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n      if (shapes.length > 0) output.shapes = shapes;\n      if (skeletons.length > 0) output.skeletons = skeletons;\n      if (animations.length > 0) output.animations = animations;\n      if (nodes.length > 0) output.nodes = nodes;\n    }\n    output.object = object;\n    return output;\n\n    // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n    function extractFromCache(cache) {\n      const values = [];\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n  }\n  clone(recursive) {\n    return new this.constructor().copy(this, recursive);\n  }\n  copy(source) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.rotation.order = source.rotation.order;\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.animations = source.animations.slice();\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    if (recursive === true) {\n      for (let i = 0; i < source.children.length; i++) {\n        const child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n    return this;\n  }\n}\nObject3D.DEFAULT_UP = /*@__PURE__*/new Vector3(0, 1, 0);\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\nconst _v0$1 = /*@__PURE__*/new Vector3();\nconst _v1$3 = /*@__PURE__*/new Vector3();\nconst _v2$2 = /*@__PURE__*/new Vector3();\nconst _v3$2 = /*@__PURE__*/new Vector3();\nconst _vab = /*@__PURE__*/new Vector3();\nconst _vac = /*@__PURE__*/new Vector3();\nconst _vbc = /*@__PURE__*/new Vector3();\nconst _vap = /*@__PURE__*/new Vector3();\nconst _vbp = /*@__PURE__*/new Vector3();\nconst _vcp = /*@__PURE__*/new Vector3();\nconst _v40 = /*@__PURE__*/new Vector4();\nconst _v41 = /*@__PURE__*/new Vector4();\nconst _v42 = /*@__PURE__*/new Vector4();\nclass Triangle {\n  constructor() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    let c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n  static getNormal(a, b, c, target) {\n    target.subVectors(c, b);\n    _v0$1.subVectors(a, b);\n    target.cross(_v0$1);\n    const targetLengthSq = target.lengthSq();\n    if (targetLengthSq > 0) {\n      return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n    }\n    return target.set(0, 0, 0);\n  }\n\n  // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n  static getBarycoord(point, a, b, c, target) {\n    _v0$1.subVectors(c, a);\n    _v1$3.subVectors(b, a);\n    _v2$2.subVectors(point, a);\n    const dot00 = _v0$1.dot(_v0$1);\n    const dot01 = _v0$1.dot(_v1$3);\n    const dot02 = _v0$1.dot(_v2$2);\n    const dot11 = _v1$3.dot(_v1$3);\n    const dot12 = _v1$3.dot(_v2$2);\n    const denom = dot00 * dot11 - dot01 * dot01;\n\n    // collinear or singular triangle\n    if (denom === 0) {\n      target.set(0, 0, 0);\n      return null;\n    }\n    const invDenom = 1 / denom;\n    const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n    // barycentric coordinates must always sum to 1\n    return target.set(1 - u - v, v, u);\n  }\n  static containsPoint(point, a, b, c) {\n    // if the triangle is degenerate then we can't contain a point\n    if (this.getBarycoord(point, a, b, c, _v3$2) === null) {\n      return false;\n    }\n    return _v3$2.x >= 0 && _v3$2.y >= 0 && _v3$2.x + _v3$2.y <= 1;\n  }\n  static getInterpolation(point, p1, p2, p3, v1, v2, v3, target) {\n    if (this.getBarycoord(point, p1, p2, p3, _v3$2) === null) {\n      target.x = 0;\n      target.y = 0;\n      if ('z' in target) target.z = 0;\n      if ('w' in target) target.w = 0;\n      return null;\n    }\n    target.setScalar(0);\n    target.addScaledVector(v1, _v3$2.x);\n    target.addScaledVector(v2, _v3$2.y);\n    target.addScaledVector(v3, _v3$2.z);\n    return target;\n  }\n  static getInterpolatedAttribute(attr, i1, i2, i3, barycoord, target) {\n    _v40.setScalar(0);\n    _v41.setScalar(0);\n    _v42.setScalar(0);\n    _v40.fromBufferAttribute(attr, i1);\n    _v41.fromBufferAttribute(attr, i2);\n    _v42.fromBufferAttribute(attr, i3);\n    target.setScalar(0);\n    target.addScaledVector(_v40, barycoord.x);\n    target.addScaledVector(_v41, barycoord.y);\n    target.addScaledVector(_v42, barycoord.z);\n    return target;\n  }\n  static isFrontFacing(a, b, c, direction) {\n    _v0$1.subVectors(c, b);\n    _v1$3.subVectors(a, b);\n\n    // strictly front facing\n    return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n  }\n  set(a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  }\n  setFromPointsAndIndices(points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  }\n  setFromAttributeAndIndices(attribute, i0, i1, i2) {\n    this.a.fromBufferAttribute(attribute, i0);\n    this.b.fromBufferAttribute(attribute, i1);\n    this.c.fromBufferAttribute(attribute, i2);\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  }\n  getArea() {\n    _v0$1.subVectors(this.c, this.b);\n    _v1$3.subVectors(this.a, this.b);\n    return _v0$1.cross(_v1$3).length() * 0.5;\n  }\n  getMidpoint(target) {\n    return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  }\n  getNormal(target) {\n    return Triangle.getNormal(this.a, this.b, this.c, target);\n  }\n  getPlane(target) {\n    return target.setFromCoplanarPoints(this.a, this.b, this.c);\n  }\n  getBarycoord(point, target) {\n    return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n  }\n  getInterpolation(point, v1, v2, v3, target) {\n    return Triangle.getInterpolation(point, this.a, this.b, this.c, v1, v2, v3, target);\n  }\n  containsPoint(point) {\n    return Triangle.containsPoint(point, this.a, this.b, this.c);\n  }\n  isFrontFacing(direction) {\n    return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n  }\n  intersectsBox(box) {\n    return box.intersectsTriangle(this);\n  }\n  closestPointToPoint(p, target) {\n    const a = this.a,\n      b = this.b,\n      c = this.c;\n    let v, w;\n\n    // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n    // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n    // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n    // basically, we're distinguishing which of the voronoi regions of the triangle\n    // the point lies in with the minimum amount of redundant computation.\n\n    _vab.subVectors(b, a);\n    _vac.subVectors(c, a);\n    _vap.subVectors(p, a);\n    const d1 = _vab.dot(_vap);\n    const d2 = _vac.dot(_vap);\n    if (d1 <= 0 && d2 <= 0) {\n      // vertex region of A; barycentric coords (1, 0, 0)\n      return target.copy(a);\n    }\n    _vbp.subVectors(p, b);\n    const d3 = _vab.dot(_vbp);\n    const d4 = _vac.dot(_vbp);\n    if (d3 >= 0 && d4 <= d3) {\n      // vertex region of B; barycentric coords (0, 1, 0)\n      return target.copy(b);\n    }\n    const vc = d1 * d4 - d3 * d2;\n    if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n      v = d1 / (d1 - d3);\n      // edge region of AB; barycentric coords (1-v, v, 0)\n      return target.copy(a).addScaledVector(_vab, v);\n    }\n    _vcp.subVectors(p, c);\n    const d5 = _vab.dot(_vcp);\n    const d6 = _vac.dot(_vcp);\n    if (d6 >= 0 && d5 <= d6) {\n      // vertex region of C; barycentric coords (0, 0, 1)\n      return target.copy(c);\n    }\n    const vb = d5 * d2 - d1 * d6;\n    if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n      w = d2 / (d2 - d6);\n      // edge region of AC; barycentric coords (1-w, 0, w)\n      return target.copy(a).addScaledVector(_vac, w);\n    }\n    const va = d3 * d6 - d5 * d4;\n    if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n      _vbc.subVectors(c, b);\n      w = (d4 - d3) / (d4 - d3 + (d5 - d6));\n      // edge region of BC; barycentric coords (0, 1-w, w)\n      return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n    }\n\n    // face region\n    const denom = 1 / (va + vb + vc);\n    // u = va * denom\n    v = vb * denom;\n    w = vc * denom;\n    return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n  }\n  equals(triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n}\nconst _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nconst _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nconst _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\nclass Color {\n  constructor(r, g, b) {\n    this.isColor = true;\n    this.r = 1;\n    this.g = 1;\n    this.b = 1;\n    return this.set(r, g, b);\n  }\n  set(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n\n      const value = r;\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n    } else {\n      this.setRGB(r, g, b);\n    }\n    return this;\n  }\n  setScalar(scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n    return this;\n  }\n  setHex(hex) {\n    let colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    ColorManagement.toWorkingColorSpace(this, colorSpace);\n    return this;\n  }\n  setRGB(r, g, b) {\n    let colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ColorManagement.workingColorSpace;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    ColorManagement.toWorkingColorSpace(this, colorSpace);\n    return this;\n  }\n  setHSL(h, s, l) {\n    let colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ColorManagement.workingColorSpace;\n    // h,s,l ranges are in 0.0 - 1.0\n    h = euclideanModulo(h, 1);\n    s = clamp(s, 0, 1);\n    l = clamp(l, 0, 1);\n    if (s === 0) {\n      this.r = this.g = this.b = l;\n    } else {\n      const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n      const q = 2 * l - p;\n      this.r = hue2rgb(q, p, h + 1 / 3);\n      this.g = hue2rgb(q, p, h);\n      this.b = hue2rgb(q, p, h - 1 / 3);\n    }\n    ColorManagement.toWorkingColorSpace(this, colorSpace);\n    return this;\n  }\n  setStyle(style) {\n    let colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n    function handleAlpha(string) {\n      if (string === undefined) return;\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n    let m;\n    if (m = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n\n      let color;\n      const name = m[1];\n      const components = m[2];\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n\n            handleAlpha(color[4]);\n            return this.setRGB(Math.min(255, parseInt(color[1], 10)) / 255, Math.min(255, parseInt(color[2], 10)) / 255, Math.min(255, parseInt(color[3], 10)) / 255, colorSpace);\n          }\n          if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n            handleAlpha(color[4]);\n            return this.setRGB(Math.min(100, parseInt(color[1], 10)) / 100, Math.min(100, parseInt(color[2], 10)) / 100, Math.min(100, parseInt(color[3], 10)) / 100, colorSpace);\n          }\n          break;\n        case 'hsl':\n        case 'hsla':\n          if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n            handleAlpha(color[4]);\n            return this.setHSL(parseFloat(color[1]) / 360, parseFloat(color[2]) / 100, parseFloat(color[3]) / 100, colorSpace);\n          }\n          break;\n        default:\n          console.warn('THREE.Color: Unknown color model ' + style);\n      }\n    } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n      // hex color\n\n      const hex = m[1];\n      const size = hex.length;\n      if (size === 3) {\n        // #ff0\n        return this.setRGB(parseInt(hex.charAt(0), 16) / 15, parseInt(hex.charAt(1), 16) / 15, parseInt(hex.charAt(2), 16) / 15, colorSpace);\n      } else if (size === 6) {\n        // #ff0000\n        return this.setHex(parseInt(hex, 16), colorSpace);\n      } else {\n        console.warn('THREE.Color: Invalid hex color ' + style);\n      }\n    } else if (style && style.length > 0) {\n      return this.setColorName(style, colorSpace);\n    }\n    return this;\n  }\n  setColorName(style) {\n    let colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SRGBColorSpace;\n    // color keywords\n    const hex = _colorKeywords[style.toLowerCase()];\n    if (hex !== undefined) {\n      // red\n      this.setHex(hex, colorSpace);\n    } else {\n      // unknown color\n      console.warn('THREE.Color: Unknown color ' + style);\n    }\n    return this;\n  }\n  clone() {\n    return new this.constructor(this.r, this.g, this.b);\n  }\n  copy(color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  }\n  copySRGBToLinear(color) {\n    this.r = SRGBToLinear(color.r);\n    this.g = SRGBToLinear(color.g);\n    this.b = SRGBToLinear(color.b);\n    return this;\n  }\n  copyLinearToSRGB(color) {\n    this.r = LinearToSRGB(color.r);\n    this.g = LinearToSRGB(color.g);\n    this.b = LinearToSRGB(color.b);\n    return this;\n  }\n  convertSRGBToLinear() {\n    this.copySRGBToLinear(this);\n    return this;\n  }\n  convertLinearToSRGB() {\n    this.copyLinearToSRGB(this);\n    return this;\n  }\n  getHex() {\n    let colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    return Math.round(clamp(_color.r * 255, 0, 255)) * 65536 + Math.round(clamp(_color.g * 255, 0, 255)) * 256 + Math.round(clamp(_color.b * 255, 0, 255));\n  }\n  getHexString() {\n    let colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n    return ('000000' + this.getHex(colorSpace).toString(16)).slice(-6);\n  }\n  getHSL(target) {\n    let colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ColorManagement.workingColorSpace;\n    // h,s,l ranges are in 0.0 - 1.0\n\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    const r = _color.r,\n      g = _color.g,\n      b = _color.b;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let hue, saturation;\n    const lightness = (min + max) / 2.0;\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      const delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    target.h = hue;\n    target.s = saturation;\n    target.l = lightness;\n    return target;\n  }\n  getRGB(target) {\n    let colorSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ColorManagement.workingColorSpace;\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    target.r = _color.r;\n    target.g = _color.g;\n    target.b = _color.b;\n    return target;\n  }\n  getStyle() {\n    let colorSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SRGBColorSpace;\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    const r = _color.r,\n      g = _color.g,\n      b = _color.b;\n    if (colorSpace !== SRGBColorSpace) {\n      // Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n      return `color(${colorSpace} ${r.toFixed(3)} ${g.toFixed(3)} ${b.toFixed(3)})`;\n    }\n    return `rgb(${Math.round(r * 255)},${Math.round(g * 255)},${Math.round(b * 255)})`;\n  }\n  offsetHSL(h, s, l) {\n    this.getHSL(_hslA);\n    return this.setHSL(_hslA.h + h, _hslA.s + s, _hslA.l + l);\n  }\n  add(color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  }\n  addColors(color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  }\n  addScalar(s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  }\n  sub(color) {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n    return this;\n  }\n  multiply(color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  }\n  multiplyScalar(s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  }\n  lerp(color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  }\n  lerpColors(color1, color2, alpha) {\n    this.r = color1.r + (color2.r - color1.r) * alpha;\n    this.g = color1.g + (color2.g - color1.g) * alpha;\n    this.b = color1.b + (color2.b - color1.b) * alpha;\n    return this;\n  }\n  lerpHSL(color, alpha) {\n    this.getHSL(_hslA);\n    color.getHSL(_hslB);\n    const h = lerp(_hslA.h, _hslB.h, alpha);\n    const s = lerp(_hslA.s, _hslB.s, alpha);\n    const l = lerp(_hslA.l, _hslB.l, alpha);\n    this.setHSL(h, s, l);\n    return this;\n  }\n  setFromVector3(v) {\n    this.r = v.x;\n    this.g = v.y;\n    this.b = v.z;\n    return this;\n  }\n  applyMatrix3(m) {\n    const r = this.r,\n      g = this.g,\n      b = this.b;\n    const e = m.elements;\n    this.r = e[0] * r + e[3] * g + e[6] * b;\n    this.g = e[1] * r + e[4] * g + e[7] * b;\n    this.b = e[2] * r + e[5] * g + e[8] * b;\n    return this;\n  }\n  equals(c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.r = attribute.getX(index);\n    this.g = attribute.getY(index);\n    this.b = attribute.getZ(index);\n    return this;\n  }\n  toJSON() {\n    return this.getHex();\n  }\n  *[Symbol.iterator]() {\n    yield this.r;\n    yield this.g;\n    yield this.b;\n  }\n}\nconst _color = /*@__PURE__*/new Color();\nColor.NAMES = _colorKeywords;\nlet _materialId = 0;\nclass Material extends EventDispatcher {\n  constructor() {\n    super();\n    this.isMaterial = true;\n    Object.defineProperty(this, 'id', {\n      value: _materialId++\n    });\n    this.uuid = generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.vertexColors = false;\n    this.opacity = 1;\n    this.transparent = false;\n    this.alphaHash = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.blendColor = new Color(0, 0, 0);\n    this.blendAlpha = 0;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = KeepStencilOp;\n    this.stencilZFail = KeepStencilOp;\n    this.stencilZPass = KeepStencilOp;\n    this.stencilWrite = false;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaToCoverage = false;\n    this.premultipliedAlpha = false;\n    this.forceSinglePass = false;\n    this.visible = true;\n    this.toneMapped = true;\n    this.userData = {};\n    this.version = 0;\n    this._alphaTest = 0;\n  }\n  get alphaTest() {\n    return this._alphaTest;\n  }\n  set alphaTest(value) {\n    if (this._alphaTest > 0 !== value > 0) {\n      this.version++;\n    }\n    this._alphaTest = value;\n  }\n\n  // onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n  onBeforeRender(/* renderer, scene, camera, geometry, object, group */) {}\n  onBeforeCompile(/* shaderobject, renderer */) {}\n  customProgramCacheKey() {\n    return this.onBeforeCompile.toString();\n  }\n  setValues(values) {\n    if (values === undefined) return;\n    for (const key in values) {\n      const newValue = values[key];\n      if (newValue === undefined) {\n        console.warn(`THREE.Material: parameter '${key}' has value of undefined.`);\n        continue;\n      }\n      const currentValue = this[key];\n      if (currentValue === undefined) {\n        console.warn(`THREE.Material: '${key}' is not a property of THREE.${this.type}.`);\n        continue;\n      }\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  }\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    if (isRootObject) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n    const data = {\n      metadata: {\n        version: 4.6,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    };\n\n    // standard Material serialization\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.sheen !== undefined) data.sheen = this.sheen;\n    if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n    if (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n    if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n    if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n    if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n    }\n    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n    }\n    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n    }\n    if (this.dispersion !== undefined) data.dispersion = this.dispersion;\n    if (this.iridescence !== undefined) data.iridescence = this.iridescence;\n    if (this.iridescenceIOR !== undefined) data.iridescenceIOR = this.iridescenceIOR;\n    if (this.iridescenceThicknessRange !== undefined) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n    if (this.iridescenceMap && this.iridescenceMap.isTexture) {\n      data.iridescenceMap = this.iridescenceMap.toJSON(meta).uuid;\n    }\n    if (this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture) {\n      data.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(meta).uuid;\n    }\n    if (this.anisotropy !== undefined) data.anisotropy = this.anisotropy;\n    if (this.anisotropyRotation !== undefined) data.anisotropyRotation = this.anisotropyRotation;\n    if (this.anisotropyMap && this.anisotropyMap.isTexture) {\n      data.anisotropyMap = this.anisotropyMap.toJSON(meta).uuid;\n    }\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap && this.lightMap.isTexture) {\n      data.lightMap = this.lightMap.toJSON(meta).uuid;\n      data.lightMapIntensity = this.lightMapIntensity;\n    }\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n    if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n    if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      if (this.combine !== undefined) data.combine = this.combine;\n    }\n    if (this.envMapRotation !== undefined) data.envMapRotation = this.envMapRotation.toArray();\n    if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n    if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n    if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n    if (this.transmission !== undefined) data.transmission = this.transmission;\n    if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n    if (this.thickness !== undefined) data.thickness = this.thickness;\n    if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n    if (this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity) data.attenuationDistance = this.attenuationDistance;\n    if (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n    if (this.size !== undefined) data.size = this.size;\n    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors === true) data.vertexColors = true;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = true;\n    if (this.blendSrc !== SrcAlphaFactor) data.blendSrc = this.blendSrc;\n    if (this.blendDst !== OneMinusSrcAlphaFactor) data.blendDst = this.blendDst;\n    if (this.blendEquation !== AddEquation) data.blendEquation = this.blendEquation;\n    if (this.blendSrcAlpha !== null) data.blendSrcAlpha = this.blendSrcAlpha;\n    if (this.blendDstAlpha !== null) data.blendDstAlpha = this.blendDstAlpha;\n    if (this.blendEquationAlpha !== null) data.blendEquationAlpha = this.blendEquationAlpha;\n    if (this.blendColor && this.blendColor.isColor) data.blendColor = this.blendColor.getHex();\n    if (this.blendAlpha !== 0) data.blendAlpha = this.blendAlpha;\n    if (this.depthFunc !== LessEqualDepth) data.depthFunc = this.depthFunc;\n    if (this.depthTest === false) data.depthTest = this.depthTest;\n    if (this.depthWrite === false) data.depthWrite = this.depthWrite;\n    if (this.colorWrite === false) data.colorWrite = this.colorWrite;\n    if (this.stencilWriteMask !== 0xff) data.stencilWriteMask = this.stencilWriteMask;\n    if (this.stencilFunc !== AlwaysStencilFunc) data.stencilFunc = this.stencilFunc;\n    if (this.stencilRef !== 0) data.stencilRef = this.stencilRef;\n    if (this.stencilFuncMask !== 0xff) data.stencilFuncMask = this.stencilFuncMask;\n    if (this.stencilFail !== KeepStencilOp) data.stencilFail = this.stencilFail;\n    if (this.stencilZFail !== KeepStencilOp) data.stencilZFail = this.stencilZFail;\n    if (this.stencilZPass !== KeepStencilOp) data.stencilZPass = this.stencilZPass;\n    if (this.stencilWrite === true) data.stencilWrite = this.stencilWrite;\n\n    // rotation (SpriteMaterial)\n    if (this.rotation !== undefined && this.rotation !== 0) data.rotation = this.rotation;\n    if (this.polygonOffset === true) data.polygonOffset = true;\n    if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n    if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n    if (this.linewidth !== undefined && this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.alphaHash === true) data.alphaHash = true;\n    if (this.alphaToCoverage === true) data.alphaToCoverage = true;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = true;\n    if (this.forceSinglePass === true) data.forceSinglePass = true;\n    if (this.wireframe === true) data.wireframe = true;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.flatShading === true) data.flatShading = true;\n    if (this.visible === false) data.visible = false;\n    if (this.toneMapped === false) data.toneMapped = false;\n    if (this.fog === false) data.fog = false;\n    if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n    // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n    if (isRootObject) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n    return data;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.name = source.name;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.blendColor.copy(source.blendColor);\n    this.blendAlpha = source.blendAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.stencilWriteMask = source.stencilWriteMask;\n    this.stencilFunc = source.stencilFunc;\n    this.stencilRef = source.stencilRef;\n    this.stencilFuncMask = source.stencilFuncMask;\n    this.stencilFail = source.stencilFail;\n    this.stencilZFail = source.stencilZFail;\n    this.stencilZPass = source.stencilZPass;\n    this.stencilWrite = source.stencilWrite;\n    const srcPlanes = source.clippingPlanes;\n    let dstPlanes = null;\n    if (srcPlanes !== null) {\n      const n = srcPlanes.length;\n      dstPlanes = new Array(n);\n      for (let i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n    this.clippingPlanes = dstPlanes;\n    this.clipIntersection = source.clipIntersection;\n    this.clipShadows = source.clipShadows;\n    this.shadowSide = source.shadowSide;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.alphaHash = source.alphaHash;\n    this.alphaToCoverage = source.alphaToCoverage;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.forceSinglePass = source.forceSinglePass;\n    this.visible = source.visible;\n    this.toneMapped = source.toneMapped;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    return this;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  onBuild(/* shaderobject, renderer */\n  ) {\n    console.warn('Material: onBuild() has been removed.'); // @deprecated, r166\n  }\n}\nclass MeshBasicMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshBasicMaterial = true;\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapRotation = new Euler();\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapRotation.copy(source.envMapRotation);\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.fog = source.fog;\n    return this;\n  }\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/_generateTables();\nfunction _generateTables() {\n  // float32 to float16 helpers\n\n  const buffer = new ArrayBuffer(4);\n  const floatView = new Float32Array(buffer);\n  const uint32View = new Uint32Array(buffer);\n  const baseTable = new Uint32Array(512);\n  const shiftTable = new Uint32Array(512);\n  for (let i = 0; i < 256; ++i) {\n    const e = i - 127;\n\n    // very small number (0, -0)\n\n    if (e < -27) {\n      baseTable[i] = 0x0000;\n      baseTable[i | 0x100] = 0x8000;\n      shiftTable[i] = 24;\n      shiftTable[i | 0x100] = 24;\n\n      // small number (denorm)\n    } else if (e < -14) {\n      baseTable[i] = 0x0400 >> -e - 14;\n      baseTable[i | 0x100] = 0x0400 >> -e - 14 | 0x8000;\n      shiftTable[i] = -e - 1;\n      shiftTable[i | 0x100] = -e - 1;\n\n      // normal number\n    } else if (e <= 15) {\n      baseTable[i] = e + 15 << 10;\n      baseTable[i | 0x100] = e + 15 << 10 | 0x8000;\n      shiftTable[i] = 13;\n      shiftTable[i | 0x100] = 13;\n\n      // large number (Infinity, -Infinity)\n    } else if (e < 128) {\n      baseTable[i] = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i] = 24;\n      shiftTable[i | 0x100] = 24;\n\n      // stay (NaN, Infinity, -Infinity)\n    } else {\n      baseTable[i] = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i] = 13;\n      shiftTable[i | 0x100] = 13;\n    }\n  }\n\n  // float16 to float32 helpers\n\n  const mantissaTable = new Uint32Array(2048);\n  const exponentTable = new Uint32Array(64);\n  const offsetTable = new Uint32Array(64);\n  for (let i = 1; i < 1024; ++i) {\n    let m = i << 13; // zero pad mantissa bits\n    let e = 0; // zero exponent\n\n    // normalized\n    while ((m & 0x00800000) === 0) {\n      m <<= 1;\n      e -= 0x00800000; // decrement exponent\n    }\n    m &= ~0x00800000; // clear leading 1 bit\n    e += 0x38800000; // adjust bias\n\n    mantissaTable[i] = m | e;\n  }\n  for (let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + (i - 1024 << 13);\n  }\n  for (let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n  }\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n  for (let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + (i - 32 << 23);\n  }\n  exponentTable[63] = 0xc7800000;\n  for (let i = 1; i < 64; ++i) {\n    if (i !== 32) {\n      offsetTable[i] = 1024;\n    }\n  }\n  return {\n    floatView: floatView,\n    uint32View: uint32View,\n    baseTable: baseTable,\n    shiftTable: shiftTable,\n    mantissaTable: mantissaTable,\n    exponentTable: exponentTable,\n    offsetTable: offsetTable\n  };\n}\n\n// float32 to float16\n\nfunction toHalfFloat(val) {\n  if (Math.abs(val) > 65504) console.warn('THREE.DataUtils.toHalfFloat(): Value out of range.');\n  val = clamp(val, -65504, 65504);\n  _tables.floatView[0] = val;\n  const f = _tables.uint32View[0];\n  const e = f >> 23 & 0x1ff;\n  return _tables.baseTable[e] + ((f & 0x007fffff) >> _tables.shiftTable[e]);\n}\n\n// float16 to float32\n\nfunction fromHalfFloat(val) {\n  const m = val >> 10;\n  _tables.uint32View[0] = _tables.mantissaTable[_tables.offsetTable[m] + (val & 0x3ff)] + _tables.exponentTable[m];\n  return _tables.floatView[0];\n}\nconst DataUtils = {\n  toHalfFloat: toHalfFloat,\n  fromHalfFloat: fromHalfFloat\n};\nconst _vector$9 = /*@__PURE__*/new Vector3();\nconst _vector2$1 = /*@__PURE__*/new Vector2();\nclass BufferAttribute {\n  constructor(array, itemSize) {\n    let normalized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n    this.isBufferAttribute = true;\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized;\n    this.usage = StaticDrawUsage;\n    this.updateRanges = [];\n    this.gpuType = FloatType;\n    this.version = 0;\n  }\n  onUploadCallback() {}\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  setUsage(value) {\n    this.usage = value;\n    return this;\n  }\n  addUpdateRange(start, count) {\n    this.updateRanges.push({\n      start,\n      count\n    });\n  }\n  clearUpdateRanges() {\n    this.updateRanges.length = 0;\n  }\n  copy(source) {\n    this.name = source.name;\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.count = source.count;\n    this.normalized = source.normalized;\n    this.usage = source.usage;\n    this.gpuType = source.gpuType;\n    return this;\n  }\n  copyAt(index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n    for (let i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n    return this;\n  }\n  copyArray(array) {\n    this.array.set(array);\n    return this;\n  }\n  applyMatrix3(m) {\n    if (this.itemSize === 2) {\n      for (let i = 0, l = this.count; i < l; i++) {\n        _vector2$1.fromBufferAttribute(this, i);\n        _vector2$1.applyMatrix3(m);\n        this.setXY(i, _vector2$1.x, _vector2$1.y);\n      }\n    } else if (this.itemSize === 3) {\n      for (let i = 0, l = this.count; i < l; i++) {\n        _vector$9.fromBufferAttribute(this, i);\n        _vector$9.applyMatrix3(m);\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n      }\n    }\n    return this;\n  }\n  applyMatrix4(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$9.fromBufferAttribute(this, i);\n      _vector$9.applyMatrix4(m);\n      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n    }\n    return this;\n  }\n  applyNormalMatrix(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$9.fromBufferAttribute(this, i);\n      _vector$9.applyNormalMatrix(m);\n      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n    }\n    return this;\n  }\n  transformDirection(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$9.fromBufferAttribute(this, i);\n      _vector$9.transformDirection(m);\n      this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n    }\n    return this;\n  }\n  set(value) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    // Matching BufferAttribute constructor, do not normalize the array.\n    this.array.set(value, offset);\n    return this;\n  }\n  getComponent(index, component) {\n    let value = this.array[index * this.itemSize + component];\n    if (this.normalized) value = denormalize(value, this.array);\n    return value;\n  }\n  setComponent(index, component, value) {\n    if (this.normalized) value = normalize(value, this.array);\n    this.array[index * this.itemSize + component] = value;\n    return this;\n  }\n  getX(index) {\n    let x = this.array[index * this.itemSize];\n    if (this.normalized) x = denormalize(x, this.array);\n    return x;\n  }\n  setX(index, x) {\n    if (this.normalized) x = normalize(x, this.array);\n    this.array[index * this.itemSize] = x;\n    return this;\n  }\n  getY(index) {\n    let y = this.array[index * this.itemSize + 1];\n    if (this.normalized) y = denormalize(y, this.array);\n    return y;\n  }\n  setY(index, y) {\n    if (this.normalized) y = normalize(y, this.array);\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  }\n  getZ(index) {\n    let z = this.array[index * this.itemSize + 2];\n    if (this.normalized) z = denormalize(z, this.array);\n    return z;\n  }\n  setZ(index, z) {\n    if (this.normalized) z = normalize(z, this.array);\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  }\n  getW(index) {\n    let w = this.array[index * this.itemSize + 3];\n    if (this.normalized) w = denormalize(w, this.array);\n    return w;\n  }\n  setW(index, w) {\n    if (this.normalized) w = normalize(w, this.array);\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  }\n  setXY(index, x, y) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n    }\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  }\n  setXYZ(index, x, y, z) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n    }\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  }\n  setXYZW(index, x, y, z, w) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n      w = normalize(w, this.array);\n    }\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  }\n  onUpload(callback) {\n    this.onUploadCallback = callback;\n    return this;\n  }\n  clone() {\n    return new this.constructor(this.array, this.itemSize).copy(this);\n  }\n  toJSON() {\n    const data = {\n      itemSize: this.itemSize,\n      type: this.array.constructor.name,\n      array: Array.from(this.array),\n      normalized: this.normalized\n    };\n    if (this.name !== '') data.name = this.name;\n    if (this.usage !== StaticDrawUsage) data.usage = this.usage;\n    return data;\n  }\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int8Array(array), itemSize, normalized);\n  }\n}\nclass Uint8BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint8Array(array), itemSize, normalized);\n  }\n}\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint8ClampedArray(array), itemSize, normalized);\n  }\n}\nclass Int16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int16Array(array), itemSize, normalized);\n  }\n}\nclass Uint16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint16Array(array), itemSize, normalized);\n  }\n}\nclass Int32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Int32Array(array), itemSize, normalized);\n  }\n}\nclass Uint32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint32Array(array), itemSize, normalized);\n  }\n}\nclass Float16BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Uint16Array(array), itemSize, normalized);\n    this.isFloat16BufferAttribute = true;\n  }\n  getX(index) {\n    let x = fromHalfFloat(this.array[index * this.itemSize]);\n    if (this.normalized) x = denormalize(x, this.array);\n    return x;\n  }\n  setX(index, x) {\n    if (this.normalized) x = normalize(x, this.array);\n    this.array[index * this.itemSize] = toHalfFloat(x);\n    return this;\n  }\n  getY(index) {\n    let y = fromHalfFloat(this.array[index * this.itemSize + 1]);\n    if (this.normalized) y = denormalize(y, this.array);\n    return y;\n  }\n  setY(index, y) {\n    if (this.normalized) y = normalize(y, this.array);\n    this.array[index * this.itemSize + 1] = toHalfFloat(y);\n    return this;\n  }\n  getZ(index) {\n    let z = fromHalfFloat(this.array[index * this.itemSize + 2]);\n    if (this.normalized) z = denormalize(z, this.array);\n    return z;\n  }\n  setZ(index, z) {\n    if (this.normalized) z = normalize(z, this.array);\n    this.array[index * this.itemSize + 2] = toHalfFloat(z);\n    return this;\n  }\n  getW(index) {\n    let w = fromHalfFloat(this.array[index * this.itemSize + 3]);\n    if (this.normalized) w = denormalize(w, this.array);\n    return w;\n  }\n  setW(index, w) {\n    if (this.normalized) w = normalize(w, this.array);\n    this.array[index * this.itemSize + 3] = toHalfFloat(w);\n    return this;\n  }\n  setXY(index, x, y) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n    }\n    this.array[index + 0] = toHalfFloat(x);\n    this.array[index + 1] = toHalfFloat(y);\n    return this;\n  }\n  setXYZ(index, x, y, z) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n    }\n    this.array[index + 0] = toHalfFloat(x);\n    this.array[index + 1] = toHalfFloat(y);\n    this.array[index + 2] = toHalfFloat(z);\n    return this;\n  }\n  setXYZW(index, x, y, z, w) {\n    index *= this.itemSize;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n      w = normalize(w, this.array);\n    }\n    this.array[index + 0] = toHalfFloat(x);\n    this.array[index + 1] = toHalfFloat(y);\n    this.array[index + 2] = toHalfFloat(z);\n    this.array[index + 3] = toHalfFloat(w);\n    return this;\n  }\n}\nclass Float32BufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    super(new Float32Array(array), itemSize, normalized);\n  }\n}\nlet _id$1 = 0;\nconst _m1 = /*@__PURE__*/new Matrix4();\nconst _obj = /*@__PURE__*/new Object3D();\nconst _offset = /*@__PURE__*/new Vector3();\nconst _box$2 = /*@__PURE__*/new Box3();\nconst _boxMorphTargets = /*@__PURE__*/new Box3();\nconst _vector$8 = /*@__PURE__*/new Vector3();\nclass BufferGeometry extends EventDispatcher {\n  constructor() {\n    super();\n    this.isBufferGeometry = true;\n    Object.defineProperty(this, 'id', {\n      value: _id$1++\n    });\n    this.uuid = generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.indirect = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.morphTargetsRelative = false;\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    this.userData = {};\n  }\n  getIndex() {\n    return this.index;\n  }\n  setIndex(index) {\n    if (Array.isArray(index)) {\n      this.index = new (arrayNeedsUint32(index) ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n    } else {\n      this.index = index;\n    }\n    return this;\n  }\n  setIndirect(indirect) {\n    this.indirect = indirect;\n    return this;\n  }\n  getIndirect() {\n    return this.indirect;\n  }\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n    return this;\n  }\n  deleteAttribute(name) {\n    delete this.attributes[name];\n    return this;\n  }\n  hasAttribute(name) {\n    return this.attributes[name] !== undefined;\n  }\n  addGroup(start, count) {\n    let materialIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex\n    });\n  }\n  clearGroups() {\n    this.groups = [];\n  }\n  setDrawRange(start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  }\n  applyMatrix4(matrix) {\n    const position = this.attributes.position;\n    if (position !== undefined) {\n      position.applyMatrix4(matrix);\n      position.needsUpdate = true;\n    }\n    const normal = this.attributes.normal;\n    if (normal !== undefined) {\n      const normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      normal.applyNormalMatrix(normalMatrix);\n      normal.needsUpdate = true;\n    }\n    const tangent = this.attributes.tangent;\n    if (tangent !== undefined) {\n      tangent.transformDirection(matrix);\n      tangent.needsUpdate = true;\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    return this;\n  }\n  applyQuaternion(q) {\n    _m1.makeRotationFromQuaternion(q);\n    this.applyMatrix4(_m1);\n    return this;\n  }\n  rotateX(angle) {\n    // rotate geometry around world x-axis\n\n    _m1.makeRotationX(angle);\n    this.applyMatrix4(_m1);\n    return this;\n  }\n  rotateY(angle) {\n    // rotate geometry around world y-axis\n\n    _m1.makeRotationY(angle);\n    this.applyMatrix4(_m1);\n    return this;\n  }\n  rotateZ(angle) {\n    // rotate geometry around world z-axis\n\n    _m1.makeRotationZ(angle);\n    this.applyMatrix4(_m1);\n    return this;\n  }\n  translate(x, y, z) {\n    // translate geometry\n\n    _m1.makeTranslation(x, y, z);\n    this.applyMatrix4(_m1);\n    return this;\n  }\n  scale(x, y, z) {\n    // scale geometry\n\n    _m1.makeScale(x, y, z);\n    this.applyMatrix4(_m1);\n    return this;\n  }\n  lookAt(vector) {\n    _obj.lookAt(vector);\n    _obj.updateMatrix();\n    this.applyMatrix4(_obj.matrix);\n    return this;\n  }\n  center() {\n    this.computeBoundingBox();\n    this.boundingBox.getCenter(_offset).negate();\n    this.translate(_offset.x, _offset.y, _offset.z);\n    return this;\n  }\n  setFromPoints(points) {\n    const positionAttribute = this.getAttribute('position');\n    if (positionAttribute === undefined) {\n      const position = [];\n      for (let i = 0, l = points.length; i < l; i++) {\n        const point = points[i];\n        position.push(point.x, point.y, point.z || 0);\n      }\n      this.setAttribute('position', new Float32BufferAttribute(position, 3));\n    } else {\n      const l = Math.min(points.length, positionAttribute.count); // make sure data do not exceed buffer size\n\n      for (let i = 0; i < l; i++) {\n        const point = points[i];\n        positionAttribute.setXYZ(i, point.x, point.y, point.z || 0);\n      }\n      if (points.length > positionAttribute.count) {\n        console.warn('THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.');\n      }\n      positionAttribute.needsUpdate = true;\n    }\n    return this;\n  }\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    const position = this.attributes.position;\n    const morphAttributesPosition = this.morphAttributes.position;\n    if (position && position.isGLBufferAttribute) {\n      console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this);\n      this.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n      return;\n    }\n    if (position !== undefined) {\n      this.boundingBox.setFromBufferAttribute(position);\n\n      // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          _box$2.setFromBufferAttribute(morphAttribute);\n          if (this.morphTargetsRelative) {\n            _vector$8.addVectors(this.boundingBox.min, _box$2.min);\n            this.boundingBox.expandByPoint(_vector$8);\n            _vector$8.addVectors(this.boundingBox.max, _box$2.max);\n            this.boundingBox.expandByPoint(_vector$8);\n          } else {\n            this.boundingBox.expandByPoint(_box$2.min);\n            this.boundingBox.expandByPoint(_box$2.max);\n          }\n        }\n      }\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  }\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    const position = this.attributes.position;\n    const morphAttributesPosition = this.morphAttributes.position;\n    if (position && position.isGLBufferAttribute) {\n      console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this);\n      this.boundingSphere.set(new Vector3(), Infinity);\n      return;\n    }\n    if (position) {\n      // first, find the center of the bounding sphere\n\n      const center = this.boundingSphere.center;\n      _box$2.setFromBufferAttribute(position);\n\n      // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n          if (this.morphTargetsRelative) {\n            _vector$8.addVectors(_box$2.min, _boxMorphTargets.min);\n            _box$2.expandByPoint(_vector$8);\n            _vector$8.addVectors(_box$2.max, _boxMorphTargets.max);\n            _box$2.expandByPoint(_vector$8);\n          } else {\n            _box$2.expandByPoint(_boxMorphTargets.min);\n            _box$2.expandByPoint(_boxMorphTargets.max);\n          }\n        }\n      }\n      _box$2.getCenter(center);\n\n      // second, try to find a boundingSphere with a radius smaller than the\n      // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n      let maxRadiusSq = 0;\n      for (let i = 0, il = position.count; i < il; i++) {\n        _vector$8.fromBufferAttribute(position, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n      }\n\n      // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          const morphTargetsRelative = this.morphTargetsRelative;\n          for (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n            _vector$8.fromBufferAttribute(morphAttribute, j);\n            if (morphTargetsRelative) {\n              _offset.fromBufferAttribute(position, j);\n              _vector$8.add(_offset);\n            }\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n          }\n        }\n      }\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    }\n  }\n  computeTangents() {\n    const index = this.index;\n    const attributes = this.attributes;\n\n    // based on http://www.terathon.com/code/tangent.html\n    // (per vertex tangents)\n\n    if (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n      console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n      return;\n    }\n    const positionAttribute = attributes.position;\n    const normalAttribute = attributes.normal;\n    const uvAttribute = attributes.uv;\n    if (this.hasAttribute('tangent') === false) {\n      this.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * positionAttribute.count), 4));\n    }\n    const tangentAttribute = this.getAttribute('tangent');\n    const tan1 = [],\n      tan2 = [];\n    for (let i = 0; i < positionAttribute.count; i++) {\n      tan1[i] = new Vector3();\n      tan2[i] = new Vector3();\n    }\n    const vA = new Vector3(),\n      vB = new Vector3(),\n      vC = new Vector3(),\n      uvA = new Vector2(),\n      uvB = new Vector2(),\n      uvC = new Vector2(),\n      sdir = new Vector3(),\n      tdir = new Vector3();\n    function handleTriangle(a, b, c) {\n      vA.fromBufferAttribute(positionAttribute, a);\n      vB.fromBufferAttribute(positionAttribute, b);\n      vC.fromBufferAttribute(positionAttribute, c);\n      uvA.fromBufferAttribute(uvAttribute, a);\n      uvB.fromBufferAttribute(uvAttribute, b);\n      uvC.fromBufferAttribute(uvAttribute, c);\n      vB.sub(vA);\n      vC.sub(vA);\n      uvB.sub(uvA);\n      uvC.sub(uvA);\n      const r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y);\n\n      // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n      if (!isFinite(r)) return;\n      sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n      tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n      tan1[a].add(sdir);\n      tan1[b].add(sdir);\n      tan1[c].add(sdir);\n      tan2[a].add(tdir);\n      tan2[b].add(tdir);\n      tan2[c].add(tdir);\n    }\n    let groups = this.groups;\n    if (groups.length === 0) {\n      groups = [{\n        start: 0,\n        count: index.count\n      }];\n    }\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const group = groups[i];\n      const start = group.start;\n      const count = group.count;\n      for (let j = start, jl = start + count; j < jl; j += 3) {\n        handleTriangle(index.getX(j + 0), index.getX(j + 1), index.getX(j + 2));\n      }\n    }\n    const tmp = new Vector3(),\n      tmp2 = new Vector3();\n    const n = new Vector3(),\n      n2 = new Vector3();\n    function handleVertex(v) {\n      n.fromBufferAttribute(normalAttribute, v);\n      n2.copy(n);\n      const t = tan1[v];\n\n      // Gram-Schmidt orthogonalize\n\n      tmp.copy(t);\n      tmp.sub(n.multiplyScalar(n.dot(t))).normalize();\n\n      // Calculate handedness\n\n      tmp2.crossVectors(n2, t);\n      const test = tmp2.dot(tan2[v]);\n      const w = test < 0.0 ? -1.0 : 1.0;\n      tangentAttribute.setXYZW(v, tmp.x, tmp.y, tmp.z, w);\n    }\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const group = groups[i];\n      const start = group.start;\n      const count = group.count;\n      for (let j = start, jl = start + count; j < jl; j += 3) {\n        handleVertex(index.getX(j + 0));\n        handleVertex(index.getX(j + 1));\n        handleVertex(index.getX(j + 2));\n      }\n    }\n  }\n  computeVertexNormals() {\n    const index = this.index;\n    const positionAttribute = this.getAttribute('position');\n    if (positionAttribute !== undefined) {\n      let normalAttribute = this.getAttribute('normal');\n      if (normalAttribute === undefined) {\n        normalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n        this.setAttribute('normal', normalAttribute);\n      } else {\n        // reset existing normals to zero\n\n        for (let i = 0, il = normalAttribute.count; i < il; i++) {\n          normalAttribute.setXYZ(i, 0, 0, 0);\n        }\n      }\n      const pA = new Vector3(),\n        pB = new Vector3(),\n        pC = new Vector3();\n      const nA = new Vector3(),\n        nB = new Vector3(),\n        nC = new Vector3();\n      const cb = new Vector3(),\n        ab = new Vector3();\n\n      // indexed elements\n\n      if (index) {\n        for (let i = 0, il = index.count; i < il; i += 3) {\n          const vA = index.getX(i + 0);\n          const vB = index.getX(i + 1);\n          const vC = index.getX(i + 2);\n          pA.fromBufferAttribute(positionAttribute, vA);\n          pB.fromBufferAttribute(positionAttribute, vB);\n          pC.fromBufferAttribute(positionAttribute, vC);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          nA.fromBufferAttribute(normalAttribute, vA);\n          nB.fromBufferAttribute(normalAttribute, vB);\n          nC.fromBufferAttribute(normalAttribute, vC);\n          nA.add(cb);\n          nB.add(cb);\n          nC.add(cb);\n          normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n          normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n          normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n\n        for (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n          pA.fromBufferAttribute(positionAttribute, i + 0);\n          pB.fromBufferAttribute(positionAttribute, i + 1);\n          pC.fromBufferAttribute(positionAttribute, i + 2);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n          normalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n          normalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n        }\n      }\n      this.normalizeNormals();\n      normalAttribute.needsUpdate = true;\n    }\n  }\n  normalizeNormals() {\n    const normals = this.attributes.normal;\n    for (let i = 0, il = normals.count; i < il; i++) {\n      _vector$8.fromBufferAttribute(normals, i);\n      _vector$8.normalize();\n      normals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n    }\n  }\n  toNonIndexed() {\n    function convertBufferAttribute(attribute, indices) {\n      const array = attribute.array;\n      const itemSize = attribute.itemSize;\n      const normalized = attribute.normalized;\n      const array2 = new array.constructor(indices.length * itemSize);\n      let index = 0,\n        index2 = 0;\n      for (let i = 0, l = indices.length; i < l; i++) {\n        if (attribute.isInterleavedBufferAttribute) {\n          index = indices[i] * attribute.data.stride + attribute.offset;\n        } else {\n          index = indices[i] * itemSize;\n        }\n        for (let j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n      return new BufferAttribute(array2, itemSize, normalized);\n    }\n\n    //\n\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n      return this;\n    }\n    const geometry2 = new BufferGeometry();\n    const indices = this.index.array;\n    const attributes = this.attributes;\n\n    // attributes\n\n    for (const name in attributes) {\n      const attribute = attributes[name];\n      const newAttribute = convertBufferAttribute(attribute, indices);\n      geometry2.setAttribute(name, newAttribute);\n    }\n\n    // morph attributes\n\n    const morphAttributes = this.morphAttributes;\n    for (const name in morphAttributes) {\n      const morphArray = [];\n      const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (let i = 0, il = morphAttribute.length; i < il; i++) {\n        const attribute = morphAttribute[i];\n        const newAttribute = convertBufferAttribute(attribute, indices);\n        morphArray.push(newAttribute);\n      }\n      geometry2.morphAttributes[name] = morphArray;\n    }\n    geometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n    // groups\n\n    const groups = this.groups;\n    for (let i = 0, l = groups.length; i < l; i++) {\n      const group = groups[i];\n      geometry2.addGroup(group.start, group.count, group.materialIndex);\n    }\n    return geometry2;\n  }\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.6,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    };\n\n    // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n    if (this.parameters !== undefined) {\n      const parameters = this.parameters;\n      for (const key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n      return data;\n    }\n\n    // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n    data.data = {\n      attributes: {}\n    };\n    const index = this.index;\n    if (index !== null) {\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: Array.prototype.slice.call(index.array)\n      };\n    }\n    const attributes = this.attributes;\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      data.data.attributes[key] = attribute.toJSON(data.data);\n    }\n    const morphAttributes = {};\n    let hasMorphAttributes = false;\n    for (const key in this.morphAttributes) {\n      const attributeArray = this.morphAttributes[key];\n      const array = [];\n      for (let i = 0, il = attributeArray.length; i < il; i++) {\n        const attribute = attributeArray[i];\n        array.push(attribute.toJSON(data.data));\n      }\n      if (array.length > 0) {\n        morphAttributes[key] = array;\n        hasMorphAttributes = true;\n      }\n    }\n    if (hasMorphAttributes) {\n      data.data.morphAttributes = morphAttributes;\n      data.data.morphTargetsRelative = this.morphTargetsRelative;\n    }\n    const groups = this.groups;\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n    const boundingSphere = this.boundingSphere;\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n    return data;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    // reset\n\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n\n    // used for storing cloned, shared data\n\n    const data = {};\n\n    // name\n\n    this.name = source.name;\n\n    // index\n\n    const index = source.index;\n    if (index !== null) {\n      this.setIndex(index.clone(data));\n    }\n\n    // attributes\n\n    const attributes = source.attributes;\n    for (const name in attributes) {\n      const attribute = attributes[name];\n      this.setAttribute(name, attribute.clone(data));\n    }\n\n    // morph attributes\n\n    const morphAttributes = source.morphAttributes;\n    for (const name in morphAttributes) {\n      const array = [];\n      const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (let i = 0, l = morphAttribute.length; i < l; i++) {\n        array.push(morphAttribute[i].clone(data));\n      }\n      this.morphAttributes[name] = array;\n    }\n    this.morphTargetsRelative = source.morphTargetsRelative;\n\n    // groups\n\n    const groups = source.groups;\n    for (let i = 0, l = groups.length; i < l; i++) {\n      const group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    // bounding box\n\n    const boundingBox = source.boundingBox;\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    }\n\n    // bounding sphere\n\n    const boundingSphere = source.boundingSphere;\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    }\n\n    // draw range\n\n    this.drawRange.start = source.drawRange.start;\n    this.drawRange.count = source.drawRange.count;\n\n    // user data\n\n    this.userData = source.userData;\n    return this;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n}\nconst _inverseMatrix$3 = /*@__PURE__*/new Matrix4();\nconst _ray$3 = /*@__PURE__*/new Ray();\nconst _sphere$6 = /*@__PURE__*/new Sphere();\nconst _sphereHitAt = /*@__PURE__*/new Vector3();\nconst _vA$1 = /*@__PURE__*/new Vector3();\nconst _vB$1 = /*@__PURE__*/new Vector3();\nconst _vC$1 = /*@__PURE__*/new Vector3();\nconst _tempA = /*@__PURE__*/new Vector3();\nconst _morphA = /*@__PURE__*/new Vector3();\nconst _intersectionPoint = /*@__PURE__*/new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\nclass Mesh extends Object3D {\n  constructor() {\n    let geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n    let material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new MeshBasicMaterial();\n    super();\n    this.isMesh = true;\n    this.type = 'Mesh';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    if (source.morphTargetInfluences !== undefined) {\n      this.morphTargetInfluences = source.morphTargetInfluences.slice();\n    }\n    if (source.morphTargetDictionary !== undefined) {\n      this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n    }\n    this.material = Array.isArray(source.material) ? source.material.slice() : source.material;\n    this.geometry = source.geometry;\n    return this;\n  }\n  updateMorphTargets() {\n    const geometry = this.geometry;\n    const morphAttributes = geometry.morphAttributes;\n    const keys = Object.keys(morphAttributes);\n    if (keys.length > 0) {\n      const morphAttribute = morphAttributes[keys[0]];\n      if (morphAttribute !== undefined) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n        for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n          const name = morphAttribute[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  }\n  getVertexPosition(index, target) {\n    const geometry = this.geometry;\n    const position = geometry.attributes.position;\n    const morphPosition = geometry.morphAttributes.position;\n    const morphTargetsRelative = geometry.morphTargetsRelative;\n    target.fromBufferAttribute(position, index);\n    const morphInfluences = this.morphTargetInfluences;\n    if (morphPosition && morphInfluences) {\n      _morphA.set(0, 0, 0);\n      for (let i = 0, il = morphPosition.length; i < il; i++) {\n        const influence = morphInfluences[i];\n        const morphAttribute = morphPosition[i];\n        if (influence === 0) continue;\n        _tempA.fromBufferAttribute(morphAttribute, index);\n        if (morphTargetsRelative) {\n          _morphA.addScaledVector(_tempA, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(target), influence);\n        }\n      }\n      target.add(_morphA);\n    }\n    return target;\n  }\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const material = this.material;\n    const matrixWorld = this.matrixWorld;\n    if (material === undefined) return;\n\n    // test with bounding sphere in world space\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    _sphere$6.copy(geometry.boundingSphere);\n    _sphere$6.applyMatrix4(matrixWorld);\n\n    // check distance from ray origin to bounding sphere\n\n    _ray$3.copy(raycaster.ray).recast(raycaster.near);\n    if (_sphere$6.containsPoint(_ray$3.origin) === false) {\n      if (_ray$3.intersectSphere(_sphere$6, _sphereHitAt) === null) return;\n      if (_ray$3.origin.distanceToSquared(_sphereHitAt) > (raycaster.far - raycaster.near) ** 2) return;\n    }\n\n    // convert ray to local space of mesh\n\n    _inverseMatrix$3.copy(matrixWorld).invert();\n    _ray$3.copy(raycaster.ray).applyMatrix4(_inverseMatrix$3);\n\n    // test with bounding box in local space\n\n    if (geometry.boundingBox !== null) {\n      if (_ray$3.intersectsBox(geometry.boundingBox) === false) return;\n    }\n\n    // test for intersections with geometry\n\n    this._computeIntersections(raycaster, intersects, _ray$3);\n  }\n  _computeIntersections(raycaster, intersects, rayLocalSpace) {\n    let intersection;\n    const geometry = this.geometry;\n    const material = this.material;\n    const index = geometry.index;\n    const position = geometry.attributes.position;\n    const uv = geometry.attributes.uv;\n    const uv1 = geometry.attributes.uv1;\n    const normal = geometry.attributes.normal;\n    const groups = geometry.groups;\n    const drawRange = geometry.drawRange;\n    if (index !== null) {\n      // indexed buffer geometry\n\n      if (Array.isArray(material)) {\n        for (let i = 0, il = groups.length; i < il; i++) {\n          const group = groups[i];\n          const groupMaterial = material[group.materialIndex];\n          const start = Math.max(group.start, drawRange.start);\n          const end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n          for (let j = start, jl = end; j < jl; j += 3) {\n            const a = index.getX(j);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            intersection = checkGeometryIntersection(this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c);\n            if (intersection) {\n              intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n              intersection.face.materialIndex = group.materialIndex;\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(index.count, drawRange.start + drawRange.count);\n        for (let i = start, il = end; i < il; i += 3) {\n          const a = index.getX(i);\n          const b = index.getX(i + 1);\n          const c = index.getX(i + 2);\n          intersection = checkGeometryIntersection(this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c);\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n            intersects.push(intersection);\n          }\n        }\n      }\n    } else if (position !== undefined) {\n      // non-indexed buffer geometry\n\n      if (Array.isArray(material)) {\n        for (let i = 0, il = groups.length; i < il; i++) {\n          const group = groups[i];\n          const groupMaterial = material[group.materialIndex];\n          const start = Math.max(group.start, drawRange.start);\n          const end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n          for (let j = start, jl = end; j < jl; j += 3) {\n            const a = j;\n            const b = j + 1;\n            const c = j + 2;\n            intersection = checkGeometryIntersection(this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c);\n            if (intersection) {\n              intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n              intersection.face.materialIndex = group.materialIndex;\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(position.count, drawRange.start + drawRange.count);\n        for (let i = start, il = end; i < il; i += 3) {\n          const a = i;\n          const b = i + 1;\n          const c = i + 2;\n          intersection = checkGeometryIntersection(this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c);\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n            intersects.push(intersection);\n          }\n        }\n      }\n    }\n  }\n}\nfunction checkIntersection$1(object, material, raycaster, ray, pA, pB, pC, point) {\n  let intersect;\n  if (material.side === BackSide) {\n    intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray.intersectTriangle(pA, pB, pC, material.side === FrontSide, point);\n  }\n  if (intersect === null) return null;\n  _intersectionPointWorld.copy(point);\n  _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n  const distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n  if (distance < raycaster.near || distance > raycaster.far) return null;\n  return {\n    distance: distance,\n    point: _intersectionPointWorld.clone(),\n    object: object\n  };\n}\nfunction checkGeometryIntersection(object, material, raycaster, ray, uv, uv1, normal, a, b, c) {\n  object.getVertexPosition(a, _vA$1);\n  object.getVertexPosition(b, _vB$1);\n  object.getVertexPosition(c, _vC$1);\n  const intersection = checkIntersection$1(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n  if (intersection) {\n    const barycoord = new Vector3();\n    Triangle.getBarycoord(_intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord);\n    if (uv) {\n      intersection.uv = Triangle.getInterpolatedAttribute(uv, a, b, c, barycoord, new Vector2());\n    }\n    if (uv1) {\n      intersection.uv1 = Triangle.getInterpolatedAttribute(uv1, a, b, c, barycoord, new Vector2());\n    }\n    if (normal) {\n      intersection.normal = Triangle.getInterpolatedAttribute(normal, a, b, c, barycoord, new Vector3());\n      if (intersection.normal.dot(ray.direction) > 0) {\n        intersection.normal.multiplyScalar(-1);\n      }\n    }\n    const face = {\n      a: a,\n      b: b,\n      c: c,\n      normal: new Vector3(),\n      materialIndex: 0\n    };\n    Triangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n    intersection.face = face;\n    intersection.barycoord = barycoord;\n  }\n  return intersection;\n}\nclass BoxGeometry extends BufferGeometry {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let widthSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let heightSegments = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let depthSegments = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    super();\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    const scope = this;\n\n    // segments\n\n    widthSegments = Math.floor(widthSegments);\n    heightSegments = Math.floor(heightSegments);\n    depthSegments = Math.floor(depthSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    let numberOfVertices = 0;\n    let groupStart = 0;\n\n    // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      const segmentWidth = width / gridX;\n      const segmentHeight = height / gridY;\n      const widthHalf = width / 2;\n      const heightHalf = height / 2;\n      const depthHalf = depth / 2;\n      const gridX1 = gridX + 1;\n      const gridY1 = gridY + 1;\n      let vertexCounter = 0;\n      let groupCount = 0;\n      const vector = new Vector3();\n\n      // generate vertices, normals and uvs\n\n      for (let iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n        for (let ix = 0; ix < gridX1; ix++) {\n          const x = ix * segmentWidth - widthHalf;\n\n          // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf;\n\n          // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z);\n\n          // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1;\n\n          // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z);\n\n          // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY);\n\n          // counters\n\n          vertexCounter += 1;\n        }\n      }\n\n      // indices\n\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n      for (let iy = 0; iy < gridY; iy++) {\n        for (let ix = 0; ix < gridX; ix++) {\n          const a = numberOfVertices + ix + gridX1 * iy;\n          const b = numberOfVertices + ix + gridX1 * (iy + 1);\n          const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          const d = numberOfVertices + (ix + 1) + gridX1 * iy;\n\n          // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n\n          // increase counter\n\n          groupCount += 6;\n        }\n      }\n\n      // add a group to the geometry. this will ensure multi material support\n\n      scope.addGroup(groupStart, groupCount, materialIndex);\n\n      // calculate new start value for groups\n\n      groupStart += groupCount;\n\n      // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n  }\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms(src) {\n  const dst = {};\n  for (const u in src) {\n    dst[u] = {};\n    for (const p in src[u]) {\n      const property = src[u][p];\n      if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n        if (property.isRenderTargetTexture) {\n          console.warn('UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().');\n          dst[u][p] = null;\n        } else {\n          dst[u][p] = property.clone();\n        }\n      } else if (Array.isArray(property)) {\n        dst[u][p] = property.slice();\n      } else {\n        dst[u][p] = property;\n      }\n    }\n  }\n  return dst;\n}\nfunction mergeUniforms(uniforms) {\n  const merged = {};\n  for (let u = 0; u < uniforms.length; u++) {\n    const tmp = cloneUniforms(uniforms[u]);\n    for (const p in tmp) {\n      merged[p] = tmp[p];\n    }\n  }\n  return merged;\n}\nfunction cloneUniformsGroups(src) {\n  const dst = [];\n  for (let u = 0; u < src.length; u++) {\n    dst.push(src[u].clone());\n  }\n  return dst;\n}\nfunction getUnlitUniformColorSpace(renderer) {\n  const currentRenderTarget = renderer.getRenderTarget();\n  if (currentRenderTarget === null) {\n    // https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n    return renderer.outputColorSpace;\n  }\n\n  // https://github.com/mrdoob/three.js/issues/27868\n  if (currentRenderTarget.isXRRenderTarget === true) {\n    return currentRenderTarget.texture.colorSpace;\n  }\n  return ColorManagement.workingColorSpace;\n}\n\n// Legacy\n\nconst UniformsUtils = {\n  clone: cloneUniforms,\n  merge: mergeUniforms\n};\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\nclass ShaderMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isShaderMaterial = true;\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.uniformsGroups = [];\n    this.vertexShader = default_vertex;\n    this.fragmentShader = default_fragment;\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n    this.lights = false; // set to use scene lights\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.forceSinglePass = true;\n    this.extensions = {\n      clipCullDistance: false,\n      // set to use vertex shader clipping\n      multiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n    };\n\n    // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv1': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n    this.uniformsNeedUpdate = false;\n    this.glslVersion = null;\n    if (parameters !== undefined) {\n      this.setValues(parameters);\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = cloneUniforms(source.uniforms);\n    this.uniformsGroups = cloneUniformsGroups(source.uniformsGroups);\n    this.defines = Object.assign({}, source.defines);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.fog = source.fog;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.extensions = Object.assign({}, source.extensions);\n    this.glslVersion = source.glslVersion;\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.glslVersion = this.glslVersion;\n    data.uniforms = {};\n    for (const name in this.uniforms) {\n      const uniform = this.uniforms[name];\n      const value = uniform.value;\n      if (value && value.isTexture) {\n        data.uniforms[name] = {\n          type: 't',\n          value: value.toJSON(meta).uuid\n        };\n      } else if (value && value.isColor) {\n        data.uniforms[name] = {\n          type: 'c',\n          value: value.getHex()\n        };\n      } else if (value && value.isVector2) {\n        data.uniforms[name] = {\n          type: 'v2',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector3) {\n        data.uniforms[name] = {\n          type: 'v3',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector4) {\n        data.uniforms[name] = {\n          type: 'v4',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix3) {\n        data.uniforms[name] = {\n          type: 'm3',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix4) {\n        data.uniforms[name] = {\n          type: 'm4',\n          value: value.toArray()\n        };\n      } else {\n        data.uniforms[name] = {\n          value: value\n        };\n\n        // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n    if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    data.lights = this.lights;\n    data.clipping = this.clipping;\n    const extensions = {};\n    for (const key in this.extensions) {\n      if (this.extensions[key] === true) extensions[key] = true;\n    }\n    if (Object.keys(extensions).length > 0) data.extensions = extensions;\n    return data;\n  }\n}\nclass Camera extends Object3D {\n  constructor() {\n    super();\n    this.isCamera = true;\n    this.type = 'Camera';\n    this.matrixWorldInverse = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.projectionMatrixInverse = new Matrix4();\n    this.coordinateSystem = WebGLCoordinateSystem;\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n    this.projectionMatrix.copy(source.projectionMatrix);\n    this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n    this.coordinateSystem = source.coordinateSystem;\n    return this;\n  }\n  getWorldDirection(target) {\n    return super.getWorldDirection(target).negate();\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    this.matrixWorldInverse.copy(this.matrixWorld).invert();\n  }\n  updateWorldMatrix(updateParents, updateChildren) {\n    super.updateWorldMatrix(updateParents, updateChildren);\n    this.matrixWorldInverse.copy(this.matrixWorld).invert();\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nconst _v3$1 = /*@__PURE__*/new Vector3();\nconst _minTarget = /*@__PURE__*/new Vector2();\nconst _maxTarget = /*@__PURE__*/new Vector2();\nclass PerspectiveCamera extends Camera {\n  constructor() {\n    let fov = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n    let aspect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.1;\n    let far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2000;\n    super();\n    this.isPerspectiveCamera = true;\n    this.type = 'PerspectiveCamera';\n    this.fov = fov;\n    this.zoom = 1;\n    this.near = near;\n    this.far = far;\n    this.focus = 10;\n    this.aspect = aspect;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  }\n\n  /**\n   * Sets the FOV by focal length in respect to the current .filmGauge.\n   *\n   * The default film gauge is 35, so that the focal length can be specified for\n   * a 35mm (full frame) camera.\n   *\n   * Values for focal length and film gauge must have the same unit.\n   */\n  setFocalLength(focalLength) {\n    /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n    const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  }\n\n  /**\n   * Calculates the focal length from the current .fov and .filmGauge.\n   */\n  getFocalLength() {\n    const vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  }\n  getEffectiveFOV() {\n    return RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n  }\n  getFilmWidth() {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  }\n  getFilmHeight() {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  }\n\n  /**\n   * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n   * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n   */\n  getViewBounds(distance, minTarget, maxTarget) {\n    _v3$1.set(-1, -1, 0.5).applyMatrix4(this.projectionMatrixInverse);\n    minTarget.set(_v3$1.x, _v3$1.y).multiplyScalar(-distance / _v3$1.z);\n    _v3$1.set(1, 1, 0.5).applyMatrix4(this.projectionMatrixInverse);\n    maxTarget.set(_v3$1.x, _v3$1.y).multiplyScalar(-distance / _v3$1.z);\n  }\n\n  /**\n   * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n   * Copies the result into the target Vector2, where x is width and y is height.\n   */\n  getViewSize(distance, target) {\n    this.getViewBounds(distance, _minTarget, _maxTarget);\n    return target.subVectors(_maxTarget, _minTarget);\n  }\n\n  /**\n   * Sets an offset in a larger frustum. This is useful for multi-window or\n   * multi-monitor/multi-machine setups.\n   *\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n   * the monitors are in grid like this\n   *\n   *   +---+---+---+\n   *   | A | B | C |\n   *   +---+---+---+\n   *   | D | E | F |\n   *   +---+---+---+\n   *\n   * then for each monitor you would call it like this\n   *\n   *   const w = 1920;\n   *   const h = 1080;\n   *   const fullWidth = w * 3;\n   *   const fullHeight = h * 2;\n   *\n   *   --A--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n   *   --B--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n   *   --C--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n   *   --D--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n   *   --E--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n   *   --F--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n   *\n   *   Note there is no reason monitors have to be the same size or in a grid.\n   */\n  setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  }\n  clearViewOffset() {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n    this.updateProjectionMatrix();\n  }\n  updateProjectionMatrix() {\n    const near = this.near;\n    let top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n    let height = 2 * top;\n    let width = this.aspect * height;\n    let left = -0.5 * width;\n    const view = this.view;\n    if (this.view !== null && this.view.enabled) {\n      const fullWidth = view.fullWidth,\n        fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n    const skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far, this.coordinateSystem);\n    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n}\nconst fov = -90; // negative fov is not an error\nconst aspect = 1;\nclass CubeCamera extends Object3D {\n  constructor(near, far, renderTarget) {\n    super();\n    this.type = 'CubeCamera';\n    this.renderTarget = renderTarget;\n    this.coordinateSystem = null;\n    this.activeMipmapLevel = 0;\n    const cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.layers = this.layers;\n    this.add(cameraPX);\n    const cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.layers = this.layers;\n    this.add(cameraNX);\n    const cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.layers = this.layers;\n    this.add(cameraPY);\n    const cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.layers = this.layers;\n    this.add(cameraNY);\n    const cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.layers = this.layers;\n    this.add(cameraPZ);\n    const cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.layers = this.layers;\n    this.add(cameraNZ);\n  }\n  updateCoordinateSystem() {\n    const coordinateSystem = this.coordinateSystem;\n    const cameras = this.children.concat();\n    const [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = cameras;\n    for (const camera of cameras) this.remove(camera);\n    if (coordinateSystem === WebGLCoordinateSystem) {\n      cameraPX.up.set(0, 1, 0);\n      cameraPX.lookAt(1, 0, 0);\n      cameraNX.up.set(0, 1, 0);\n      cameraNX.lookAt(-1, 0, 0);\n      cameraPY.up.set(0, 0, -1);\n      cameraPY.lookAt(0, 1, 0);\n      cameraNY.up.set(0, 0, 1);\n      cameraNY.lookAt(0, -1, 0);\n      cameraPZ.up.set(0, 1, 0);\n      cameraPZ.lookAt(0, 0, 1);\n      cameraNZ.up.set(0, 1, 0);\n      cameraNZ.lookAt(0, 0, -1);\n    } else if (coordinateSystem === WebGPUCoordinateSystem) {\n      cameraPX.up.set(0, -1, 0);\n      cameraPX.lookAt(-1, 0, 0);\n      cameraNX.up.set(0, -1, 0);\n      cameraNX.lookAt(1, 0, 0);\n      cameraPY.up.set(0, 0, 1);\n      cameraPY.lookAt(0, 1, 0);\n      cameraNY.up.set(0, 0, -1);\n      cameraNY.lookAt(0, -1, 0);\n      cameraPZ.up.set(0, -1, 0);\n      cameraPZ.lookAt(0, 0, 1);\n      cameraNZ.up.set(0, -1, 0);\n      cameraNZ.lookAt(0, 0, -1);\n    } else {\n      throw new Error('THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem);\n    }\n    for (const camera of cameras) {\n      this.add(camera);\n      camera.updateMatrixWorld();\n    }\n  }\n  update(renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    const {\n      renderTarget,\n      activeMipmapLevel\n    } = this;\n    if (this.coordinateSystem !== renderer.coordinateSystem) {\n      this.coordinateSystem = renderer.coordinateSystem;\n      this.updateCoordinateSystem();\n    }\n    const [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n    const currentRenderTarget = renderer.getRenderTarget();\n    const currentActiveCubeFace = renderer.getActiveCubeFace();\n    const currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n    const currentXrEnabled = renderer.xr.enabled;\n    renderer.xr.enabled = false;\n    const generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderer.setRenderTarget(renderTarget, 0, activeMipmapLevel);\n    renderer.render(scene, cameraPX);\n    renderer.setRenderTarget(renderTarget, 1, activeMipmapLevel);\n    renderer.render(scene, cameraNX);\n    renderer.setRenderTarget(renderTarget, 2, activeMipmapLevel);\n    renderer.render(scene, cameraPY);\n    renderer.setRenderTarget(renderTarget, 3, activeMipmapLevel);\n    renderer.render(scene, cameraNY);\n    renderer.setRenderTarget(renderTarget, 4, activeMipmapLevel);\n    renderer.render(scene, cameraPZ);\n\n    // mipmaps are generated during the last call of render()\n    // at this point, all sides of the cube render target are defined\n\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderer.setRenderTarget(renderTarget, 5, activeMipmapLevel);\n    renderer.render(scene, cameraNZ);\n    renderer.setRenderTarget(currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel);\n    renderer.xr.enabled = currentXrEnabled;\n    renderTarget.texture.needsPMREMUpdate = true;\n  }\n}\nclass CubeTexture extends Texture {\n  constructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    super(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace);\n    this.isCubeTexture = true;\n    this.flipY = false;\n  }\n  get images() {\n    return this.image;\n  }\n  set images(value) {\n    this.image = value;\n  }\n}\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(size, size, options);\n    this.isWebGLCubeRenderTarget = true;\n    const image = {\n      width: size,\n      height: size,\n      depth: 1\n    };\n    const images = [image, image, image, image, image, image];\n    this.texture = new CubeTexture(images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace);\n\n    // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n    // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n    // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n    // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n    // and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n    // as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n    this.texture.isRenderTargetTexture = true;\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n  }\n  fromEquirectangularTexture(renderer, texture) {\n    this.texture.type = texture.type;\n    this.texture.colorSpace = texture.colorSpace;\n    this.texture.generateMipmaps = texture.generateMipmaps;\n    this.texture.minFilter = texture.minFilter;\n    this.texture.magFilter = texture.magFilter;\n    const shader = {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n      fragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n    };\n    const geometry = new BoxGeometry(5, 5, 5);\n    const material = new ShaderMaterial({\n      name: 'CubemapFromEquirect',\n      uniforms: cloneUniforms(shader.uniforms),\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      side: BackSide,\n      blending: NoBlending\n    });\n    material.uniforms.tEquirect.value = texture;\n    const mesh = new Mesh(geometry, material);\n    const currentMinFilter = texture.minFilter;\n\n    // Avoid blurred poles\n    if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n    const camera = new CubeCamera(1, 10, this);\n    camera.update(renderer, mesh);\n    texture.minFilter = currentMinFilter;\n    mesh.geometry.dispose();\n    mesh.material.dispose();\n    return this;\n  }\n  clear(renderer, color, depth, stencil) {\n    const currentRenderTarget = renderer.getRenderTarget();\n    for (let i = 0; i < 6; i++) {\n      renderer.setRenderTarget(this, i);\n      renderer.clear(color, depth, stencil);\n    }\n    renderer.setRenderTarget(currentRenderTarget);\n  }\n}\nclass FogExp2 {\n  constructor(color) {\n    let density = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.00025;\n    this.isFogExp2 = true;\n    this.name = '';\n    this.color = new Color(color);\n    this.density = density;\n  }\n  clone() {\n    return new FogExp2(this.color, this.density);\n  }\n  toJSON(/* meta */\n  ) {\n    return {\n      type: 'FogExp2',\n      name: this.name,\n      color: this.color.getHex(),\n      density: this.density\n    };\n  }\n}\nclass Fog {\n  constructor(color) {\n    let near = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let far = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n    this.isFog = true;\n    this.name = '';\n    this.color = new Color(color);\n    this.near = near;\n    this.far = far;\n  }\n  clone() {\n    return new Fog(this.color, this.near, this.far);\n  }\n  toJSON(/* meta */\n  ) {\n    return {\n      type: 'Fog',\n      name: this.name,\n      color: this.color.getHex(),\n      near: this.near,\n      far: this.far\n    };\n  }\n}\nclass Scene extends Object3D {\n  constructor() {\n    super();\n    this.isScene = true;\n    this.type = 'Scene';\n    this.background = null;\n    this.environment = null;\n    this.fog = null;\n    this.backgroundBlurriness = 0;\n    this.backgroundIntensity = 1;\n    this.backgroundRotation = new Euler();\n    this.environmentIntensity = 1;\n    this.environmentRotation = new Euler();\n    this.overrideMaterial = null;\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n        detail: this\n      }));\n    }\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.environment !== null) this.environment = source.environment.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n    this.backgroundBlurriness = source.backgroundBlurriness;\n    this.backgroundIntensity = source.backgroundIntensity;\n    this.backgroundRotation.copy(source.backgroundRotation);\n    this.environmentIntensity = source.environmentIntensity;\n    this.environmentRotation.copy(source.environmentRotation);\n    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    if (this.fog !== null) data.object.fog = this.fog.toJSON();\n    if (this.backgroundBlurriness > 0) data.object.backgroundBlurriness = this.backgroundBlurriness;\n    if (this.backgroundIntensity !== 1) data.object.backgroundIntensity = this.backgroundIntensity;\n    data.object.backgroundRotation = this.backgroundRotation.toArray();\n    if (this.environmentIntensity !== 1) data.object.environmentIntensity = this.environmentIntensity;\n    data.object.environmentRotation = this.environmentRotation.toArray();\n    return data;\n  }\n}\nclass InterleavedBuffer {\n  constructor(array, stride) {\n    this.isInterleavedBuffer = true;\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.usage = StaticDrawUsage;\n    this.updateRanges = [];\n    this.version = 0;\n    this.uuid = generateUUID();\n  }\n  onUploadCallback() {}\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  setUsage(value) {\n    this.usage = value;\n    return this;\n  }\n  addUpdateRange(start, count) {\n    this.updateRanges.push({\n      start,\n      count\n    });\n  }\n  clearUpdateRanges() {\n    this.updateRanges.length = 0;\n  }\n  copy(source) {\n    this.array = new source.array.constructor(source.array);\n    this.count = source.count;\n    this.stride = source.stride;\n    this.usage = source.usage;\n    return this;\n  }\n  copyAt(index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n    for (let i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n    return this;\n  }\n  set(value) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.array.set(value, offset);\n    return this;\n  }\n  clone(data) {\n    if (data.arrayBuffers === undefined) {\n      data.arrayBuffers = {};\n    }\n    if (this.array.buffer._uuid === undefined) {\n      this.array.buffer._uuid = generateUUID();\n    }\n    if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n      data.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n    }\n    const array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n    const ib = new this.constructor(array, this.stride);\n    ib.setUsage(this.usage);\n    return ib;\n  }\n  onUpload(callback) {\n    this.onUploadCallback = callback;\n    return this;\n  }\n  toJSON(data) {\n    if (data.arrayBuffers === undefined) {\n      data.arrayBuffers = {};\n    }\n\n    // generate UUID for array buffer if necessary\n\n    if (this.array.buffer._uuid === undefined) {\n      this.array.buffer._uuid = generateUUID();\n    }\n    if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n      data.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer));\n    }\n\n    //\n\n    return {\n      uuid: this.uuid,\n      buffer: this.array.buffer._uuid,\n      type: this.array.constructor.name,\n      stride: this.stride\n    };\n  }\n}\nconst _vector$7 = /*@__PURE__*/new Vector3();\nclass InterleavedBufferAttribute {\n  constructor(interleavedBuffer, itemSize, offset) {\n    let normalized = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    this.isInterleavedBufferAttribute = true;\n    this.name = '';\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized;\n  }\n  get count() {\n    return this.data.count;\n  }\n  get array() {\n    return this.data.array;\n  }\n  set needsUpdate(value) {\n    this.data.needsUpdate = value;\n  }\n  applyMatrix4(m) {\n    for (let i = 0, l = this.data.count; i < l; i++) {\n      _vector$7.fromBufferAttribute(this, i);\n      _vector$7.applyMatrix4(m);\n      this.setXYZ(i, _vector$7.x, _vector$7.y, _vector$7.z);\n    }\n    return this;\n  }\n  applyNormalMatrix(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$7.fromBufferAttribute(this, i);\n      _vector$7.applyNormalMatrix(m);\n      this.setXYZ(i, _vector$7.x, _vector$7.y, _vector$7.z);\n    }\n    return this;\n  }\n  transformDirection(m) {\n    for (let i = 0, l = this.count; i < l; i++) {\n      _vector$7.fromBufferAttribute(this, i);\n      _vector$7.transformDirection(m);\n      this.setXYZ(i, _vector$7.x, _vector$7.y, _vector$7.z);\n    }\n    return this;\n  }\n  getComponent(index, component) {\n    let value = this.array[index * this.data.stride + this.offset + component];\n    if (this.normalized) value = denormalize(value, this.array);\n    return value;\n  }\n  setComponent(index, component, value) {\n    if (this.normalized) value = normalize(value, this.array);\n    this.data.array[index * this.data.stride + this.offset + component] = value;\n    return this;\n  }\n  setX(index, x) {\n    if (this.normalized) x = normalize(x, this.array);\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  }\n  setY(index, y) {\n    if (this.normalized) y = normalize(y, this.array);\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  }\n  setZ(index, z) {\n    if (this.normalized) z = normalize(z, this.array);\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  }\n  setW(index, w) {\n    if (this.normalized) w = normalize(w, this.array);\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  }\n  getX(index) {\n    let x = this.data.array[index * this.data.stride + this.offset];\n    if (this.normalized) x = denormalize(x, this.array);\n    return x;\n  }\n  getY(index) {\n    let y = this.data.array[index * this.data.stride + this.offset + 1];\n    if (this.normalized) y = denormalize(y, this.array);\n    return y;\n  }\n  getZ(index) {\n    let z = this.data.array[index * this.data.stride + this.offset + 2];\n    if (this.normalized) z = denormalize(z, this.array);\n    return z;\n  }\n  getW(index) {\n    let w = this.data.array[index * this.data.stride + this.offset + 3];\n    if (this.normalized) w = denormalize(w, this.array);\n    return w;\n  }\n  setXY(index, x, y) {\n    index = index * this.data.stride + this.offset;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n    }\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  }\n  setXYZ(index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n    }\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  }\n  setXYZW(index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    if (this.normalized) {\n      x = normalize(x, this.array);\n      y = normalize(y, this.array);\n      z = normalize(z, this.array);\n      w = normalize(w, this.array);\n    }\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n  clone(data) {\n    if (data === undefined) {\n      console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.');\n      const array = [];\n      for (let i = 0; i < this.count; i++) {\n        const index = i * this.data.stride + this.offset;\n        for (let j = 0; j < this.itemSize; j++) {\n          array.push(this.data.array[index + j]);\n        }\n      }\n      return new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n    } else {\n      if (data.interleavedBuffers === undefined) {\n        data.interleavedBuffers = {};\n      }\n      if (data.interleavedBuffers[this.data.uuid] === undefined) {\n        data.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n      }\n      return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n    }\n  }\n  toJSON(data) {\n    if (data === undefined) {\n      console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.');\n      const array = [];\n      for (let i = 0; i < this.count; i++) {\n        const index = i * this.data.stride + this.offset;\n        for (let j = 0; j < this.itemSize; j++) {\n          array.push(this.data.array[index + j]);\n        }\n      }\n\n      // de-interleave data and save it as an ordinary buffer attribute for now\n\n      return {\n        itemSize: this.itemSize,\n        type: this.array.constructor.name,\n        array: array,\n        normalized: this.normalized\n      };\n    } else {\n      // save as true interleaved attribute\n\n      if (data.interleavedBuffers === undefined) {\n        data.interleavedBuffers = {};\n      }\n      if (data.interleavedBuffers[this.data.uuid] === undefined) {\n        data.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n      }\n      return {\n        isInterleavedBufferAttribute: true,\n        itemSize: this.itemSize,\n        data: this.data.uuid,\n        offset: this.offset,\n        normalized: this.normalized\n      };\n    }\n  }\n}\nclass SpriteMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isSpriteMaterial = true;\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.alphaMap = null;\n    this.rotation = 0;\n    this.sizeAttenuation = true;\n    this.transparent = true;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.rotation = source.rotation;\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.fog = source.fog;\n    return this;\n  }\n}\nlet _geometry;\nconst _intersectPoint = /*@__PURE__*/new Vector3();\nconst _worldScale = /*@__PURE__*/new Vector3();\nconst _mvPosition = /*@__PURE__*/new Vector3();\nconst _alignedPosition = /*@__PURE__*/new Vector2();\nconst _rotatedPosition = /*@__PURE__*/new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\nconst _vA = /*@__PURE__*/new Vector3();\nconst _vB = /*@__PURE__*/new Vector3();\nconst _vC = /*@__PURE__*/new Vector3();\nconst _uvA = /*@__PURE__*/new Vector2();\nconst _uvB = /*@__PURE__*/new Vector2();\nconst _uvC = /*@__PURE__*/new Vector2();\nclass Sprite extends Object3D {\n  constructor() {\n    let material = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new SpriteMaterial();\n    super();\n    this.isSprite = true;\n    this.type = 'Sprite';\n    if (_geometry === undefined) {\n      _geometry = new BufferGeometry();\n      const float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n      const interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n      _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n      _geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n      _geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n    }\n    this.geometry = _geometry;\n    this.material = material;\n    this.center = new Vector2(0.5, 0.5);\n  }\n  raycast(raycaster, intersects) {\n    if (raycaster.camera === null) {\n      console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n    }\n    _worldScale.setFromMatrixScale(this.matrixWorld);\n    _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n    this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n    _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n    if (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n      _worldScale.multiplyScalar(-_mvPosition.z);\n    }\n    const rotation = this.material.rotation;\n    let sin, cos;\n    if (rotation !== 0) {\n      cos = Math.cos(rotation);\n      sin = Math.sin(rotation);\n    }\n    const center = this.center;\n    transformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n    transformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n    transformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n    _uvA.set(0, 0);\n    _uvB.set(1, 0);\n    _uvC.set(1, 1);\n\n    // check first triangle\n    let intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n    if (intersect === null) {\n      // check second triangle\n      transformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      _uvB.set(0, 1);\n      intersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n      if (intersect === null) {\n        return;\n      }\n    }\n    const distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n    if (distance < raycaster.near || distance > raycaster.far) return;\n    intersects.push({\n      distance: distance,\n      point: _intersectPoint.clone(),\n      uv: Triangle.getInterpolation(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n      face: null,\n      object: this\n    });\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    if (source.center !== undefined) this.center.copy(source.center);\n    this.material = source.material;\n    return this;\n  }\n}\nfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n  // compute position in camera space\n  _alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale);\n\n  // to check if rotation is not zero\n  if (sin !== undefined) {\n    _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n    _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n  } else {\n    _rotatedPosition.copy(_alignedPosition);\n  }\n  vertexPosition.copy(mvPosition);\n  vertexPosition.x += _rotatedPosition.x;\n  vertexPosition.y += _rotatedPosition.y;\n\n  // transform to world space\n  vertexPosition.applyMatrix4(_viewWorldMatrix);\n}\nconst _v1$2 = /*@__PURE__*/new Vector3();\nconst _v2$1 = /*@__PURE__*/new Vector3();\nclass LOD extends Object3D {\n  constructor() {\n    super();\n    this._currentLevel = 0;\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      },\n      isLOD: {\n        value: true\n      }\n    });\n    this.autoUpdate = true;\n  }\n  copy(source) {\n    super.copy(source, false);\n    const levels = source.levels;\n    for (let i = 0, l = levels.length; i < l; i++) {\n      const level = levels[i];\n      this.addLevel(level.object.clone(), level.distance, level.hysteresis);\n    }\n    this.autoUpdate = source.autoUpdate;\n    return this;\n  }\n  addLevel(object) {\n    let distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let hysteresis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    distance = Math.abs(distance);\n    const levels = this.levels;\n    let l;\n    for (l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n    levels.splice(l, 0, {\n      distance: distance,\n      hysteresis: hysteresis,\n      object: object\n    });\n    this.add(object);\n    return this;\n  }\n  removeLevel(distance) {\n    const levels = this.levels;\n    for (let i = 0; i < levels.length; i++) {\n      if (levels[i].distance === distance) {\n        const removedElements = levels.splice(i, 1);\n        this.remove(removedElements[0].object);\n        return true;\n      }\n    }\n    return false;\n  }\n  getCurrentLevel() {\n    return this._currentLevel;\n  }\n  getObjectForDistance(distance) {\n    const levels = this.levels;\n    if (levels.length > 0) {\n      let i, l;\n      for (i = 1, l = levels.length; i < l; i++) {\n        let levelDistance = levels[i].distance;\n        if (levels[i].object.visible) {\n          levelDistance -= levelDistance * levels[i].hysteresis;\n        }\n        if (distance < levelDistance) {\n          break;\n        }\n      }\n      return levels[i - 1].object;\n    }\n    return null;\n  }\n  raycast(raycaster, intersects) {\n    const levels = this.levels;\n    if (levels.length > 0) {\n      _v1$2.setFromMatrixPosition(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(_v1$2);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    }\n  }\n  update(camera) {\n    const levels = this.levels;\n    if (levels.length > 1) {\n      _v1$2.setFromMatrixPosition(camera.matrixWorld);\n      _v2$1.setFromMatrixPosition(this.matrixWorld);\n      const distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n      levels[0].object.visible = true;\n      let i, l;\n      for (i = 1, l = levels.length; i < l; i++) {\n        let levelDistance = levels[i].distance;\n        if (levels[i].object.visible) {\n          levelDistance -= levelDistance * levels[i].hysteresis;\n        }\n        if (distance >= levelDistance) {\n          levels[i - 1].object.visible = false;\n          levels[i].object.visible = true;\n        } else {\n          break;\n        }\n      }\n      this._currentLevel = i - 1;\n      for (; i < l; i++) {\n        levels[i].object.visible = false;\n      }\n    }\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    if (this.autoUpdate === false) data.object.autoUpdate = false;\n    data.object.levels = [];\n    const levels = this.levels;\n    for (let i = 0, l = levels.length; i < l; i++) {\n      const level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance,\n        hysteresis: level.hysteresis\n      });\n    }\n    return data;\n  }\n}\nconst _basePosition = /*@__PURE__*/new Vector3();\nconst _skinIndex = /*@__PURE__*/new Vector4();\nconst _skinWeight = /*@__PURE__*/new Vector4();\nconst _vector3 = /*@__PURE__*/new Vector3();\nconst _matrix4 = /*@__PURE__*/new Matrix4();\nconst _vertex = /*@__PURE__*/new Vector3();\nconst _sphere$5 = /*@__PURE__*/new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\nconst _ray$2 = /*@__PURE__*/new Ray();\nclass SkinnedMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.isSkinnedMesh = true;\n    this.type = 'SkinnedMesh';\n    this.bindMode = AttachedBindMode;\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n    this.boundingBox = null;\n    this.boundingSphere = null;\n  }\n  computeBoundingBox() {\n    const geometry = this.geometry;\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    this.boundingBox.makeEmpty();\n    const positionAttribute = geometry.getAttribute('position');\n    for (let i = 0; i < positionAttribute.count; i++) {\n      this.getVertexPosition(i, _vertex);\n      this.boundingBox.expandByPoint(_vertex);\n    }\n  }\n  computeBoundingSphere() {\n    const geometry = this.geometry;\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    this.boundingSphere.makeEmpty();\n    const positionAttribute = geometry.getAttribute('position');\n    for (let i = 0; i < positionAttribute.count; i++) {\n      this.getVertexPosition(i, _vertex);\n      this.boundingSphere.expandByPoint(_vertex);\n    }\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.bindMode = source.bindMode;\n    this.bindMatrix.copy(source.bindMatrix);\n    this.bindMatrixInverse.copy(source.bindMatrixInverse);\n    this.skeleton = source.skeleton;\n    if (source.boundingBox !== null) this.boundingBox = source.boundingBox.clone();\n    if (source.boundingSphere !== null) this.boundingSphere = source.boundingSphere.clone();\n    return this;\n  }\n  raycast(raycaster, intersects) {\n    const material = this.material;\n    const matrixWorld = this.matrixWorld;\n    if (material === undefined) return;\n\n    // test with bounding sphere in world space\n\n    if (this.boundingSphere === null) this.computeBoundingSphere();\n    _sphere$5.copy(this.boundingSphere);\n    _sphere$5.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(_sphere$5) === false) return;\n\n    // convert ray to local space of skinned mesh\n\n    _inverseMatrix$2.copy(matrixWorld).invert();\n    _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);\n\n    // test with bounding box in local space\n\n    if (this.boundingBox !== null) {\n      if (_ray$2.intersectsBox(this.boundingBox) === false) return;\n    }\n\n    // test for intersections with geometry\n\n    this._computeIntersections(raycaster, intersects, _ray$2);\n  }\n  getVertexPosition(index, target) {\n    super.getVertexPosition(index, target);\n    this.applyBoneTransform(index, target);\n    return target;\n  }\n  bind(skeleton, bindMatrix) {\n    this.skeleton = skeleton;\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n      this.skeleton.calculateInverses();\n      bindMatrix = this.matrixWorld;\n    }\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.copy(bindMatrix).invert();\n  }\n  pose() {\n    this.skeleton.pose();\n  }\n  normalizeSkinWeights() {\n    const vector = new Vector4();\n    const skinWeight = this.geometry.attributes.skinWeight;\n    for (let i = 0, l = skinWeight.count; i < l; i++) {\n      vector.fromBufferAttribute(skinWeight, i);\n      const scale = 1.0 / vector.manhattanLength();\n      if (scale !== Infinity) {\n        vector.multiplyScalar(scale);\n      } else {\n        vector.set(1, 0, 0, 0); // do something reasonable\n      }\n      skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n    }\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (this.bindMode === AttachedBindMode) {\n      this.bindMatrixInverse.copy(this.matrixWorld).invert();\n    } else if (this.bindMode === DetachedBindMode) {\n      this.bindMatrixInverse.copy(this.bindMatrix).invert();\n    } else {\n      console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n    }\n  }\n  applyBoneTransform(index, vector) {\n    const skeleton = this.skeleton;\n    const geometry = this.geometry;\n    _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n    _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n    _basePosition.copy(vector).applyMatrix4(this.bindMatrix);\n    vector.set(0, 0, 0);\n    for (let i = 0; i < 4; i++) {\n      const weight = _skinWeight.getComponent(i);\n      if (weight !== 0) {\n        const boneIndex = _skinIndex.getComponent(i);\n        _matrix4.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n        vector.addScaledVector(_vector3.copy(_basePosition).applyMatrix4(_matrix4), weight);\n      }\n    }\n    return vector.applyMatrix4(this.bindMatrixInverse);\n  }\n}\nclass Bone extends Object3D {\n  constructor() {\n    super();\n    this.isBone = true;\n    this.type = 'Bone';\n  }\n}\nclass DataTexture extends Texture {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let format = arguments.length > 3 ? arguments[3] : undefined;\n    let type = arguments.length > 4 ? arguments[4] : undefined;\n    let mapping = arguments.length > 5 ? arguments[5] : undefined;\n    let wrapS = arguments.length > 6 ? arguments[6] : undefined;\n    let wrapT = arguments.length > 7 ? arguments[7] : undefined;\n    let magFilter = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : NearestFilter;\n    let minFilter = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : NearestFilter;\n    let anisotropy = arguments.length > 10 ? arguments[10] : undefined;\n    let colorSpace = arguments.length > 11 ? arguments[11] : undefined;\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace);\n    this.isDataTexture = true;\n    this.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n}\nconst _offsetMatrix = /*@__PURE__*/new Matrix4();\nconst _identityMatrix = /*@__PURE__*/new Matrix4();\nclass Skeleton {\n  constructor() {\n    let bones = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let boneInverses = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this.uuid = generateUUID();\n    this.bones = bones.slice(0);\n    this.boneInverses = boneInverses;\n    this.boneMatrices = null;\n    this.boneTexture = null;\n    this.init();\n  }\n  init() {\n    const bones = this.bones;\n    const boneInverses = this.boneInverses;\n    this.boneMatrices = new Float32Array(bones.length * 16);\n\n    // calculate inverse bone matrices if necessary\n\n    if (boneInverses.length === 0) {\n      this.calculateInverses();\n    } else {\n      // handle special case\n\n      if (bones.length !== boneInverses.length) {\n        console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n        this.boneInverses = [];\n        for (let i = 0, il = this.bones.length; i < il; i++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n  calculateInverses() {\n    this.boneInverses.length = 0;\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const inverse = new Matrix4();\n      if (this.bones[i]) {\n        inverse.copy(this.bones[i].matrixWorld).invert();\n      }\n      this.boneInverses.push(inverse);\n    }\n  }\n  pose() {\n    // recover the bind-time world matrices\n\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const bone = this.bones[i];\n      if (bone) {\n        bone.matrixWorld.copy(this.boneInverses[i]).invert();\n      }\n    }\n\n    // compute the local matrices, positions, rotations and scales\n\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const bone = this.bones[i];\n      if (bone) {\n        if (bone.parent && bone.parent.isBone) {\n          bone.matrix.copy(bone.parent.matrixWorld).invert();\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  }\n  update() {\n    const bones = this.bones;\n    const boneInverses = this.boneInverses;\n    const boneMatrices = this.boneMatrices;\n    const boneTexture = this.boneTexture;\n\n    // flatten bone matrices to array\n\n    for (let i = 0, il = bones.length; i < il; i++) {\n      // compute the offset between the current and the original transform\n\n      const matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n      _offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n      _offsetMatrix.toArray(boneMatrices, i * 16);\n    }\n    if (boneTexture !== null) {\n      boneTexture.needsUpdate = true;\n    }\n  }\n  clone() {\n    return new Skeleton(this.bones, this.boneInverses);\n  }\n  computeBoneTexture() {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n    //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n    //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n    //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n    let size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n    size = Math.ceil(size / 4) * 4;\n    size = Math.max(size, 4);\n    const boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n    boneMatrices.set(this.boneMatrices); // copy current values\n\n    const boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n    boneTexture.needsUpdate = true;\n    this.boneMatrices = boneMatrices;\n    this.boneTexture = boneTexture;\n    return this;\n  }\n  getBoneByName(name) {\n    for (let i = 0, il = this.bones.length; i < il; i++) {\n      const bone = this.bones[i];\n      if (bone.name === name) {\n        return bone;\n      }\n    }\n    return undefined;\n  }\n  dispose() {\n    if (this.boneTexture !== null) {\n      this.boneTexture.dispose();\n      this.boneTexture = null;\n    }\n  }\n  fromJSON(json, bones) {\n    this.uuid = json.uuid;\n    for (let i = 0, l = json.bones.length; i < l; i++) {\n      const uuid = json.bones[i];\n      let bone = bones[uuid];\n      if (bone === undefined) {\n        console.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n        bone = new Bone();\n      }\n      this.bones.push(bone);\n      this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n    }\n    this.init();\n    return this;\n  }\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.6,\n        type: 'Skeleton',\n        generator: 'Skeleton.toJSON'\n      },\n      bones: [],\n      boneInverses: []\n    };\n    data.uuid = this.uuid;\n    const bones = this.bones;\n    const boneInverses = this.boneInverses;\n    for (let i = 0, l = bones.length; i < l; i++) {\n      const bone = bones[i];\n      data.bones.push(bone.uuid);\n      const boneInverse = boneInverses[i];\n      data.boneInverses.push(boneInverse.toArray());\n    }\n    return data;\n  }\n}\nclass InstancedBufferAttribute extends BufferAttribute {\n  constructor(array, itemSize, normalized) {\n    let meshPerAttribute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    super(array, itemSize, normalized);\n    this.isInstancedBufferAttribute = true;\n    this.meshPerAttribute = meshPerAttribute;\n  }\n  copy(source) {\n    super.copy(source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.meshPerAttribute = this.meshPerAttribute;\n    data.isInstancedBufferAttribute = true;\n    return data;\n  }\n}\nconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\nconst _instanceIntersects = [];\nconst _box3 = /*@__PURE__*/new Box3();\nconst _identity = /*@__PURE__*/new Matrix4();\nconst _mesh$1 = /*@__PURE__*/new Mesh();\nconst _sphere$4 = /*@__PURE__*/new Sphere();\nclass InstancedMesh extends Mesh {\n  constructor(geometry, material, count) {\n    super(geometry, material);\n    this.isInstancedMesh = true;\n    this.instanceMatrix = new InstancedBufferAttribute(new Float32Array(count * 16), 16);\n    this.instanceColor = null;\n    this.morphTexture = null;\n    this.count = count;\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    for (let i = 0; i < count; i++) {\n      this.setMatrixAt(i, _identity);\n    }\n  }\n  computeBoundingBox() {\n    const geometry = this.geometry;\n    const count = this.count;\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    if (geometry.boundingBox === null) {\n      geometry.computeBoundingBox();\n    }\n    this.boundingBox.makeEmpty();\n    for (let i = 0; i < count; i++) {\n      this.getMatrixAt(i, _instanceLocalMatrix);\n      _box3.copy(geometry.boundingBox).applyMatrix4(_instanceLocalMatrix);\n      this.boundingBox.union(_box3);\n    }\n  }\n  computeBoundingSphere() {\n    const geometry = this.geometry;\n    const count = this.count;\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    if (geometry.boundingSphere === null) {\n      geometry.computeBoundingSphere();\n    }\n    this.boundingSphere.makeEmpty();\n    for (let i = 0; i < count; i++) {\n      this.getMatrixAt(i, _instanceLocalMatrix);\n      _sphere$4.copy(geometry.boundingSphere).applyMatrix4(_instanceLocalMatrix);\n      this.boundingSphere.union(_sphere$4);\n    }\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.instanceMatrix.copy(source.instanceMatrix);\n    if (source.morphTexture !== null) this.morphTexture = source.morphTexture.clone();\n    if (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n    this.count = source.count;\n    if (source.boundingBox !== null) this.boundingBox = source.boundingBox.clone();\n    if (source.boundingSphere !== null) this.boundingSphere = source.boundingSphere.clone();\n    return this;\n  }\n  getColorAt(index, color) {\n    color.fromArray(this.instanceColor.array, index * 3);\n  }\n  getMatrixAt(index, matrix) {\n    matrix.fromArray(this.instanceMatrix.array, index * 16);\n  }\n  getMorphAt(index, object) {\n    const objectInfluences = object.morphTargetInfluences;\n    const array = this.morphTexture.source.data.data;\n    const len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n    const dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n    for (let i = 0; i < objectInfluences.length; i++) {\n      objectInfluences[i] = array[dataIndex + i];\n    }\n  }\n  raycast(raycaster, intersects) {\n    const matrixWorld = this.matrixWorld;\n    const raycastTimes = this.count;\n    _mesh$1.geometry = this.geometry;\n    _mesh$1.material = this.material;\n    if (_mesh$1.material === undefined) return;\n\n    // test with bounding sphere first\n\n    if (this.boundingSphere === null) this.computeBoundingSphere();\n    _sphere$4.copy(this.boundingSphere);\n    _sphere$4.applyMatrix4(matrixWorld);\n    if (raycaster.ray.intersectsSphere(_sphere$4) === false) return;\n\n    // now test each instance\n\n    for (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n      // calculate the world matrix for each instance\n\n      this.getMatrixAt(instanceId, _instanceLocalMatrix);\n      _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n\n      // the mesh represents this single instance\n\n      _mesh$1.matrixWorld = _instanceWorldMatrix;\n      _mesh$1.raycast(raycaster, _instanceIntersects);\n\n      // process the result of raycast\n\n      for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n        const intersect = _instanceIntersects[i];\n        intersect.instanceId = instanceId;\n        intersect.object = this;\n        intersects.push(intersect);\n      }\n      _instanceIntersects.length = 0;\n    }\n  }\n  setColorAt(index, color) {\n    if (this.instanceColor === null) {\n      this.instanceColor = new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count * 3).fill(1), 3);\n    }\n    color.toArray(this.instanceColor.array, index * 3);\n  }\n  setMatrixAt(index, matrix) {\n    matrix.toArray(this.instanceMatrix.array, index * 16);\n  }\n  setMorphAt(index, object) {\n    const objectInfluences = object.morphTargetInfluences;\n    const len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n    if (this.morphTexture === null) {\n      this.morphTexture = new DataTexture(new Float32Array(len * this.count), len, this.count, RedFormat, FloatType);\n    }\n    const array = this.morphTexture.source.data.data;\n    let morphInfluencesSum = 0;\n    for (let i = 0; i < objectInfluences.length; i++) {\n      morphInfluencesSum += objectInfluences[i];\n    }\n    const morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n    const dataIndex = len * index;\n    array[dataIndex] = morphBaseInfluence;\n    array.set(objectInfluences, dataIndex + 1);\n  }\n  updateMorphTargets() {}\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n    if (this.morphTexture !== null) {\n      this.morphTexture.dispose();\n      this.morphTexture = null;\n    }\n    return this;\n  }\n}\nconst _vector1 = /*@__PURE__*/new Vector3();\nconst _vector2 = /*@__PURE__*/new Vector3();\nconst _normalMatrix = /*@__PURE__*/new Matrix3();\nclass Plane {\n  constructor() {\n    let normal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(1, 0, 0);\n    let constant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.isPlane = true;\n\n    // normal is assumed to be normalized\n\n    this.normal = normal;\n    this.constant = constant;\n  }\n  set(normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  }\n  setComponents(x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  }\n  setFromNormalAndCoplanarPoint(normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal);\n    return this;\n  }\n  setFromCoplanarPoints(a, b, c) {\n    const normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize();\n\n    // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n    this.setFromNormalAndCoplanarPoint(normal, a);\n    return this;\n  }\n  copy(plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  }\n  normalize() {\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    const inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  }\n  negate() {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  }\n  distanceToPoint(point) {\n    return this.normal.dot(point) + this.constant;\n  }\n  distanceToSphere(sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  }\n  projectPoint(point, target) {\n    return target.copy(point).addScaledVector(this.normal, -this.distanceToPoint(point));\n  }\n  intersectLine(line, target) {\n    const direction = line.delta(_vector1);\n    const denominator = this.normal.dot(direction);\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (this.distanceToPoint(line.start) === 0) {\n        return target.copy(line.start);\n      }\n\n      // Unsure if this is the correct method to handle this case.\n      return null;\n    }\n    const t = -(line.start.dot(this.normal) + this.constant) / denominator;\n    if (t < 0 || t > 1) {\n      return null;\n    }\n    return target.copy(line.start).addScaledVector(direction, t);\n  }\n  intersectsLine(line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  }\n  intersectsBox(box) {\n    return box.intersectsPlane(this);\n  }\n  intersectsSphere(sphere) {\n    return sphere.intersectsPlane(this);\n  }\n  coplanarPoint(target) {\n    return target.copy(this.normal).multiplyScalar(-this.constant);\n  }\n  applyMatrix4(matrix, optionalNormalMatrix) {\n    const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n    const referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n    const normal = this.normal.applyMatrix3(normalMatrix).normalize();\n    this.constant = -referencePoint.dot(normal);\n    return this;\n  }\n  translate(offset) {\n    this.constant -= offset.dot(this.normal);\n    return this;\n  }\n  equals(plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nconst _sphere$3 = /*@__PURE__*/new Sphere();\nconst _vector$6 = /*@__PURE__*/new Vector3();\nclass Frustum {\n  constructor() {\n    let p0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Plane();\n    let p1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Plane();\n    let p2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Plane();\n    let p3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Plane();\n    let p4 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new Plane();\n    let p5 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Plane();\n    this.planes = [p0, p1, p2, p3, p4, p5];\n  }\n  set(p0, p1, p2, p3, p4, p5) {\n    const planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  }\n  copy(frustum) {\n    const planes = this.planes;\n    for (let i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n    return this;\n  }\n  setFromProjectionMatrix(m) {\n    let coordinateSystem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebGLCoordinateSystem;\n    const planes = this.planes;\n    const me = m.elements;\n    const me0 = me[0],\n      me1 = me[1],\n      me2 = me[2],\n      me3 = me[3];\n    const me4 = me[4],\n      me5 = me[5],\n      me6 = me[6],\n      me7 = me[7];\n    const me8 = me[8],\n      me9 = me[9],\n      me10 = me[10],\n      me11 = me[11];\n    const me12 = me[12],\n      me13 = me[13],\n      me14 = me[14],\n      me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    if (coordinateSystem === WebGLCoordinateSystem) {\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    } else if (coordinateSystem === WebGPUCoordinateSystem) {\n      planes[5].setComponents(me2, me6, me10, me14).normalize();\n    } else {\n      throw new Error('THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem);\n    }\n    return this;\n  }\n  intersectsObject(object) {\n    if (object.boundingSphere !== undefined) {\n      if (object.boundingSphere === null) object.computeBoundingSphere();\n      _sphere$3.copy(object.boundingSphere).applyMatrix4(object.matrixWorld);\n    } else {\n      const geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      _sphere$3.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n    }\n    return this.intersectsSphere(_sphere$3);\n  }\n  intersectsSprite(sprite) {\n    _sphere$3.center.set(0, 0, 0);\n    _sphere$3.radius = 0.7071067811865476;\n    _sphere$3.applyMatrix4(sprite.matrixWorld);\n    return this.intersectsSphere(_sphere$3);\n  }\n  intersectsSphere(sphere) {\n    const planes = this.planes;\n    const center = sphere.center;\n    const negRadius = -sphere.radius;\n    for (let i = 0; i < 6; i++) {\n      const distance = planes[i].distanceToPoint(center);\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n    return true;\n  }\n  intersectsBox(box) {\n    const planes = this.planes;\n    for (let i = 0; i < 6; i++) {\n      const plane = planes[i];\n\n      // corner at max distance\n\n      _vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n      _vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n      _vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n      if (plane.distanceToPoint(_vector$6) < 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  containsPoint(point) {\n    const planes = this.planes;\n    for (let i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nfunction ascIdSort(a, b) {\n  return a - b;\n}\nfunction sortOpaque(a, b) {\n  return a.z - b.z;\n}\nfunction sortTransparent(a, b) {\n  return b.z - a.z;\n}\nclass MultiDrawRenderList {\n  constructor() {\n    this.index = 0;\n    this.pool = [];\n    this.list = [];\n  }\n  push(start, count, z, index) {\n    const pool = this.pool;\n    const list = this.list;\n    if (this.index >= pool.length) {\n      pool.push({\n        start: -1,\n        count: -1,\n        z: -1,\n        index: -1\n      });\n    }\n    const item = pool[this.index];\n    list.push(item);\n    this.index++;\n    item.start = start;\n    item.count = count;\n    item.z = z;\n    item.index = index;\n  }\n  reset() {\n    this.list.length = 0;\n    this.index = 0;\n  }\n}\nconst _matrix$1 = /*@__PURE__*/new Matrix4();\nconst _whiteColor = /*@__PURE__*/new Color(1, 1, 1);\nconst _frustum = /*@__PURE__*/new Frustum();\nconst _box$1 = /*@__PURE__*/new Box3();\nconst _sphere$2 = /*@__PURE__*/new Sphere();\nconst _vector$5 = /*@__PURE__*/new Vector3();\nconst _forward = /*@__PURE__*/new Vector3();\nconst _temp = /*@__PURE__*/new Vector3();\nconst _renderList = /*@__PURE__*/new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData(src, target) {\n  let targetOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const itemSize = target.itemSize;\n  if (src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor) {\n    // use the component getters and setters if the array data cannot\n    // be copied directly\n    const vertexCount = src.count;\n    for (let i = 0; i < vertexCount; i++) {\n      for (let c = 0; c < itemSize; c++) {\n        target.setComponent(i + targetOffset, c, src.getComponent(i, c));\n      }\n    }\n  } else {\n    // faster copy approach using typed array set function\n    target.array.set(src.array, targetOffset * itemSize);\n  }\n  target.needsUpdate = true;\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents(src, target) {\n  if (src.constructor !== target.constructor) {\n    // if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n    const len = Math.min(src.length, target.length);\n    for (let i = 0; i < len; i++) {\n      target[i] = src[i];\n    }\n  } else {\n    // if the arrays use the same data layout we can use a fast block copy\n    const len = Math.min(src.length, target.length);\n    target.set(new src.constructor(src.buffer, 0, len));\n  }\n}\nclass BatchedMesh extends Mesh {\n  get maxInstanceCount() {\n    return this._maxInstanceCount;\n  }\n  get instanceCount() {\n    return this._instanceInfo.length - this._availableInstanceIds.length;\n  }\n  get unusedVertexCount() {\n    return this._maxVertexCount - this._nextVertexStart;\n  }\n  get unusedIndexCount() {\n    return this._maxIndexCount - this._nextIndexStart;\n  }\n  constructor(maxInstanceCount, maxVertexCount) {\n    let maxIndexCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : maxVertexCount * 2;\n    let material = arguments.length > 3 ? arguments[3] : undefined;\n    super(new BufferGeometry(), material);\n    this.isBatchedMesh = true;\n    this.perObjectFrustumCulled = true;\n    this.sortObjects = true;\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.customSort = null;\n\n    // stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n    this._instanceInfo = [];\n    this._geometryInfo = [];\n\n    // instance, geometry ids that have been set as inactive, and are available to be overwritten\n    this._availableInstanceIds = [];\n    this._availableGeometryIds = [];\n\n    // used to track where the next point is that geometry should be inserted\n    this._nextIndexStart = 0;\n    this._nextVertexStart = 0;\n    this._geometryCount = 0;\n\n    // flags\n    this._visibilityChanged = true;\n    this._geometryInitialized = false;\n\n    // cached user options\n    this._maxInstanceCount = maxInstanceCount;\n    this._maxVertexCount = maxVertexCount;\n    this._maxIndexCount = maxIndexCount;\n\n    // buffers for multi draw\n    this._multiDrawCounts = new Int32Array(maxInstanceCount);\n    this._multiDrawStarts = new Int32Array(maxInstanceCount);\n    this._multiDrawCount = 0;\n    this._multiDrawInstances = null;\n\n    // Local matrix per geometry by using data texture\n    this._matricesTexture = null;\n    this._indirectTexture = null;\n    this._colorsTexture = null;\n    this._initMatricesTexture();\n    this._initIndirectTexture();\n  }\n  _initMatricesTexture() {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n    //       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n    //       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n    //       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n    let size = Math.sqrt(this._maxInstanceCount * 4); // 4 pixels needed for 1 matrix\n    size = Math.ceil(size / 4) * 4;\n    size = Math.max(size, 4);\n    const matricesArray = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n    const matricesTexture = new DataTexture(matricesArray, size, size, RGBAFormat, FloatType);\n    this._matricesTexture = matricesTexture;\n  }\n  _initIndirectTexture() {\n    let size = Math.sqrt(this._maxInstanceCount);\n    size = Math.ceil(size);\n    const indirectArray = new Uint32Array(size * size);\n    const indirectTexture = new DataTexture(indirectArray, size, size, RedIntegerFormat, UnsignedIntType);\n    this._indirectTexture = indirectTexture;\n  }\n  _initColorsTexture() {\n    let size = Math.sqrt(this._maxInstanceCount);\n    size = Math.ceil(size);\n\n    // 4 floats per RGBA pixel initialized to white\n    const colorsArray = new Float32Array(size * size * 4).fill(1);\n    const colorsTexture = new DataTexture(colorsArray, size, size, RGBAFormat, FloatType);\n    colorsTexture.colorSpace = ColorManagement.workingColorSpace;\n    this._colorsTexture = colorsTexture;\n  }\n  _initializeGeometry(reference) {\n    const geometry = this.geometry;\n    const maxVertexCount = this._maxVertexCount;\n    const maxIndexCount = this._maxIndexCount;\n    if (this._geometryInitialized === false) {\n      for (const attributeName in reference.attributes) {\n        const srcAttribute = reference.getAttribute(attributeName);\n        const {\n          array,\n          itemSize,\n          normalized\n        } = srcAttribute;\n        const dstArray = new array.constructor(maxVertexCount * itemSize);\n        const dstAttribute = new BufferAttribute(dstArray, itemSize, normalized);\n        geometry.setAttribute(attributeName, dstAttribute);\n      }\n      if (reference.getIndex() !== null) {\n        // Reserve last u16 index for primitive restart.\n        const indexArray = maxVertexCount > 65535 ? new Uint32Array(maxIndexCount) : new Uint16Array(maxIndexCount);\n        geometry.setIndex(new BufferAttribute(indexArray, 1));\n      }\n      this._geometryInitialized = true;\n    }\n  }\n\n  // Make sure the geometry is compatible with the existing combined geometry attributes\n  _validateGeometry(geometry) {\n    // check to ensure the geometries are using consistent attributes and indices\n    const batchGeometry = this.geometry;\n    if (Boolean(geometry.getIndex()) !== Boolean(batchGeometry.getIndex())) {\n      throw new Error('THREE.BatchedMesh: All geometries must consistently have \"index\".');\n    }\n    for (const attributeName in batchGeometry.attributes) {\n      if (!geometry.hasAttribute(attributeName)) {\n        throw new Error(`THREE.BatchedMesh: Added geometry missing \"${attributeName}\". All geometries must have consistent attributes.`);\n      }\n      const srcAttribute = geometry.getAttribute(attributeName);\n      const dstAttribute = batchGeometry.getAttribute(attributeName);\n      if (srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized) {\n        throw new Error('THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.');\n      }\n    }\n  }\n  validateInstanceId(instanceId) {\n    const instanceInfo = this._instanceInfo;\n    if (instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[instanceId].active === false) {\n      throw new Error(`THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.`);\n    }\n  }\n  validateGeometryId(geometryId) {\n    const geometryInfoList = this._geometryInfo;\n    if (geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[geometryId].active === false) {\n      throw new Error(`THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.`);\n    }\n  }\n  setCustomSort(func) {\n    this.customSort = func;\n    return this;\n  }\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    const boundingBox = this.boundingBox;\n    const instanceInfo = this._instanceInfo;\n    boundingBox.makeEmpty();\n    for (let i = 0, l = instanceInfo.length; i < l; i++) {\n      if (instanceInfo[i].active === false) continue;\n      const geometryId = instanceInfo[i].geometryIndex;\n      this.getMatrixAt(i, _matrix$1);\n      this.getBoundingBoxAt(geometryId, _box$1).applyMatrix4(_matrix$1);\n      boundingBox.union(_box$1);\n    }\n  }\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    const boundingSphere = this.boundingSphere;\n    const instanceInfo = this._instanceInfo;\n    boundingSphere.makeEmpty();\n    for (let i = 0, l = instanceInfo.length; i < l; i++) {\n      if (instanceInfo[i].active === false) continue;\n      const geometryId = instanceInfo[i].geometryIndex;\n      this.getMatrixAt(i, _matrix$1);\n      this.getBoundingSphereAt(geometryId, _sphere$2).applyMatrix4(_matrix$1);\n      boundingSphere.union(_sphere$2);\n    }\n  }\n  addInstance(geometryId) {\n    const atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n    // ensure we're not over geometry\n    if (atCapacity && this._availableInstanceIds.length === 0) {\n      throw new Error('THREE.BatchedMesh: Maximum item count reached.');\n    }\n    const instanceInfo = {\n      visible: true,\n      active: true,\n      geometryIndex: geometryId\n    };\n    let drawId = null;\n\n    // Prioritize using previously freed instance ids\n    if (this._availableInstanceIds.length > 0) {\n      this._availableInstanceIds.sort(ascIdSort);\n      drawId = this._availableInstanceIds.shift();\n      this._instanceInfo[drawId] = instanceInfo;\n    } else {\n      drawId = this._instanceInfo.length;\n      this._instanceInfo.push(instanceInfo);\n    }\n    const matricesTexture = this._matricesTexture;\n    _matrix$1.identity().toArray(matricesTexture.image.data, drawId * 16);\n    matricesTexture.needsUpdate = true;\n    const colorsTexture = this._colorsTexture;\n    if (colorsTexture) {\n      _whiteColor.toArray(colorsTexture.image.data, drawId * 4);\n      colorsTexture.needsUpdate = true;\n    }\n    this._visibilityChanged = true;\n    return drawId;\n  }\n  addGeometry(geometry) {\n    let reservedVertexCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    let reservedIndexCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    this._initializeGeometry(geometry);\n    this._validateGeometry(geometry);\n    const geometryInfo = {\n      // geometry information\n      vertexStart: -1,\n      vertexCount: -1,\n      reservedVertexCount: -1,\n      indexStart: -1,\n      indexCount: -1,\n      reservedIndexCount: -1,\n      // draw range information\n      start: -1,\n      count: -1,\n      // state\n      boundingBox: null,\n      boundingSphere: null,\n      active: true\n    };\n    const geometryInfoList = this._geometryInfo;\n    geometryInfo.vertexStart = this._nextVertexStart;\n    geometryInfo.reservedVertexCount = reservedVertexCount === -1 ? geometry.getAttribute('position').count : reservedVertexCount;\n    const index = geometry.getIndex();\n    const hasIndex = index !== null;\n    if (hasIndex) {\n      geometryInfo.indexStart = this._nextIndexStart;\n      geometryInfo.reservedIndexCount = reservedIndexCount === -1 ? index.count : reservedIndexCount;\n    }\n    if (geometryInfo.indexStart !== -1 && geometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount || geometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount) {\n      throw new Error('THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.');\n    }\n\n    // update id\n    let geometryId;\n    if (this._availableGeometryIds.length > 0) {\n      this._availableGeometryIds.sort(ascIdSort);\n      geometryId = this._availableGeometryIds.shift();\n      geometryInfoList[geometryId] = geometryInfo;\n    } else {\n      geometryId = this._geometryCount;\n      this._geometryCount++;\n      geometryInfoList.push(geometryInfo);\n    }\n\n    // update the geometry\n    this.setGeometryAt(geometryId, geometry);\n\n    // increment the next geometry position\n    this._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n    this._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n    return geometryId;\n  }\n  setGeometryAt(geometryId, geometry) {\n    if (geometryId >= this._geometryCount) {\n      throw new Error('THREE.BatchedMesh: Maximum geometry count reached.');\n    }\n    this._validateGeometry(geometry);\n    const batchGeometry = this.geometry;\n    const hasIndex = batchGeometry.getIndex() !== null;\n    const dstIndex = batchGeometry.getIndex();\n    const srcIndex = geometry.getIndex();\n    const geometryInfo = this._geometryInfo[geometryId];\n    if (hasIndex && srcIndex.count > geometryInfo.reservedIndexCount || geometry.attributes.position.count > geometryInfo.reservedVertexCount) {\n      throw new Error('THREE.BatchedMesh: Reserved space not large enough for provided geometry.');\n    }\n\n    // copy geometry buffer data over\n    const vertexStart = geometryInfo.vertexStart;\n    const reservedVertexCount = geometryInfo.reservedVertexCount;\n    geometryInfo.vertexCount = geometry.getAttribute('position').count;\n    for (const attributeName in batchGeometry.attributes) {\n      // copy attribute data\n      const srcAttribute = geometry.getAttribute(attributeName);\n      const dstAttribute = batchGeometry.getAttribute(attributeName);\n      copyAttributeData(srcAttribute, dstAttribute, vertexStart);\n\n      // fill the rest in with zeroes\n      const itemSize = srcAttribute.itemSize;\n      for (let i = srcAttribute.count, l = reservedVertexCount; i < l; i++) {\n        const index = vertexStart + i;\n        for (let c = 0; c < itemSize; c++) {\n          dstAttribute.setComponent(index, c, 0);\n        }\n      }\n      dstAttribute.needsUpdate = true;\n      dstAttribute.addUpdateRange(vertexStart * itemSize, reservedVertexCount * itemSize);\n    }\n\n    // copy index\n    if (hasIndex) {\n      const indexStart = geometryInfo.indexStart;\n      const reservedIndexCount = geometryInfo.reservedIndexCount;\n      geometryInfo.indexCount = geometry.getIndex().count;\n\n      // copy index data over\n      for (let i = 0; i < srcIndex.count; i++) {\n        dstIndex.setX(indexStart + i, vertexStart + srcIndex.getX(i));\n      }\n\n      // fill the rest in with zeroes\n      for (let i = srcIndex.count, l = reservedIndexCount; i < l; i++) {\n        dstIndex.setX(indexStart + i, vertexStart);\n      }\n      dstIndex.needsUpdate = true;\n      dstIndex.addUpdateRange(indexStart, geometryInfo.reservedIndexCount);\n    }\n\n    // update the draw range\n    geometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n    geometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n    // store the bounding boxes\n    geometryInfo.boundingBox = null;\n    if (geometry.boundingBox !== null) {\n      geometryInfo.boundingBox = geometry.boundingBox.clone();\n    }\n    geometryInfo.boundingSphere = null;\n    if (geometry.boundingSphere !== null) {\n      geometryInfo.boundingSphere = geometry.boundingSphere.clone();\n    }\n    this._visibilityChanged = true;\n    return geometryId;\n  }\n  deleteGeometry(geometryId) {\n    const geometryInfoList = this._geometryInfo;\n    if (geometryId >= geometryInfoList.length || geometryInfoList[geometryId].active === false) {\n      return this;\n    }\n\n    // delete any instances associated with this geometry\n    const instanceInfo = this._instanceInfo;\n    for (let i = 0, l = instanceInfo.length; i < l; i++) {\n      if (instanceInfo[i].geometryIndex === geometryId) {\n        this.deleteInstance(i);\n      }\n    }\n    geometryInfoList[geometryId].active = false;\n    this._availableGeometryIds.push(geometryId);\n    this._visibilityChanged = true;\n    return this;\n  }\n  deleteInstance(instanceId) {\n    this.validateInstanceId(instanceId);\n    this._instanceInfo[instanceId].active = false;\n    this._availableInstanceIds.push(instanceId);\n    this._visibilityChanged = true;\n    return this;\n  }\n  optimize() {\n    // track the next indices to copy data to\n    let nextVertexStart = 0;\n    let nextIndexStart = 0;\n\n    // Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n    // in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n    const geometryInfoList = this._geometryInfo;\n    const indices = geometryInfoList.map((e, i) => i).sort((a, b) => {\n      return geometryInfoList[a].vertexStart - geometryInfoList[b].vertexStart;\n    });\n    const geometry = this.geometry;\n    for (let i = 0, l = geometryInfoList.length; i < l; i++) {\n      // if a geometry range is inactive then don't copy anything\n      const index = indices[i];\n      const geometryInfo = geometryInfoList[index];\n      if (geometryInfo.active === false) {\n        continue;\n      }\n\n      // if a geometry contains an index buffer then shift it, as well\n      if (geometry.index !== null) {\n        if (geometryInfo.indexStart !== nextIndexStart) {\n          const {\n            indexStart,\n            vertexStart,\n            reservedIndexCount\n          } = geometryInfo;\n          const index = geometry.index;\n          const array = index.array;\n\n          // shift the index pointers based on how the vertex data will shift\n          // adjusting the index must happen first so the original vertex start value is available\n          const elementDelta = nextVertexStart - vertexStart;\n          for (let j = indexStart; j < indexStart + reservedIndexCount; j++) {\n            array[j] = array[j] + elementDelta;\n          }\n          index.array.copyWithin(nextIndexStart, indexStart, indexStart + reservedIndexCount);\n          index.addUpdateRange(nextIndexStart, reservedIndexCount);\n          geometryInfo.indexStart = nextIndexStart;\n        }\n        nextIndexStart += geometryInfo.reservedIndexCount;\n      }\n\n      // if a geometry needs to be moved then copy attribute data to overwrite unused space\n      if (geometryInfo.vertexStart !== nextVertexStart) {\n        const {\n          vertexStart,\n          reservedVertexCount\n        } = geometryInfo;\n        const attributes = geometry.attributes;\n        for (const key in attributes) {\n          const attribute = attributes[key];\n          const {\n            array,\n            itemSize\n          } = attribute;\n          array.copyWithin(nextVertexStart * itemSize, vertexStart * itemSize, (vertexStart + reservedVertexCount) * itemSize);\n          attribute.addUpdateRange(nextVertexStart * itemSize, reservedVertexCount * itemSize);\n        }\n        geometryInfo.vertexStart = nextVertexStart;\n      }\n      nextVertexStart += geometryInfo.reservedVertexCount;\n      geometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n      // step the next geometry points to the shifted position\n      this._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n      this._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n    }\n    return this;\n  }\n\n  // get bounding box and compute it if it doesn't exist\n  getBoundingBoxAt(geometryId, target) {\n    if (geometryId >= this._geometryCount) {\n      return null;\n    }\n\n    // compute bounding box\n    const geometry = this.geometry;\n    const geometryInfo = this._geometryInfo[geometryId];\n    if (geometryInfo.boundingBox === null) {\n      const box = new Box3();\n      const index = geometry.index;\n      const position = geometry.attributes.position;\n      for (let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i++) {\n        let iv = i;\n        if (index) {\n          iv = index.getX(iv);\n        }\n        box.expandByPoint(_vector$5.fromBufferAttribute(position, iv));\n      }\n      geometryInfo.boundingBox = box;\n    }\n    target.copy(geometryInfo.boundingBox);\n    return target;\n  }\n\n  // get bounding sphere and compute it if it doesn't exist\n  getBoundingSphereAt(geometryId, target) {\n    if (geometryId >= this._geometryCount) {\n      return null;\n    }\n\n    // compute bounding sphere\n    const geometry = this.geometry;\n    const geometryInfo = this._geometryInfo[geometryId];\n    if (geometryInfo.boundingSphere === null) {\n      const sphere = new Sphere();\n      this.getBoundingBoxAt(geometryId, _box$1);\n      _box$1.getCenter(sphere.center);\n      const index = geometry.index;\n      const position = geometry.attributes.position;\n      let maxRadiusSq = 0;\n      for (let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i++) {\n        let iv = i;\n        if (index) {\n          iv = index.getX(iv);\n        }\n        _vector$5.fromBufferAttribute(position, iv);\n        maxRadiusSq = Math.max(maxRadiusSq, sphere.center.distanceToSquared(_vector$5));\n      }\n      sphere.radius = Math.sqrt(maxRadiusSq);\n      geometryInfo.boundingSphere = sphere;\n    }\n    target.copy(geometryInfo.boundingSphere);\n    return target;\n  }\n  setMatrixAt(instanceId, matrix) {\n    this.validateInstanceId(instanceId);\n    const matricesTexture = this._matricesTexture;\n    const matricesArray = this._matricesTexture.image.data;\n    matrix.toArray(matricesArray, instanceId * 16);\n    matricesTexture.needsUpdate = true;\n    return this;\n  }\n  getMatrixAt(instanceId, matrix) {\n    this.validateInstanceId(instanceId);\n    return matrix.fromArray(this._matricesTexture.image.data, instanceId * 16);\n  }\n  setColorAt(instanceId, color) {\n    this.validateInstanceId(instanceId);\n    if (this._colorsTexture === null) {\n      this._initColorsTexture();\n    }\n    color.toArray(this._colorsTexture.image.data, instanceId * 4);\n    this._colorsTexture.needsUpdate = true;\n    return this;\n  }\n  getColorAt(instanceId, color) {\n    this.validateInstanceId(instanceId);\n    return color.fromArray(this._colorsTexture.image.data, instanceId * 4);\n  }\n  setVisibleAt(instanceId, value) {\n    this.validateInstanceId(instanceId);\n    if (this._instanceInfo[instanceId].visible === value) {\n      return this;\n    }\n    this._instanceInfo[instanceId].visible = value;\n    this._visibilityChanged = true;\n    return this;\n  }\n  getVisibleAt(instanceId) {\n    this.validateInstanceId(instanceId);\n    return this._instanceInfo[instanceId].visible;\n  }\n  setGeometryIdAt(instanceId, geometryId) {\n    this.validateInstanceId(instanceId);\n    this.validateGeometryId(geometryId);\n    this._instanceInfo[instanceId].geometryIndex = geometryId;\n    return this;\n  }\n  getGeometryIdAt(instanceId) {\n    this.validateInstanceId(instanceId);\n    return this._instanceInfo[instanceId].geometryIndex;\n  }\n  getGeometryRangeAt(geometryId) {\n    let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.validateGeometryId(geometryId);\n    const geometryInfo = this._geometryInfo[geometryId];\n    target.vertexStart = geometryInfo.vertexStart;\n    target.vertexCount = geometryInfo.vertexCount;\n    target.reservedVertexCount = geometryInfo.reservedVertexCount;\n    target.indexStart = geometryInfo.indexStart;\n    target.indexCount = geometryInfo.indexCount;\n    target.reservedIndexCount = geometryInfo.reservedIndexCount;\n    target.start = geometryInfo.start;\n    target.count = geometryInfo.count;\n    return target;\n  }\n  setInstanceCount(maxInstanceCount) {\n    // shrink the available instances as much as possible\n    const availableInstanceIds = this._availableInstanceIds;\n    const instanceInfo = this._instanceInfo;\n    availableInstanceIds.sort(ascIdSort);\n    while (availableInstanceIds[availableInstanceIds.length - 1] === instanceInfo.length) {\n      instanceInfo.pop();\n      availableInstanceIds.pop();\n    }\n\n    // throw an error if it can't be shrunk to the desired size\n    if (maxInstanceCount < instanceInfo.length) {\n      throw new Error(`BatchedMesh: Instance ids outside the range ${maxInstanceCount} are being used. Cannot shrink instance count.`);\n    }\n\n    // copy the multi draw counts\n    const multiDrawCounts = new Int32Array(maxInstanceCount);\n    const multiDrawStarts = new Int32Array(maxInstanceCount);\n    copyArrayContents(this._multiDrawCounts, multiDrawCounts);\n    copyArrayContents(this._multiDrawStarts, multiDrawStarts);\n    this._multiDrawCounts = multiDrawCounts;\n    this._multiDrawStarts = multiDrawStarts;\n    this._maxInstanceCount = maxInstanceCount;\n\n    // update texture data for instance sampling\n    const indirectTexture = this._indirectTexture;\n    const matricesTexture = this._matricesTexture;\n    const colorsTexture = this._colorsTexture;\n    indirectTexture.dispose();\n    this._initIndirectTexture();\n    copyArrayContents(indirectTexture.image.data, this._indirectTexture.image.data);\n    matricesTexture.dispose();\n    this._initMatricesTexture();\n    copyArrayContents(matricesTexture.image.data, this._matricesTexture.image.data);\n    if (colorsTexture) {\n      colorsTexture.dispose();\n      this._initColorsTexture();\n      copyArrayContents(colorsTexture.image.data, this._colorsTexture.image.data);\n    }\n  }\n  setGeometrySize(maxVertexCount, maxIndexCount) {\n    // Check if we can shrink to the requested vertex attribute size\n    const validRanges = [...this._geometryInfo].filter(info => info.active);\n    const requiredVertexLength = Math.max(...validRanges.map(range => range.vertexStart + range.reservedVertexCount));\n    if (requiredVertexLength > maxVertexCount) {\n      throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${maxIndexCount}. Cannot shrink further.`);\n    }\n\n    // Check if we can shrink to the requested index attribute size\n    if (this.geometry.index) {\n      const requiredIndexLength = Math.max(...validRanges.map(range => range.indexStart + range.reservedIndexCount));\n      if (requiredIndexLength > maxIndexCount) {\n        throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${maxIndexCount}. Cannot shrink further.`);\n      }\n    }\n\n    //\n\n    // dispose of the previous geometry\n    const oldGeometry = this.geometry;\n    oldGeometry.dispose();\n\n    // recreate the geometry needed based on the previous variant\n    this._maxVertexCount = maxVertexCount;\n    this._maxIndexCount = maxIndexCount;\n    if (this._geometryInitialized) {\n      this._geometryInitialized = false;\n      this.geometry = new BufferGeometry();\n      this._initializeGeometry(oldGeometry);\n    }\n\n    // copy data from the previous geometry\n    const geometry = this.geometry;\n    if (oldGeometry.index) {\n      copyArrayContents(oldGeometry.index.array, geometry.index.array);\n    }\n    for (const key in oldGeometry.attributes) {\n      copyArrayContents(oldGeometry.attributes[key].array, geometry.attributes[key].array);\n    }\n  }\n  raycast(raycaster, intersects) {\n    const instanceInfo = this._instanceInfo;\n    const geometryInfoList = this._geometryInfo;\n    const matrixWorld = this.matrixWorld;\n    const batchGeometry = this.geometry;\n\n    // iterate over each geometry\n    _mesh.material = this.material;\n    _mesh.geometry.index = batchGeometry.index;\n    _mesh.geometry.attributes = batchGeometry.attributes;\n    if (_mesh.geometry.boundingBox === null) {\n      _mesh.geometry.boundingBox = new Box3();\n    }\n    if (_mesh.geometry.boundingSphere === null) {\n      _mesh.geometry.boundingSphere = new Sphere();\n    }\n    for (let i = 0, l = instanceInfo.length; i < l; i++) {\n      if (!instanceInfo[i].visible || !instanceInfo[i].active) {\n        continue;\n      }\n      const geometryId = instanceInfo[i].geometryIndex;\n      const geometryInfo = geometryInfoList[geometryId];\n      _mesh.geometry.setDrawRange(geometryInfo.start, geometryInfo.count);\n\n      // get the intersects\n      this.getMatrixAt(i, _mesh.matrixWorld).premultiply(matrixWorld);\n      this.getBoundingBoxAt(geometryId, _mesh.geometry.boundingBox);\n      this.getBoundingSphereAt(geometryId, _mesh.geometry.boundingSphere);\n      _mesh.raycast(raycaster, _batchIntersects);\n\n      // add batch id to the intersects\n      for (let j = 0, l = _batchIntersects.length; j < l; j++) {\n        const intersect = _batchIntersects[j];\n        intersect.object = this;\n        intersect.batchId = i;\n        intersects.push(intersect);\n      }\n      _batchIntersects.length = 0;\n    }\n    _mesh.material = null;\n    _mesh.geometry.index = null;\n    _mesh.geometry.attributes = {};\n    _mesh.geometry.setDrawRange(0, Infinity);\n  }\n  copy(source) {\n    super.copy(source);\n    this.geometry = source.geometry.clone();\n    this.perObjectFrustumCulled = source.perObjectFrustumCulled;\n    this.sortObjects = source.sortObjects;\n    this.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n    this.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n    this._geometryInfo = source._geometryInfo.map(info => ({\n      ...info,\n      boundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n      boundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null\n    }));\n    this._instanceInfo = source._instanceInfo.map(info => ({\n      ...info\n    }));\n    this._maxInstanceCount = source._maxInstanceCount;\n    this._maxVertexCount = source._maxVertexCount;\n    this._maxIndexCount = source._maxIndexCount;\n    this._geometryInitialized = source._geometryInitialized;\n    this._geometryCount = source._geometryCount;\n    this._multiDrawCounts = source._multiDrawCounts.slice();\n    this._multiDrawStarts = source._multiDrawStarts.slice();\n    this._matricesTexture = source._matricesTexture.clone();\n    this._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n    if (this._colorsTexture !== null) {\n      this._colorsTexture = source._colorsTexture.clone();\n      this._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n    }\n    return this;\n  }\n  dispose() {\n    // Assuming the geometry is not shared with other meshes\n    this.geometry.dispose();\n    this._matricesTexture.dispose();\n    this._matricesTexture = null;\n    this._indirectTexture.dispose();\n    this._indirectTexture = null;\n    if (this._colorsTexture !== null) {\n      this._colorsTexture.dispose();\n      this._colorsTexture = null;\n    }\n    return this;\n  }\n  onBeforeRender(renderer, scene, camera, geometry, material /*, _group*/) {\n    // if visibility has not changed and frustum culling and object sorting is not required\n    // then skip iterating over all items\n    if (!this._visibilityChanged && !this.perObjectFrustumCulled && !this.sortObjects) {\n      return;\n    }\n\n    // the indexed version of the multi draw function requires specifying the start\n    // offset in bytes.\n    const index = geometry.getIndex();\n    const bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n    const instanceInfo = this._instanceInfo;\n    const multiDrawStarts = this._multiDrawStarts;\n    const multiDrawCounts = this._multiDrawCounts;\n    const geometryInfoList = this._geometryInfo;\n    const perObjectFrustumCulled = this.perObjectFrustumCulled;\n    const indirectTexture = this._indirectTexture;\n    const indirectArray = indirectTexture.image.data;\n\n    // prepare the frustum in the local frame\n    if (perObjectFrustumCulled) {\n      _matrix$1.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse).multiply(this.matrixWorld);\n      _frustum.setFromProjectionMatrix(_matrix$1, renderer.coordinateSystem);\n    }\n    let multiDrawCount = 0;\n    if (this.sortObjects) {\n      // get the camera position in the local frame\n      _matrix$1.copy(this.matrixWorld).invert();\n      _vector$5.setFromMatrixPosition(camera.matrixWorld).applyMatrix4(_matrix$1);\n      _forward.set(0, 0, -1).transformDirection(camera.matrixWorld).transformDirection(_matrix$1);\n      for (let i = 0, l = instanceInfo.length; i < l; i++) {\n        if (instanceInfo[i].visible && instanceInfo[i].active) {\n          const geometryId = instanceInfo[i].geometryIndex;\n\n          // get the bounds in world space\n          this.getMatrixAt(i, _matrix$1);\n          this.getBoundingSphereAt(geometryId, _sphere$2).applyMatrix4(_matrix$1);\n\n          // determine whether the batched geometry is within the frustum\n          let culled = false;\n          if (perObjectFrustumCulled) {\n            culled = !_frustum.intersectsSphere(_sphere$2);\n          }\n          if (!culled) {\n            // get the distance from camera used for sorting\n            const geometryInfo = geometryInfoList[geometryId];\n            const z = _temp.subVectors(_sphere$2.center, _vector$5).dot(_forward);\n            _renderList.push(geometryInfo.start, geometryInfo.count, z, i);\n          }\n        }\n      }\n\n      // Sort the draw ranges and prep for rendering\n      const list = _renderList.list;\n      const customSort = this.customSort;\n      if (customSort === null) {\n        list.sort(material.transparent ? sortTransparent : sortOpaque);\n      } else {\n        customSort.call(this, list, camera);\n      }\n      for (let i = 0, l = list.length; i < l; i++) {\n        const item = list[i];\n        multiDrawStarts[multiDrawCount] = item.start * bytesPerElement;\n        multiDrawCounts[multiDrawCount] = item.count;\n        indirectArray[multiDrawCount] = item.index;\n        multiDrawCount++;\n      }\n      _renderList.reset();\n    } else {\n      for (let i = 0, l = instanceInfo.length; i < l; i++) {\n        if (instanceInfo[i].visible && instanceInfo[i].active) {\n          const geometryId = instanceInfo[i].geometryIndex;\n\n          // determine whether the batched geometry is within the frustum\n          let culled = false;\n          if (perObjectFrustumCulled) {\n            // get the bounds in world space\n            this.getMatrixAt(i, _matrix$1);\n            this.getBoundingSphereAt(geometryId, _sphere$2).applyMatrix4(_matrix$1);\n            culled = !_frustum.intersectsSphere(_sphere$2);\n          }\n          if (!culled) {\n            const geometryInfo = geometryInfoList[geometryId];\n            multiDrawStarts[multiDrawCount] = geometryInfo.start * bytesPerElement;\n            multiDrawCounts[multiDrawCount] = geometryInfo.count;\n            indirectArray[multiDrawCount] = i;\n            multiDrawCount++;\n          }\n        }\n      }\n    }\n    indirectTexture.needsUpdate = true;\n    this._multiDrawCount = multiDrawCount;\n    this._visibilityChanged = false;\n  }\n  onBeforeShadow(renderer, object, camera, shadowCamera, geometry, depthMaterial /* , group */) {\n    this.onBeforeRender(renderer, null, shadowCamera, geometry, depthMaterial);\n  }\n}\nclass LineBasicMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isLineBasicMaterial = true;\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    this.fog = source.fog;\n    return this;\n  }\n}\nconst _vStart = /*@__PURE__*/new Vector3();\nconst _vEnd = /*@__PURE__*/new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\nconst _ray$1 = /*@__PURE__*/new Ray();\nconst _sphere$1 = /*@__PURE__*/new Sphere();\nconst _intersectPointOnRay = /*@__PURE__*/new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/new Vector3();\nclass Line extends Object3D {\n  constructor() {\n    let geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n    let material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new LineBasicMaterial();\n    super();\n    this.isLine = true;\n    this.type = 'Line';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.material = Array.isArray(source.material) ? source.material.slice() : source.material;\n    this.geometry = source.geometry;\n    return this;\n  }\n  computeLineDistances() {\n    const geometry = this.geometry;\n\n    // we assume non-indexed geometry\n\n    if (geometry.index === null) {\n      const positionAttribute = geometry.attributes.position;\n      const lineDistances = [0];\n      for (let i = 1, l = positionAttribute.count; i < l; i++) {\n        _vStart.fromBufferAttribute(positionAttribute, i - 1);\n        _vEnd.fromBufferAttribute(positionAttribute, i);\n        lineDistances[i] = lineDistances[i - 1];\n        lineDistances[i] += _vStart.distanceTo(_vEnd);\n      }\n      geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n    } else {\n      console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n    }\n    return this;\n  }\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const matrixWorld = this.matrixWorld;\n    const threshold = raycaster.params.Line.threshold;\n    const drawRange = geometry.drawRange;\n\n    // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    _sphere$1.copy(geometry.boundingSphere);\n    _sphere$1.applyMatrix4(matrixWorld);\n    _sphere$1.radius += threshold;\n    if (raycaster.ray.intersectsSphere(_sphere$1) === false) return;\n\n    //\n\n    _inverseMatrix$1.copy(matrixWorld).invert();\n    _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n    const step = this.isLineSegments ? 2 : 1;\n    const index = geometry.index;\n    const attributes = geometry.attributes;\n    const positionAttribute = attributes.position;\n    if (index !== null) {\n      const start = Math.max(0, drawRange.start);\n      const end = Math.min(index.count, drawRange.start + drawRange.count);\n      for (let i = start, l = end - 1; i < l; i += step) {\n        const a = index.getX(i);\n        const b = index.getX(i + 1);\n        const intersect = checkIntersection(this, raycaster, _ray$1, localThresholdSq, a, b);\n        if (intersect) {\n          intersects.push(intersect);\n        }\n      }\n      if (this.isLineLoop) {\n        const a = index.getX(end - 1);\n        const b = index.getX(start);\n        const intersect = checkIntersection(this, raycaster, _ray$1, localThresholdSq, a, b);\n        if (intersect) {\n          intersects.push(intersect);\n        }\n      }\n    } else {\n      const start = Math.max(0, drawRange.start);\n      const end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n      for (let i = start, l = end - 1; i < l; i += step) {\n        const intersect = checkIntersection(this, raycaster, _ray$1, localThresholdSq, i, i + 1);\n        if (intersect) {\n          intersects.push(intersect);\n        }\n      }\n      if (this.isLineLoop) {\n        const intersect = checkIntersection(this, raycaster, _ray$1, localThresholdSq, end - 1, start);\n        if (intersect) {\n          intersects.push(intersect);\n        }\n      }\n    }\n  }\n  updateMorphTargets() {\n    const geometry = this.geometry;\n    const morphAttributes = geometry.morphAttributes;\n    const keys = Object.keys(morphAttributes);\n    if (keys.length > 0) {\n      const morphAttribute = morphAttributes[keys[0]];\n      if (morphAttribute !== undefined) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n        for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n          const name = morphAttribute[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  }\n}\nfunction checkIntersection(object, raycaster, ray, thresholdSq, a, b) {\n  const positionAttribute = object.geometry.attributes.position;\n  _vStart.fromBufferAttribute(positionAttribute, a);\n  _vEnd.fromBufferAttribute(positionAttribute, b);\n  const distSq = ray.distanceSqToSegment(_vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment);\n  if (distSq > thresholdSq) return;\n  _intersectPointOnRay.applyMatrix4(object.matrixWorld); // Move back to world space for distance calculation\n\n  const distance = raycaster.ray.origin.distanceTo(_intersectPointOnRay);\n  if (distance < raycaster.near || distance > raycaster.far) return;\n  return {\n    distance: distance,\n    // What do we want? intersection point on the ray or on the segment??\n    // point: raycaster.ray.at( distance ),\n    point: _intersectPointOnSegment.clone().applyMatrix4(object.matrixWorld),\n    index: a,\n    face: null,\n    faceIndex: null,\n    barycoord: null,\n    object: object\n  };\n}\nconst _start = /*@__PURE__*/new Vector3();\nconst _end = /*@__PURE__*/new Vector3();\nclass LineSegments extends Line {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.isLineSegments = true;\n    this.type = 'LineSegments';\n  }\n  computeLineDistances() {\n    const geometry = this.geometry;\n\n    // we assume non-indexed geometry\n\n    if (geometry.index === null) {\n      const positionAttribute = geometry.attributes.position;\n      const lineDistances = [];\n      for (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n        _start.fromBufferAttribute(positionAttribute, i);\n        _end.fromBufferAttribute(positionAttribute, i + 1);\n        lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n        lineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n      }\n      geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n    } else {\n      console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n    }\n    return this;\n  }\n}\nclass LineLoop extends Line {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.isLineLoop = true;\n    this.type = 'LineLoop';\n  }\n}\nclass PointsMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isPointsMaterial = true;\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.alphaMap = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.fog = source.fog;\n    return this;\n  }\n}\nconst _inverseMatrix = /*@__PURE__*/new Matrix4();\nconst _ray = /*@__PURE__*/new Ray();\nconst _sphere = /*@__PURE__*/new Sphere();\nconst _position$2 = /*@__PURE__*/new Vector3();\nclass Points extends Object3D {\n  constructor() {\n    let geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BufferGeometry();\n    let material = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new PointsMaterial();\n    super();\n    this.isPoints = true;\n    this.type = 'Points';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.material = Array.isArray(source.material) ? source.material.slice() : source.material;\n    this.geometry = source.geometry;\n    return this;\n  }\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const matrixWorld = this.matrixWorld;\n    const threshold = raycaster.params.Points.threshold;\n    const drawRange = geometry.drawRange;\n\n    // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    _sphere.copy(geometry.boundingSphere);\n    _sphere.applyMatrix4(matrixWorld);\n    _sphere.radius += threshold;\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n    //\n\n    _inverseMatrix.copy(matrixWorld).invert();\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n    const index = geometry.index;\n    const attributes = geometry.attributes;\n    const positionAttribute = attributes.position;\n    if (index !== null) {\n      const start = Math.max(0, drawRange.start);\n      const end = Math.min(index.count, drawRange.start + drawRange.count);\n      for (let i = start, il = end; i < il; i++) {\n        const a = index.getX(i);\n        _position$2.fromBufferAttribute(positionAttribute, a);\n        testPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n      }\n    } else {\n      const start = Math.max(0, drawRange.start);\n      const end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n      for (let i = start, l = end; i < l; i++) {\n        _position$2.fromBufferAttribute(positionAttribute, i);\n        testPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n      }\n    }\n  }\n  updateMorphTargets() {\n    const geometry = this.geometry;\n    const morphAttributes = geometry.morphAttributes;\n    const keys = Object.keys(morphAttributes);\n    if (keys.length > 0) {\n      const morphAttribute = morphAttributes[keys[0]];\n      if (morphAttribute !== undefined) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n        for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n          const name = morphAttribute[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  }\n}\nfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n  const rayPointDistanceSq = _ray.distanceSqToPoint(point);\n  if (rayPointDistanceSq < localThresholdSq) {\n    const intersectPoint = new Vector3();\n    _ray.closestPointToPoint(point, intersectPoint);\n    intersectPoint.applyMatrix4(matrixWorld);\n    const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n    if (distance < raycaster.near || distance > raycaster.far) return;\n    intersects.push({\n      distance: distance,\n      distanceToRay: Math.sqrt(rayPointDistanceSq),\n      point: intersectPoint,\n      index: index,\n      face: null,\n      faceIndex: null,\n      barycoord: null,\n      object: object\n    });\n  }\n}\nclass Group extends Object3D {\n  constructor() {\n    super();\n    this.isGroup = true;\n    this.type = 'Group';\n  }\n}\nclass VideoTexture extends Texture {\n  constructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    super(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.isVideoTexture = true;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.generateMipmaps = false;\n    const scope = this;\n    function updateVideo() {\n      scope.needsUpdate = true;\n      video.requestVideoFrameCallback(updateVideo);\n    }\n    if ('requestVideoFrameCallback' in video) {\n      video.requestVideoFrameCallback(updateVideo);\n    }\n  }\n  clone() {\n    return new this.constructor(this.image).copy(this);\n  }\n  update() {\n    const video = this.image;\n    const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n    if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n      this.needsUpdate = true;\n    }\n  }\n}\nclass FramebufferTexture extends Texture {\n  constructor(width, height) {\n    super({\n      width,\n      height\n    });\n    this.isFramebufferTexture = true;\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.generateMipmaps = false;\n    this.needsUpdate = true;\n  }\n}\nclass CompressedTexture extends Texture {\n  constructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace) {\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace);\n    this.isCompressedTexture = true;\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps;\n\n    // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false;\n\n    // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n}\nclass CompressedArrayTexture extends CompressedTexture {\n  constructor(mipmaps, width, height, depth, format, type) {\n    super(mipmaps, width, height, format, type);\n    this.isCompressedArrayTexture = true;\n    this.image.depth = depth;\n    this.wrapR = ClampToEdgeWrapping;\n    this.layerUpdates = new Set();\n  }\n  addLayerUpdate(layerIndex) {\n    this.layerUpdates.add(layerIndex);\n  }\n  clearLayerUpdates() {\n    this.layerUpdates.clear();\n  }\n}\nclass CompressedCubeTexture extends CompressedTexture {\n  constructor(images, format, type) {\n    super(undefined, images[0].width, images[0].height, format, type, CubeReflectionMapping);\n    this.isCompressedCubeTexture = true;\n    this.isCubeTexture = true;\n    this.image = images;\n  }\n}\nclass CanvasTexture extends Texture {\n  constructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    super(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.isCanvasTexture = true;\n    this.needsUpdate = true;\n  }\n}\nclass DepthTexture extends Texture {\n  constructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n    let format = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : DepthFormat;\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n    if (type === undefined && format === DepthFormat) type = UnsignedIntType;\n    if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.isDepthTexture = true;\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n    this.compareFunction = null;\n  }\n  copy(source) {\n    super.copy(source);\n    this.compareFunction = source.compareFunction;\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    if (this.compareFunction !== null) data.compareFunction = this.compareFunction;\n    return data;\n  }\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n  constructor() {\n    this.type = 'Curve';\n    this.arcLengthDivisions = 200;\n  }\n\n  // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n\n  getPoint(/* t, optionalTarget */\n  ) {\n    console.warn('THREE.Curve: .getPoint() not implemented.');\n    return null;\n  }\n\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n\n  getPointAt(u, optionalTarget) {\n    const t = this.getUtoTmapping(u);\n    return this.getPoint(t, optionalTarget);\n  }\n\n  // Get sequence of points using getPoint( t )\n\n  getPoints() {\n    let divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    const points = [];\n    for (let d = 0; d <= divisions; d++) {\n      points.push(this.getPoint(d / divisions));\n    }\n    return points;\n  }\n\n  // Get sequence of points using getPointAt( u )\n\n  getSpacedPoints() {\n    let divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    const points = [];\n    for (let d = 0; d <= divisions; d++) {\n      points.push(this.getPointAt(d / divisions));\n    }\n    return points;\n  }\n\n  // Get total curve arc length\n\n  getLength() {\n    const lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  }\n\n  // Get list of cumulative segment lengths\n\n  getLengths() {\n    let divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.arcLengthDivisions;\n    if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n      return this.cacheArcLengths;\n    }\n    this.needsUpdate = false;\n    const cache = [];\n    let current,\n      last = this.getPoint(0);\n    let sum = 0;\n    cache.push(0);\n    for (let p = 1; p <= divisions; p++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n    this.cacheArcLengths = cache;\n    return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n  }\n  updateArcLengths() {\n    this.needsUpdate = true;\n    this.getLengths();\n  }\n\n  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n  getUtoTmapping(u, distance) {\n    const arcLengths = this.getLengths();\n    let i = 0;\n    const il = arcLengths.length;\n    let targetArcLength; // The targeted u distance value to get\n\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    }\n\n    // binary search for the index with largest value smaller than target u distance\n\n    let low = 0,\n      high = il - 1,\n      comparison;\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n      comparison = arcLengths[i] - targetArcLength;\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break;\n\n        // DONE\n      }\n    }\n    i = high;\n    if (arcLengths[i] === targetArcLength) {\n      return i / (il - 1);\n    }\n\n    // we could get finer grain at lengths, or use simple interpolation between two points\n\n    const lengthBefore = arcLengths[i];\n    const lengthAfter = arcLengths[i + 1];\n    const segmentLength = lengthAfter - lengthBefore;\n\n    // determine where we are between the 'before' and 'after' points\n\n    const segmentFraction = (targetArcLength - lengthBefore) / segmentLength;\n\n    // add that fractional amount to t\n\n    const t = (i + segmentFraction) / (il - 1);\n    return t;\n  }\n\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n\n  getTangent(t, optionalTarget) {\n    const delta = 0.0001;\n    let t1 = t - delta;\n    let t2 = t + delta;\n\n    // Capping in case of danger\n\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n    const pt1 = this.getPoint(t1);\n    const pt2 = this.getPoint(t2);\n    const tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n    tangent.copy(pt2).sub(pt1).normalize();\n    return tangent;\n  }\n  getTangentAt(u, optionalTarget) {\n    const t = this.getUtoTmapping(u);\n    return this.getTangent(t, optionalTarget);\n  }\n  computeFrenetFrames(segments, closed) {\n    // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n    const normal = new Vector3();\n    const tangents = [];\n    const normals = [];\n    const binormals = [];\n    const vec = new Vector3();\n    const mat = new Matrix4();\n\n    // compute the tangent vectors for each segment on the curve\n\n    for (let i = 0; i <= segments; i++) {\n      const u = i / segments;\n      tangents[i] = this.getTangentAt(u, new Vector3());\n    }\n\n    // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the minimum tangent xyz component\n\n    normals[0] = new Vector3();\n    binormals[0] = new Vector3();\n    let min = Number.MAX_VALUE;\n    const tx = Math.abs(tangents[0].x);\n    const ty = Math.abs(tangents[0].y);\n    const tz = Math.abs(tangents[0].z);\n    if (tx <= min) {\n      min = tx;\n      normal.set(1, 0, 0);\n    }\n    if (ty <= min) {\n      min = ty;\n      normal.set(0, 1, 0);\n    }\n    if (tz <= min) {\n      normal.set(0, 0, 1);\n    }\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]);\n\n    // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n    for (let i = 1; i <= segments; i++) {\n      normals[i] = normals[i - 1].clone();\n      binormals[i] = binormals[i - 1].clone();\n      vec.crossVectors(tangents[i - 1], tangents[i]);\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n        const theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n        normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n\n    // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n    if (closed === true) {\n      let theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n      theta /= segments;\n      if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n        theta = -theta;\n      }\n      for (let i = 1; i <= segments; i++) {\n        // twist a little...\n        normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      }\n    }\n    return {\n      tangents: tangents,\n      normals: normals,\n      binormals: binormals\n    };\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.arcLengthDivisions = source.arcLengthDivisions;\n    return this;\n  }\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.6,\n        type: 'Curve',\n        generator: 'Curve.toJSON'\n      }\n    };\n    data.arcLengthDivisions = this.arcLengthDivisions;\n    data.type = this.type;\n    return data;\n  }\n  fromJSON(json) {\n    this.arcLengthDivisions = json.arcLengthDivisions;\n    return this;\n  }\n}\nclass EllipseCurve extends Curve {\n  constructor() {\n    let aX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let aY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let xRadius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let yRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let aStartAngle = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    let aEndAngle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n    let aClockwise = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let aRotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n    super();\n    this.isEllipseCurve = true;\n    this.type = 'EllipseCurve';\n    this.aX = aX;\n    this.aY = aY;\n    this.xRadius = xRadius;\n    this.yRadius = yRadius;\n    this.aStartAngle = aStartAngle;\n    this.aEndAngle = aEndAngle;\n    this.aClockwise = aClockwise;\n    this.aRotation = aRotation;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    const point = optionalTarget;\n    const twoPi = Math.PI * 2;\n    let deltaAngle = this.aEndAngle - this.aStartAngle;\n    const samePoints = Math.abs(deltaAngle) < Number.EPSILON;\n\n    // ensures that deltaAngle is 0 .. 2 PI\n    while (deltaAngle < 0) deltaAngle += twoPi;\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n    const angle = this.aStartAngle + t * deltaAngle;\n    let x = this.aX + this.xRadius * Math.cos(angle);\n    let y = this.aY + this.yRadius * Math.sin(angle);\n    if (this.aRotation !== 0) {\n      const cos = Math.cos(this.aRotation);\n      const sin = Math.sin(this.aRotation);\n      const tx = x - this.aX;\n      const ty = y - this.aY;\n\n      // Rotate the point about the center of the ellipse.\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n    return point.set(x, y);\n  }\n  copy(source) {\n    super.copy(source);\n    this.aX = source.aX;\n    this.aY = source.aY;\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n    this.aClockwise = source.aClockwise;\n    this.aRotation = source.aRotation;\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.aX = this.aX;\n    data.aY = this.aY;\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n    data.aClockwise = this.aClockwise;\n    data.aRotation = this.aRotation;\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.aX = json.aX;\n    this.aY = json.aY;\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n    this.aClockwise = json.aClockwise;\n    this.aRotation = json.aRotation;\n    return this;\n  }\n}\nclass ArcCurve extends EllipseCurve {\n  constructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    super(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    this.isArcCurve = true;\n    this.type = 'ArcCurve';\n  }\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n  let c0 = 0,\n    c1 = 0,\n    c2 = 0,\n    c3 = 0;\n\n  /*\n   * Compute coefficients for a cubic polynomial\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n   * such that\n   *   p(0) = x0, p(1) = x1\n   *  and\n   *   p'(0) = t0, p'(1) = t1.\n   */\n  function init(x0, x1, t0, t1) {\n    c0 = x0;\n    c1 = t0;\n    c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  }\n  return {\n    initCatmullRom: function (x0, x1, x2, x3, tension) {\n      init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    },\n    initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n      // compute tangents when parameterized in [t1,t2]\n      let t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n      let t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2;\n\n      // rescale tangents for parametrization in [0,1]\n      t1 *= dt1;\n      t2 *= dt1;\n      init(x1, x2, t1, t2);\n    },\n    calc: function (t) {\n      const t2 = t * t;\n      const t3 = t2 * t;\n      return c0 + c1 * t + c2 * t2 + c3 * t3;\n    }\n  };\n}\n\n//\n\nconst tmp = /*@__PURE__*/new Vector3();\nconst px = /*@__PURE__*/new CubicPoly();\nconst py = /*@__PURE__*/new CubicPoly();\nconst pz = /*@__PURE__*/new CubicPoly();\nclass CatmullRomCurve3 extends Curve {\n  constructor() {\n    let points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let closed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let curveType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'centripetal';\n    let tension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n    super();\n    this.isCatmullRomCurve3 = true;\n    this.type = 'CatmullRomCurve3';\n    this.points = points;\n    this.closed = closed;\n    this.curveType = curveType;\n    this.tension = tension;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const points = this.points;\n    const l = points.length;\n    const p = (l - (this.closed ? 0 : 1)) * t;\n    let intPoint = Math.floor(p);\n    let weight = p - intPoint;\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n    let p0, p3; // 4 points (p1 & p2 defined below)\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n    const p1 = points[intPoint % l];\n    const p2 = points[(intPoint + 1) % l];\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n    if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      const pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n      let dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      let dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      let dt2 = Math.pow(p2.distanceToSquared(p3), pow);\n\n      // safety check for repeated points\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.curveType === 'catmullrom') {\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n    }\n    point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.points = [];\n    for (let i = 0, l = source.points.length; i < l; i++) {\n      const point = source.points[i];\n      this.points.push(point.clone());\n    }\n    this.closed = source.closed;\n    this.curveType = source.curveType;\n    this.tension = source.tension;\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.points = [];\n    for (let i = 0, l = this.points.length; i < l; i++) {\n      const point = this.points[i];\n      data.points.push(point.toArray());\n    }\n    data.closed = this.closed;\n    data.curveType = this.curveType;\n    data.tension = this.tension;\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.points = [];\n    for (let i = 0, l = json.points.length; i < l; i++) {\n      const point = json.points[i];\n      this.points.push(new Vector3().fromArray(point));\n    }\n    this.closed = json.closed;\n    this.curveType = json.curveType;\n    this.tension = json.tension;\n    return this;\n  }\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  const v0 = (p2 - p0) * 0.5;\n  const v1 = (p3 - p1) * 0.5;\n  const t2 = t * t;\n  const t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\n//\n\nfunction QuadraticBezierP0(t, p) {\n  const k = 1 - t;\n  return k * k * p;\n}\nfunction QuadraticBezierP1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\nfunction QuadraticBezierP2(t, p) {\n  return t * t * p;\n}\nfunction QuadraticBezier(t, p0, p1, p2) {\n  return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n}\n\n//\n\nfunction CubicBezierP0(t, p) {\n  const k = 1 - t;\n  return k * k * k * p;\n}\nfunction CubicBezierP1(t, p) {\n  const k = 1 - t;\n  return 3 * k * k * t * p;\n}\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\nfunction CubicBezier(t, p0, p1, p2, p3) {\n  return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n}\nclass CubicBezierCurve extends Curve {\n  constructor() {\n    let v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    let v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    let v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector2();\n    let v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector2();\n    super();\n    this.isCubicBezierCurve = true;\n    this.type = 'CubicBezierCurve';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    const point = optionalTarget;\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  }\n}\nclass CubicBezierCurve3 extends Curve {\n  constructor() {\n    let v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    let v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n    let v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector3();\n    super();\n    this.isCubicBezierCurve3 = true;\n    this.type = 'CubicBezierCurve3';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  }\n}\nclass LineCurve extends Curve {\n  constructor() {\n    let v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    let v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    super();\n    this.isLineCurve = true;\n    this.type = 'LineCurve';\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    const point = optionalTarget;\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n    return point;\n  }\n\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n  getTangent(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    return optionalTarget.subVectors(this.v2, this.v1).normalize();\n  }\n  getTangentAt(u, optionalTarget) {\n    return this.getTangent(u, optionalTarget);\n  }\n  copy(source) {\n    super.copy(source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n}\nclass LineCurve3 extends Curve {\n  constructor() {\n    let v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    super();\n    this.isLineCurve3 = true;\n    this.type = 'LineCurve3';\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n    return point;\n  }\n\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n  getTangent(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    return optionalTarget.subVectors(this.v2, this.v1).normalize();\n  }\n  getTangentAt(u, optionalTarget) {\n    return this.getTangent(u, optionalTarget);\n  }\n  copy(source) {\n    super.copy(source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n}\nclass QuadraticBezierCurve extends Curve {\n  constructor() {\n    let v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    let v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    let v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector2();\n    super();\n    this.isQuadraticBezierCurve = true;\n    this.type = 'QuadraticBezierCurve';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    const point = optionalTarget;\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n}\nclass QuadraticBezierCurve3 extends Curve {\n  constructor() {\n    let v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    let v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n    super();\n    this.isQuadraticBezierCurve3 = true;\n    this.type = 'QuadraticBezierCurve3';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n}\nclass SplineCurve extends Curve {\n  constructor() {\n    let points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    super();\n    this.isSplineCurve = true;\n    this.type = 'SplineCurve';\n    this.points = points;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    const point = optionalTarget;\n    const points = this.points;\n    const p = (points.length - 1) * t;\n    const intPoint = Math.floor(p);\n    const weight = p - intPoint;\n    const p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    const p1 = points[intPoint];\n    const p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    const p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.points = [];\n    for (let i = 0, l = source.points.length; i < l; i++) {\n      const point = source.points[i];\n      this.points.push(point.clone());\n    }\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.points = [];\n    for (let i = 0, l = this.points.length; i < l; i++) {\n      const point = this.points[i];\n      data.points.push(point.toArray());\n    }\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.points = [];\n    for (let i = 0, l = json.points.length; i < l; i++) {\n      const point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n    return this;\n  }\n}\nvar Curves = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcCurve: ArcCurve,\n  CatmullRomCurve3: CatmullRomCurve3,\n  CubicBezierCurve: CubicBezierCurve,\n  CubicBezierCurve3: CubicBezierCurve3,\n  EllipseCurve: EllipseCurve,\n  LineCurve: LineCurve,\n  LineCurve3: LineCurve3,\n  QuadraticBezierCurve: QuadraticBezierCurve,\n  QuadraticBezierCurve3: QuadraticBezierCurve3,\n  SplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n  constructor() {\n    super();\n    this.type = 'CurvePath';\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n  add(curve) {\n    this.curves.push(curve);\n  }\n  closePath() {\n    // Add a line curve if start and end of lines are not connected\n    const startPoint = this.curves[0].getPoint(0);\n    const endPoint = this.curves[this.curves.length - 1].getPoint(1);\n    if (!startPoint.equals(endPoint)) {\n      const lineType = startPoint.isVector2 === true ? 'LineCurve' : 'LineCurve3';\n      this.curves.push(new Curves[lineType](endPoint, startPoint));\n    }\n    return this;\n  }\n\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n\n  getPoint(t, optionalTarget) {\n    const d = t * this.getLength();\n    const curveLengths = this.getCurveLengths();\n    let i = 0;\n\n    // To think about boundaries points.\n\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        const diff = curveLengths[i] - d;\n        const curve = this.curves[i];\n        const segmentLength = curve.getLength();\n        const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n        return curve.getPointAt(u, optionalTarget);\n      }\n      i++;\n    }\n    return null;\n\n    // loop where sum != 0, sum > d , sum+1 <d\n  }\n\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n\n  getLength() {\n    const lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  }\n\n  // cacheLengths must be recalculated.\n  updateArcLengths() {\n    this.needsUpdate = true;\n    this.cacheLengths = null;\n    this.getCurveLengths();\n  }\n\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n\n  getCurveLengths() {\n    // We use cache values if curves and cache array are same length\n\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    }\n\n    // Get length of sub-curve\n    // Push sums into cached array\n\n    const lengths = [];\n    let sums = 0;\n    for (let i = 0, l = this.curves.length; i < l; i++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n    this.cacheLengths = lengths;\n    return lengths;\n  }\n  getSpacedPoints() {\n    let divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    const points = [];\n    for (let i = 0; i <= divisions; i++) {\n      points.push(this.getPoint(i / divisions));\n    }\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n    return points;\n  }\n  getPoints() {\n    let divisions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n    const points = [];\n    let last;\n    for (let i = 0, curves = this.curves; i < curves.length; i++) {\n      const curve = curves[i];\n      const resolution = curve.isEllipseCurve ? divisions * 2 : curve.isLineCurve || curve.isLineCurve3 ? 1 : curve.isSplineCurve ? divisions * curve.points.length : divisions;\n      const pts = curve.getPoints(resolution);\n      for (let j = 0; j < pts.length; j++) {\n        const point = pts[j];\n        if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n        points.push(point);\n        last = point;\n      }\n    }\n    if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n      points.push(points[0]);\n    }\n    return points;\n  }\n  copy(source) {\n    super.copy(source);\n    this.curves = [];\n    for (let i = 0, l = source.curves.length; i < l; i++) {\n      const curve = source.curves[i];\n      this.curves.push(curve.clone());\n    }\n    this.autoClose = source.autoClose;\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.autoClose = this.autoClose;\n    data.curves = [];\n    for (let i = 0, l = this.curves.length; i < l; i++) {\n      const curve = this.curves[i];\n      data.curves.push(curve.toJSON());\n    }\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.autoClose = json.autoClose;\n    this.curves = [];\n    for (let i = 0, l = json.curves.length; i < l; i++) {\n      const curve = json.curves[i];\n      this.curves.push(new Curves[curve.type]().fromJSON(curve));\n    }\n    return this;\n  }\n}\nclass Path extends CurvePath {\n  constructor(points) {\n    super();\n    this.type = 'Path';\n    this.currentPoint = new Vector2();\n    if (points) {\n      this.setFromPoints(points);\n    }\n  }\n  setFromPoints(points) {\n    this.moveTo(points[0].x, points[0].y);\n    for (let i = 1, l = points.length; i < l; i++) {\n      this.lineTo(points[i].x, points[i].y);\n    }\n    return this;\n  }\n  moveTo(x, y) {\n    this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n    return this;\n  }\n  lineTo(x, y) {\n    const curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n    this.curves.push(curve);\n    this.currentPoint.set(x, y);\n    return this;\n  }\n  quadraticCurveTo(aCPx, aCPy, aX, aY) {\n    const curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n    return this;\n  }\n  bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    const curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n    return this;\n  }\n  splineThru(pts /*Array of Vector*/) {\n    const npts = [this.currentPoint.clone()].concat(pts);\n    const curve = new SplineCurve(npts);\n    this.curves.push(curve);\n    this.currentPoint.copy(pts[pts.length - 1]);\n    return this;\n  }\n  arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    const x0 = this.currentPoint.x;\n    const y0 = this.currentPoint.y;\n    this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n    return this;\n  }\n  absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    return this;\n  }\n  ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    const x0 = this.currentPoint.x;\n    const y0 = this.currentPoint.y;\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    return this;\n  }\n  absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    const curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    if (this.curves.length > 0) {\n      // if a previous curve is present, attempt to join\n      const firstPoint = curve.getPoint(0);\n      if (!firstPoint.equals(this.currentPoint)) {\n        this.lineTo(firstPoint.x, firstPoint.y);\n      }\n    }\n    this.curves.push(curve);\n    const lastPoint = curve.getPoint(1);\n    this.currentPoint.copy(lastPoint);\n    return this;\n  }\n  copy(source) {\n    super.copy(source);\n    this.currentPoint.copy(source.currentPoint);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.currentPoint = this.currentPoint.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.currentPoint.fromArray(json.currentPoint);\n    return this;\n  }\n}\nclass LatheGeometry extends BufferGeometry {\n  constructor() {\n    let points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [new Vector2(0, -0.5), new Vector2(0.5, 0), new Vector2(0, 0.5)];\n    let segments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    let phiStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let phiLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI * 2;\n    super();\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments);\n\n    // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = clamp(phiLength, 0, Math.PI * 2);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const uvs = [];\n    const initNormals = [];\n    const normals = [];\n\n    // helper variables\n\n    const inverseSegments = 1.0 / segments;\n    const vertex = new Vector3();\n    const uv = new Vector2();\n    const normal = new Vector3();\n    const curNormal = new Vector3();\n    const prevNormal = new Vector3();\n    let dx = 0;\n    let dy = 0;\n\n    // pre-compute normals for initial \"meridian\"\n\n    for (let j = 0; j <= points.length - 1; j++) {\n      switch (j) {\n        case 0:\n          // special handling for 1st vertex on path\n\n          dx = points[j + 1].x - points[j].x;\n          dy = points[j + 1].y - points[j].y;\n          normal.x = dy * 1.0;\n          normal.y = -dx;\n          normal.z = dy * 0.0;\n          prevNormal.copy(normal);\n          normal.normalize();\n          initNormals.push(normal.x, normal.y, normal.z);\n          break;\n        case points.length - 1:\n          // special handling for last Vertex on path\n\n          initNormals.push(prevNormal.x, prevNormal.y, prevNormal.z);\n          break;\n        default:\n          // default handling for all vertices in between\n\n          dx = points[j + 1].x - points[j].x;\n          dy = points[j + 1].y - points[j].y;\n          normal.x = dy * 1.0;\n          normal.y = -dx;\n          normal.z = dy * 0.0;\n          curNormal.copy(normal);\n          normal.x += prevNormal.x;\n          normal.y += prevNormal.y;\n          normal.z += prevNormal.z;\n          normal.normalize();\n          initNormals.push(normal.x, normal.y, normal.z);\n          prevNormal.copy(curNormal);\n      }\n    }\n\n    // generate vertices, uvs and normals\n\n    for (let i = 0; i <= segments; i++) {\n      const phi = phiStart + i * inverseSegments * phiLength;\n      const sin = Math.sin(phi);\n      const cos = Math.cos(phi);\n      for (let j = 0; j <= points.length - 1; j++) {\n        // vertex\n\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.push(uv.x, uv.y);\n\n        // normal\n\n        const x = initNormals[3 * j + 0] * sin;\n        const y = initNormals[3 * j + 1];\n        const z = initNormals[3 * j + 0] * cos;\n        normals.push(x, y, z);\n      }\n    }\n\n    // indices\n\n    for (let i = 0; i < segments; i++) {\n      for (let j = 0; j < points.length - 1; j++) {\n        const base = j + i * points.length;\n        const a = base;\n        const b = base + points.length;\n        const c = base + points.length + 1;\n        const d = base + 1;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(c, d, b);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new LatheGeometry(data.points, data.segments, data.phiStart, data.phiLength);\n  }\n}\nclass CapsuleGeometry extends LatheGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let capSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n    let radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    const path = new Path();\n    path.absarc(0, -length / 2, radius, Math.PI * 1.5, 0);\n    path.absarc(0, length / 2, radius, 0, Math.PI * 0.5);\n    super(path.getPoints(capSegments), radialSegments);\n    this.type = 'CapsuleGeometry';\n    this.parameters = {\n      radius: radius,\n      length: length,\n      capSegments: capSegments,\n      radialSegments: radialSegments\n    };\n  }\n  static fromJSON(data) {\n    return new CapsuleGeometry(data.radius, data.length, data.capSegments, data.radialSegments);\n  }\n}\nclass CircleGeometry extends BufferGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let segments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n    let thetaStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let thetaLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI * 2;\n    super();\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    segments = Math.max(3, segments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    const vertex = new Vector3();\n    const uv = new Vector2();\n\n    // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n    for (let s = 0, i = 3; s <= segments; s++, i += 3) {\n      const segment = thetaStart + s / segments * thetaLength;\n\n      // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z);\n\n      // normal\n\n      normals.push(0, 0, 1);\n\n      // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    }\n\n    // indices\n\n    for (let i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n  }\n}\nclass CylinderGeometry extends BufferGeometry {\n  constructor() {\n    let radiusTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let radiusBottom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;\n    let heightSegments = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let openEnded = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    let thetaStart = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n    let thetaLength = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : Math.PI * 2;\n    super();\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    const scope = this;\n    radialSegments = Math.floor(radialSegments);\n    heightSegments = Math.floor(heightSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    let index = 0;\n    const indexArray = [];\n    const halfHeight = height / 2;\n    let groupStart = 0;\n\n    // generate geometry\n\n    generateTorso();\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n    function generateTorso() {\n      const normal = new Vector3();\n      const vertex = new Vector3();\n      let groupCount = 0;\n\n      // this will be used to calculate the normal\n      const slope = (radiusBottom - radiusTop) / height;\n\n      // generate vertices, normals and uvs\n\n      for (let y = 0; y <= heightSegments; y++) {\n        const indexRow = [];\n        const v = y / heightSegments;\n\n        // calculate the radius of the current row\n\n        const radius = v * (radiusBottom - radiusTop) + radiusTop;\n        for (let x = 0; x <= radialSegments; x++) {\n          const u = x / radialSegments;\n          const theta = u * thetaLength + thetaStart;\n          const sinTheta = Math.sin(theta);\n          const cosTheta = Math.cos(theta);\n\n          // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z);\n\n          // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z);\n\n          // uv\n\n          uvs.push(u, 1 - v);\n\n          // save index of vertex in respective row\n\n          indexRow.push(index++);\n        }\n\n        // now save vertices of the row in our index array\n\n        indexArray.push(indexRow);\n      }\n\n      // generate indices\n\n      for (let x = 0; x < radialSegments; x++) {\n        for (let y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n\n          const a = indexArray[y][x];\n          const b = indexArray[y + 1][x];\n          const c = indexArray[y + 1][x + 1];\n          const d = indexArray[y][x + 1];\n\n          // faces\n\n          if (radiusTop > 0 || y !== 0) {\n            indices.push(a, b, d);\n            groupCount += 3;\n          }\n          if (radiusBottom > 0 || y !== heightSegments - 1) {\n            indices.push(b, c, d);\n            groupCount += 3;\n          }\n        }\n      }\n\n      // add a group to the geometry. this will ensure multi material support\n\n      scope.addGroup(groupStart, groupCount, 0);\n\n      // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n    function generateCap(top) {\n      // save the index of the first center vertex\n      const centerIndexStart = index;\n      const uv = new Vector2();\n      const vertex = new Vector3();\n      let groupCount = 0;\n      const radius = top === true ? radiusTop : radiusBottom;\n      const sign = top === true ? 1 : -1;\n\n      // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (let x = 1; x <= radialSegments; x++) {\n        // vertex\n\n        vertices.push(0, halfHeight * sign, 0);\n\n        // normal\n\n        normals.push(0, sign, 0);\n\n        // uv\n\n        uvs.push(0.5, 0.5);\n\n        // increase index\n\n        index++;\n      }\n\n      // save the index of the last center vertex\n      const centerIndexEnd = index;\n\n      // now we generate the surrounding vertices, normals and uvs\n\n      for (let x = 0; x <= radialSegments; x++) {\n        const u = x / radialSegments;\n        const theta = u * thetaLength + thetaStart;\n        const cosTheta = Math.cos(theta);\n        const sinTheta = Math.sin(theta);\n\n        // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        normals.push(0, sign, 0);\n\n        // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y);\n\n        // increase index\n\n        index++;\n      }\n\n      // generate indices\n\n      for (let x = 0; x < radialSegments; x++) {\n        const c = centerIndexStart + x;\n        const i = centerIndexEnd + x;\n        if (top === true) {\n          // face top\n\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n\n          indices.push(i + 1, i, c);\n        }\n        groupCount += 3;\n      }\n\n      // add a group to the geometry. this will ensure multi material support\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2);\n\n      // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n  }\n}\nclass ConeGeometry extends CylinderGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 32;\n    let heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let openEnded = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    let thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI * 2;\n    super(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n  static fromJSON(data) {\n    return new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n  }\n}\nclass PolyhedronGeometry extends BufferGeometry {\n  constructor() {\n    let vertices = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let indices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let detail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    super();\n    this.type = 'PolyhedronGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n\n    // default buffer data\n\n    const vertexBuffer = [];\n    const uvBuffer = [];\n\n    // the subdivision creates the vertex buffer data\n\n    subdivide(detail);\n\n    // all vertices should lie on a conceptual sphere with a given radius\n\n    applyRadius(radius);\n\n    // finally, create the uv data\n\n    generateUVs();\n\n    // build non-indexed geometry\n\n    this.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n    if (detail === 0) {\n      this.computeVertexNormals(); // flat normals\n    } else {\n      this.normalizeNormals(); // smooth normals\n    }\n\n    // helper functions\n\n    function subdivide(detail) {\n      const a = new Vector3();\n      const b = new Vector3();\n      const c = new Vector3();\n\n      // iterate over all faces and apply a subdivision with the given detail value\n\n      for (let i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c);\n\n        // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n    function subdivideFace(a, b, c, detail) {\n      const cols = detail + 1;\n\n      // we use this multidimensional array as a data structure for creating the subdivision\n\n      const v = [];\n\n      // construct all of the vertices for this subdivision\n\n      for (let i = 0; i <= cols; i++) {\n        v[i] = [];\n        const aj = a.clone().lerp(c, i / cols);\n        const bj = b.clone().lerp(c, i / cols);\n        const rows = cols - i;\n        for (let j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      }\n\n      // construct all of the faces\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < 2 * (cols - i) - 1; j++) {\n          const k = Math.floor(j / 2);\n          if (j % 2 === 0) {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k]);\n            pushVertex(v[i][k]);\n          } else {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k + 1]);\n            pushVertex(v[i + 1][k]);\n          }\n        }\n      }\n    }\n    function applyRadius(radius) {\n      const vertex = new Vector3();\n\n      // iterate over the entire buffer and apply the radius to each vertex\n\n      for (let i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n    function generateUVs() {\n      const vertex = new Vector3();\n      for (let i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        const u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        const v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n      correctUVs();\n      correctSeam();\n    }\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n\n      for (let i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n\n        const x0 = uvBuffer[i + 0];\n        const x1 = uvBuffer[i + 2];\n        const x2 = uvBuffer[i + 4];\n        const max = Math.max(x0, x1, x2);\n        const min = Math.min(x0, x1, x2);\n\n        // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[i + 0] += 1;\n          if (x1 < 0.2) uvBuffer[i + 2] += 1;\n          if (x2 < 0.2) uvBuffer[i + 4] += 1;\n        }\n      }\n    }\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n    function getVertexByIndex(index, vertex) {\n      const stride = index * 3;\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n    function correctUVs() {\n      const a = new Vector3();\n      const b = new Vector3();\n      const c = new Vector3();\n      const centroid = new Vector3();\n      const uvA = new Vector2();\n      const uvB = new Vector2();\n      const uvC = new Vector2();\n      for (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        const azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    }\n\n    // Angle around the Y axis, counter-clockwise when looking from above.\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    }\n\n    // Angle above the XZ plane.\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new PolyhedronGeometry(data.vertices, data.indices, data.radius, data.details);\n  }\n}\nclass DodecahedronGeometry extends PolyhedronGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const t = (1 + Math.sqrt(5)) / 2;\n    const r = 1 / t;\n    const vertices = [\n    // (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1,\n    // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t,\n    // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0,\n    // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    const indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    super(vertices, indices, radius, detail);\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n  static fromJSON(data) {\n    return new DodecahedronGeometry(data.radius, data.detail);\n  }\n}\nconst _v0 = /*@__PURE__*/new Vector3();\nconst _v1$1 = /*@__PURE__*/new Vector3();\nconst _normal = /*@__PURE__*/new Vector3();\nconst _triangle = /*@__PURE__*/new Triangle();\nclass EdgesGeometry extends BufferGeometry {\n  constructor() {\n    let geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let thresholdAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    super();\n    this.type = 'EdgesGeometry';\n    this.parameters = {\n      geometry: geometry,\n      thresholdAngle: thresholdAngle\n    };\n    if (geometry !== null) {\n      const precisionPoints = 4;\n      const precision = Math.pow(10, precisionPoints);\n      const thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n      const indexAttr = geometry.getIndex();\n      const positionAttr = geometry.getAttribute('position');\n      const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n      const indexArr = [0, 0, 0];\n      const vertKeys = ['a', 'b', 'c'];\n      const hashes = new Array(3);\n      const edgeData = {};\n      const vertices = [];\n      for (let i = 0; i < indexCount; i += 3) {\n        if (indexAttr) {\n          indexArr[0] = indexAttr.getX(i);\n          indexArr[1] = indexAttr.getX(i + 1);\n          indexArr[2] = indexAttr.getX(i + 2);\n        } else {\n          indexArr[0] = i;\n          indexArr[1] = i + 1;\n          indexArr[2] = i + 2;\n        }\n        const {\n          a,\n          b,\n          c\n        } = _triangle;\n        a.fromBufferAttribute(positionAttr, indexArr[0]);\n        b.fromBufferAttribute(positionAttr, indexArr[1]);\n        c.fromBufferAttribute(positionAttr, indexArr[2]);\n        _triangle.getNormal(_normal);\n\n        // create hashes for the edge from the vertices\n        hashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n        hashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n        hashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`;\n\n        // skip degenerate triangles\n        if (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n          continue;\n        }\n\n        // iterate over every edge\n        for (let j = 0; j < 3; j++) {\n          // get the first and next vertex making up the edge\n          const jNext = (j + 1) % 3;\n          const vecHash0 = hashes[j];\n          const vecHash1 = hashes[jNext];\n          const v0 = _triangle[vertKeys[j]];\n          const v1 = _triangle[vertKeys[jNext]];\n          const hash = `${vecHash0}_${vecHash1}`;\n          const reverseHash = `${vecHash1}_${vecHash0}`;\n          if (reverseHash in edgeData && edgeData[reverseHash]) {\n            // if we found a sibling edge add it into the vertex array if\n            // it meets the angle threshold and delete the edge from the map.\n            if (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n              vertices.push(v0.x, v0.y, v0.z);\n              vertices.push(v1.x, v1.y, v1.z);\n            }\n            edgeData[reverseHash] = null;\n          } else if (!(hash in edgeData)) {\n            // if we've already got an edge here then skip adding a new one\n            edgeData[hash] = {\n              index0: indexArr[j],\n              index1: indexArr[jNext],\n              normal: _normal.clone()\n            };\n          }\n        }\n      }\n\n      // iterate over all remaining, unmatched edges and add them to the vertex array\n      for (const key in edgeData) {\n        if (edgeData[key]) {\n          const {\n            index0,\n            index1\n          } = edgeData[key];\n          _v0.fromBufferAttribute(positionAttr, index0);\n          _v1$1.fromBufferAttribute(positionAttr, index1);\n          vertices.push(_v0.x, _v0.y, _v0.z);\n          vertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n        }\n      }\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n}\nclass Shape extends Path {\n  constructor(points) {\n    super(points);\n    this.uuid = generateUUID();\n    this.type = 'Shape';\n    this.holes = [];\n  }\n  getPointsHoles(divisions) {\n    const holesPts = [];\n    for (let i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n    return holesPts;\n  }\n\n  // get points of shape and holes (keypoints based on segments parameter)\n\n  extractPoints(divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  }\n  copy(source) {\n    super.copy(source);\n    this.holes = [];\n    for (let i = 0, l = source.holes.length; i < l; i++) {\n      const hole = source.holes[i];\n      this.holes.push(hole.clone());\n    }\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.uuid = this.uuid;\n    data.holes = [];\n    for (let i = 0, l = this.holes.length; i < l; i++) {\n      const hole = this.holes[i];\n      data.holes.push(hole.toJSON());\n    }\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.uuid = json.uuid;\n    this.holes = [];\n    for (let i = 0, l = json.holes.length; i < l; i++) {\n      const hole = json.holes[i];\n      this.holes.push(new Path().fromJSON(hole));\n    }\n    return this;\n  }\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n  triangulate: function (data, holeIndices) {\n    let dim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n    let outerNode = linkedList(data, 0, outerLen, dim, true);\n    const triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n    let minX, minY, maxX, maxY, x, y, invSize;\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n      minX = maxX = data[0];\n      minY = maxY = data[1];\n      for (let i = dim; i < outerLen; i += dim) {\n        x = data[i];\n        y = data[i + 1];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n      }\n\n      // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n      invSize = Math.max(maxX - minX, maxY - minY);\n      invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n    return triangles;\n  }\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n  let i, last;\n  if (clockwise === signedArea(data, start, end, dim) > 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n  }\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n  return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  let p = start,\n    again;\n  do {\n    again = false;\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n  return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return;\n\n  // interlink polygon nodes in z-order\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n  let stop = ear,\n    prev,\n    next;\n\n  // iterate through ears, slicing them one by one\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim | 0);\n      triangles.push(ear.i / dim | 0);\n      triangles.push(next.i / dim | 0);\n      removeNode(ear);\n\n      // skipping the next vertex leads to less sliver triangles\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n    ear = next;\n\n    // if we looped through the whole remaining polygon and can't find any more ears\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n        // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n        // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n      break;\n    }\n  }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n  const a = ear.prev,\n    b = ear,\n    c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  // now make sure we don't have other points inside the potential ear\n  const ax = a.x,\n    bx = b.x,\n    cx = c.x,\n    ay = a.y,\n    by = b.y,\n    cy = c.y;\n\n  // triangle bbox; min & max are calculated like this for speed\n  const x0 = ax < bx ? ax < cx ? ax : cx : bx < cx ? bx : cx,\n    y0 = ay < by ? ay < cy ? ay : cy : by < cy ? by : cy,\n    x1 = ax > bx ? ax > cx ? ax : cx : bx > cx ? bx : cx,\n    y1 = ay > by ? ay > cy ? ay : cy : by > cy ? by : cy;\n  let p = c.next;\n  while (p !== a) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.next;\n  }\n  return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n  const a = ear.prev,\n    b = ear,\n    c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  const ax = a.x,\n    bx = b.x,\n    cx = c.x,\n    ay = a.y,\n    by = b.y,\n    cy = c.y;\n\n  // triangle bbox; min & max are calculated like this for speed\n  const x0 = ax < bx ? ax < cx ? ax : cx : bx < cx ? bx : cx,\n    y0 = ay < by ? ay < cy ? ay : cy : by < cy ? by : cy,\n    x1 = ax > bx ? ax > cx ? ax : cx : bx > cx ? bx : cx,\n    y1 = ay > by ? ay > cy ? ay : cy : by > cy ? by : cy;\n\n  // z-order range for the current triangle bbox;\n  const minZ = zOrder(x0, y0, minX, minY, invSize),\n    maxZ = zOrder(x1, y1, minX, minY, invSize);\n  let p = ear.prevZ,\n    n = ear.nextZ;\n\n  // look for points inside the triangle in both directions\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n    if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c && pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  // look for remaining points in decreasing z-order\n  while (p && p.z >= minZ) {\n    if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c && pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  }\n\n  // look for remaining points in increasing z-order\n  while (n && n.z <= maxZ) {\n    if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c && pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n  return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n  let p = start;\n  do {\n    const a = p.prev,\n      b = p.next.next;\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim | 0);\n      triangles.push(p.i / dim | 0);\n      triangles.push(b.i / dim | 0);\n\n      // remove two nodes involved\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n    p = p.next;\n  } while (p !== start);\n  return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  // look for a valid diagonal that divides the polygon into two\n  let a = start;\n  do {\n    let b = a.next.next;\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        let c = splitPolygon(a, b);\n\n        // filter colinear points around the cuts\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next);\n\n        // run earcut on each half\n        earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n        earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n        return;\n      }\n      b = b.next;\n    }\n    a = a.next;\n  } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n  const queue = [];\n  let i, len, start, end, list;\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n  queue.sort(compareX);\n\n  // process holes from left to right\n  for (i = 0; i < queue.length; i++) {\n    outerNode = eliminateHole(queue[i], outerNode);\n  }\n  return outerNode;\n}\nfunction compareX(a, b) {\n  return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole(hole, outerNode) {\n  const bridge = findHoleBridge(hole, outerNode);\n  if (!bridge) {\n    return outerNode;\n  }\n  const bridgeReverse = splitPolygon(bridge, hole);\n\n  // filter collinear points around the cuts\n  filterPoints(bridgeReverse, bridgeReverse.next);\n  return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n  let p = outerNode,\n    qx = -Infinity,\n    m;\n  const hx = hole.x,\n    hy = hole.y;\n\n  // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n      if (x <= hx && x > qx) {\n        qx = x;\n        m = p.x < p.next.x ? p : p.next;\n        if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n      }\n    }\n    p = p.next;\n  } while (p !== outerNode);\n  if (!m) return null;\n\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  const stop = m,\n    mx = m.x,\n    my = m.y;\n  let tanMin = Infinity,\n    tan;\n  p = m;\n  do {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n    p = p.next;\n  } while (p !== stop);\n  return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n  let p = start;\n  do {\n    if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n  let i,\n    p,\n    q,\n    e,\n    tail,\n    numMerges,\n    pSize,\n    qSize,\n    inSize = 1;\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n      qSize = inSize;\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n      p = q;\n    }\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n  return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = (x - minX) * invSize | 0;\n  y = (y - minY) * invSize | 0;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n  let p = start,\n    leftmost = start;\n  do {\n    if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n  return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) >= (ax - px) * (cy - py) && (ax - px) * (by - py) >= (bx - px) * (ay - py) && (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (\n  // dones't intersect other edges\n  locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (\n  // locally visible\n  area(a.prev, a, b.prev) || area(a, b.prev, b)) ||\n  // does not create opposite-facing sectors\n  equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n  const o1 = sign(area(p1, q1, p2));\n  const o2 = sign(area(p1, q1, q2));\n  const o3 = sign(area(p2, q2, p1));\n  const o4 = sign(area(p2, q2, q1));\n  if (o1 !== o2 && o3 !== o4) return true; // general case\n\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n  return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n  return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n  let p = a;\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n    p = p.next;\n  } while (p !== a);\n  return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n  let p = a,\n    inside = false;\n  const px = (a.x + b.x) / 2,\n    py = (a.y + b.y) / 2;\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n    p = p.next;\n  } while (p !== a);\n  return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n  const a2 = new Node(a.i, a.x, a.y),\n    b2 = new Node(b.i, b.x, b.y),\n    an = a.next,\n    bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n  const p = new Node(i, x, y);\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n  return p;\n}\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\nfunction Node(i, x, y) {\n  // vertex index in coordinates array\n  this.i = i;\n\n  // vertex coordinates\n  this.x = x;\n  this.y = y;\n\n  // previous and next vertex nodes in a polygon ring\n  this.prev = null;\n  this.next = null;\n\n  // z-order curve value\n  this.z = 0;\n\n  // previous and next nodes in z-order\n  this.prevZ = null;\n  this.nextZ = null;\n\n  // indicates whether this is a steiner point\n  this.steiner = false;\n}\nfunction signedArea(data, start, end, dim) {\n  let sum = 0;\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n    j = i;\n  }\n  return sum;\n}\nclass ShapeUtils {\n  // calculate area of the contour polygon\n\n  static area(contour) {\n    const n = contour.length;\n    let a = 0.0;\n    for (let p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n    return a * 0.5;\n  }\n  static isClockWise(pts) {\n    return ShapeUtils.area(pts) < 0;\n  }\n  static triangulateShape(contour, holes) {\n    const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n    const holeIndices = []; // array of hole indices\n    const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n    removeDupEndPts(contour);\n    addContour(vertices, contour);\n\n    //\n\n    let holeIndex = contour.length;\n    holes.forEach(removeDupEndPts);\n    for (let i = 0; i < holes.length; i++) {\n      holeIndices.push(holeIndex);\n      holeIndex += holes[i].length;\n      addContour(vertices, holes[i]);\n    }\n\n    //\n\n    const triangles = Earcut.triangulate(vertices, holeIndices);\n\n    //\n\n    for (let i = 0; i < triangles.length; i += 3) {\n      faces.push(triangles.slice(i, i + 3));\n    }\n    return faces;\n  }\n}\nfunction removeDupEndPts(points) {\n  const l = points.length;\n  if (l > 2 && points[l - 1].equals(points[0])) {\n    points.pop();\n  }\n}\nfunction addContour(vertices, contour) {\n  for (let i = 0; i < contour.length; i++) {\n    vertices.push(contour[i].x);\n    vertices.push(contour[i].y);\n  }\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n  constructor() {\n    let shapes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Shape([new Vector2(0.5, 0.5), new Vector2(-0.5, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]);\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this.type = 'ExtrudeGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n    const scope = this;\n    const verticesArray = [];\n    const uvArray = [];\n    for (let i = 0, l = shapes.length; i < l; i++) {\n      const shape = shapes[i];\n      addShape(shape);\n    }\n\n    // build geometry\n\n    this.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n    this.computeVertexNormals();\n\n    // functions\n\n    function addShape(shape) {\n      const placeholder = [];\n\n      // options\n\n      const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n      const steps = options.steps !== undefined ? options.steps : 1;\n      const depth = options.depth !== undefined ? options.depth : 1;\n      let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n      let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n      let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n      let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n      let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n      const extrudePath = options.extrudePath;\n      const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n      //\n\n      let extrudePts,\n        extrudeByPath = false;\n      let splineTube, binormal, normal, position2;\n      if (extrudePath) {\n        extrudePts = extrudePath.getSpacedPoints(steps);\n        extrudeByPath = true;\n        bevelEnabled = false; // bevels not supported for path extrusion\n\n        // SETUP TNB variables\n\n        // TODO1 - have a .isClosed in spline?\n\n        splineTube = extrudePath.computeFrenetFrames(steps, false);\n\n        // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n        binormal = new Vector3();\n        normal = new Vector3();\n        position2 = new Vector3();\n      }\n\n      // Safeguards if bevels are not enabled\n\n      if (!bevelEnabled) {\n        bevelSegments = 0;\n        bevelThickness = 0;\n        bevelSize = 0;\n        bevelOffset = 0;\n      }\n\n      // Variables initialization\n\n      const shapePoints = shape.extractPoints(curveSegments);\n      let vertices = shapePoints.shape;\n      const holes = shapePoints.holes;\n      const reverse = !ShapeUtils.isClockWise(vertices);\n      if (reverse) {\n        vertices = vertices.reverse();\n\n        // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          if (ShapeUtils.isClockWise(ahole)) {\n            holes[h] = ahole.reverse();\n          }\n        }\n      }\n      const faces = ShapeUtils.triangulateShape(vertices, holes);\n\n      /* Vertices */\n\n      const contour = vertices; // vertices has all points but contour has only points of circumference\n\n      for (let h = 0, hl = holes.length; h < hl; h++) {\n        const ahole = holes[h];\n        vertices = vertices.concat(ahole);\n      }\n      function scalePt2(pt, vec, size) {\n        if (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n        return pt.clone().addScaledVector(vec, size);\n      }\n      const vlen = vertices.length,\n        flen = faces.length;\n\n      // Find directions for point movement\n\n      function getBevelVec(inPt, inPrev, inNext) {\n        // computes for inPt the corresponding point inPt' on a new contour\n        //   shifted by 1 unit (length of normalized vector) to the left\n        // if we walk along contour clockwise, this new contour is outside the old one\n        //\n        // inPt' is the intersection of the two lines parallel to the two\n        //  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n        let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n        // good reading for geometry algorithms (here: line-line intersection)\n        // http://geomalgorithms.com/a05-_intersect-1.html\n\n        const v_prev_x = inPt.x - inPrev.x,\n          v_prev_y = inPt.y - inPrev.y;\n        const v_next_x = inNext.x - inPt.x,\n          v_next_y = inNext.y - inPt.y;\n        const v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y;\n\n        // check for collinear edges\n        const collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n        if (Math.abs(collinear0) > Number.EPSILON) {\n          // not collinear\n\n          // length of vectors for normalizing\n\n          const v_prev_len = Math.sqrt(v_prev_lensq);\n          const v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y);\n\n          // shift adjacent points by unit vectors to the left\n\n          const ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n          const ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n          const ptNextShift_x = inNext.x - v_next_y / v_next_len;\n          const ptNextShift_y = inNext.y + v_next_x / v_next_len;\n\n          // scaling factor for v_prev to intersection point\n\n          const sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x);\n\n          // vector from inPt to intersection point\n\n          v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n          v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y;\n\n          // Don't normalize!, otherwise sharp corners become ugly\n          //  but prevent crazy spikes\n          const v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n          if (v_trans_lensq <= 2) {\n            return new Vector2(v_trans_x, v_trans_y);\n          } else {\n            shrink_by = Math.sqrt(v_trans_lensq / 2);\n          }\n        } else {\n          // handle special case of collinear edges\n\n          let direction_eq = false; // assumes: opposite\n\n          if (v_prev_x > Number.EPSILON) {\n            if (v_next_x > Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (v_prev_x < -Number.EPSILON) {\n              if (v_next_x < -Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                direction_eq = true;\n              }\n            }\n          }\n          if (direction_eq) {\n            // console.log(\"Warning: lines are a straight sequence\");\n            v_trans_x = -v_prev_y;\n            v_trans_y = v_prev_x;\n            shrink_by = Math.sqrt(v_prev_lensq);\n          } else {\n            // console.log(\"Warning: lines are a straight spike\");\n            v_trans_x = v_prev_x;\n            v_trans_y = v_prev_y;\n            shrink_by = Math.sqrt(v_prev_lensq / 2);\n          }\n        }\n        return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n      }\n      const contourMovements = [];\n      for (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0;\n\n        //  (j)---(i)---(k)\n        // console.log('i,j,k', i, j , k)\n\n        contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n      }\n      const holesMovements = [];\n      let oneHoleMovements,\n        verticesMovements = contourMovements.concat();\n      for (let h = 0, hl = holes.length; h < hl; h++) {\n        const ahole = holes[h];\n        oneHoleMovements = [];\n        for (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n          if (j === il) j = 0;\n          if (k === il) k = 0;\n\n          //  (j)---(i)---(k)\n          oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n        }\n        holesMovements.push(oneHoleMovements);\n        verticesMovements = verticesMovements.concat(oneHoleMovements);\n      }\n\n      // Loop bevelSegments, 1 for the front, 1 for the back\n\n      for (let b = 0; b < bevelSegments; b++) {\n        //for ( b = bevelSegments; b > 0; b -- ) {\n\n        const t = b / bevelSegments;\n        const z = bevelThickness * Math.cos(t * Math.PI / 2);\n        const bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset;\n\n        // contract shape\n\n        for (let i = 0, il = contour.length; i < il; i++) {\n          const vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        }\n\n        // expand holes\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n          for (let i = 0, il = ahole.length; i < il; i++) {\n            const vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n            v(vert.x, vert.y, -z);\n          }\n        }\n      }\n      const bs = bevelSize + bevelOffset;\n\n      // Back facing vertices\n\n      for (let i = 0; i < vlen; i++) {\n        const vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, 0);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n          normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[0]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      }\n\n      // Add stepped vertices...\n      // Including front facing vertices\n\n      for (let s = 1; s <= steps; s++) {\n        for (let i = 0; i < vlen; i++) {\n          const vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, depth / steps * s);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n            normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n            binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n            position2.copy(extrudePts[s]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        }\n      }\n\n      // Add bevel segments planes\n\n      //for ( b = 1; b <= bevelSegments; b ++ ) {\n      for (let b = bevelSegments - 1; b >= 0; b--) {\n        const t = b / bevelSegments;\n        const z = bevelThickness * Math.cos(t * Math.PI / 2);\n        const bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset;\n\n        // contract shape\n\n        for (let i = 0, il = contour.length; i < il; i++) {\n          const vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, depth + z);\n        }\n\n        // expand holes\n\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n          for (let i = 0, il = ahole.length; i < il; i++) {\n            const vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n            if (!extrudeByPath) {\n              v(vert.x, vert.y, depth + z);\n            } else {\n              v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n            }\n          }\n        }\n      }\n\n      /* Faces */\n\n      // Top and bottom faces\n\n      buildLidFaces();\n\n      // Sides faces\n\n      buildSideFaces();\n\n      /////  Internal functions\n\n      function buildLidFaces() {\n        const start = verticesArray.length / 3;\n        if (bevelEnabled) {\n          let layer = 0; // steps + 1\n          let offset = vlen * layer;\n\n          // Bottom faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[2] + offset, face[1] + offset, face[0] + offset);\n          }\n          layer = steps + bevelSegments * 2;\n          offset = vlen * layer;\n\n          // Top faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[0] + offset, face[1] + offset, face[2] + offset);\n          }\n        } else {\n          // Bottom faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[2], face[1], face[0]);\n          }\n\n          // Top faces\n\n          for (let i = 0; i < flen; i++) {\n            const face = faces[i];\n            f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n          }\n        }\n        scope.addGroup(start, verticesArray.length / 3 - start, 0);\n      }\n\n      // Create faces for the z-sides of the shape\n\n      function buildSideFaces() {\n        const start = verticesArray.length / 3;\n        let layeroffset = 0;\n        sidewalls(contour, layeroffset);\n        layeroffset += contour.length;\n        for (let h = 0, hl = holes.length; h < hl; h++) {\n          const ahole = holes[h];\n          sidewalls(ahole, layeroffset);\n\n          //, true\n          layeroffset += ahole.length;\n        }\n        scope.addGroup(start, verticesArray.length / 3 - start, 1);\n      }\n      function sidewalls(contour, layeroffset) {\n        let i = contour.length;\n        while (--i >= 0) {\n          const j = i;\n          let k = i - 1;\n          if (k < 0) k = contour.length - 1;\n\n          //console.log('b', i,j, i-1, k,vertices.length);\n\n          for (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n            const slen1 = vlen * s;\n            const slen2 = vlen * (s + 1);\n            const a = layeroffset + j + slen1,\n              b = layeroffset + k + slen1,\n              c = layeroffset + k + slen2,\n              d = layeroffset + j + slen2;\n            f4(a, b, c, d);\n          }\n        }\n      }\n      function v(x, y, z) {\n        placeholder.push(x);\n        placeholder.push(y);\n        placeholder.push(z);\n      }\n      function f3(a, b, c) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(c);\n        const nextIndex = verticesArray.length / 3;\n        const uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n      }\n      function f4(a, b, c, d) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(d);\n        addVertex(b);\n        addVertex(c);\n        addVertex(d);\n        const nextIndex = verticesArray.length / 3;\n        const uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[3]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n        addUV(uvs[3]);\n      }\n      function addVertex(index) {\n        verticesArray.push(placeholder[index * 3 + 0]);\n        verticesArray.push(placeholder[index * 3 + 1]);\n        verticesArray.push(placeholder[index * 3 + 2]);\n      }\n      function addUV(vector2) {\n        uvArray.push(vector2.x);\n        uvArray.push(vector2.y);\n      }\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    const shapes = this.parameters.shapes;\n    const options = this.parameters.options;\n    return toJSON$1(shapes, options, data);\n  }\n  static fromJSON(data, shapes) {\n    const geometryShapes = [];\n    for (let j = 0, jl = data.shapes.length; j < jl; j++) {\n      const shape = shapes[data.shapes[j]];\n      geometryShapes.push(shape);\n    }\n    const extrudePath = data.options.extrudePath;\n    if (extrudePath !== undefined) {\n      data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n    }\n    return new ExtrudeGeometry(geometryShapes, data.options);\n  }\n}\nconst WorldUVGenerator = {\n  generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n    const a_x = vertices[indexA * 3];\n    const a_y = vertices[indexA * 3 + 1];\n    const b_x = vertices[indexB * 3];\n    const b_y = vertices[indexB * 3 + 1];\n    const c_x = vertices[indexC * 3];\n    const c_y = vertices[indexC * 3 + 1];\n    return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n  },\n  generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n    const a_x = vertices[indexA * 3];\n    const a_y = vertices[indexA * 3 + 1];\n    const a_z = vertices[indexA * 3 + 2];\n    const b_x = vertices[indexB * 3];\n    const b_y = vertices[indexB * 3 + 1];\n    const b_z = vertices[indexB * 3 + 2];\n    const c_x = vertices[indexC * 3];\n    const c_y = vertices[indexC * 3 + 1];\n    const c_z = vertices[indexC * 3 + 2];\n    const d_x = vertices[indexD * 3];\n    const d_y = vertices[indexD * 3 + 1];\n    const d_z = vertices[indexD * 3 + 2];\n    if (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n      return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n    } else {\n      return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n    }\n  }\n};\nfunction toJSON$1(shapes, options, data) {\n  data.shapes = [];\n  if (Array.isArray(shapes)) {\n    for (let i = 0, l = shapes.length; i < l; i++) {\n      const shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n  data.options = Object.assign({}, options);\n  if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n  return data;\n}\nclass IcosahedronGeometry extends PolyhedronGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const t = (1 + Math.sqrt(5)) / 2;\n    const vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    const indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    super(vertices, indices, radius, detail);\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n  static fromJSON(data) {\n    return new IcosahedronGeometry(data.radius, data.detail);\n  }\n}\nclass OctahedronGeometry extends PolyhedronGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    const indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    super(vertices, indices, radius, detail);\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n  static fromJSON(data) {\n    return new OctahedronGeometry(data.radius, data.detail);\n  }\n}\nclass PlaneGeometry extends BufferGeometry {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let widthSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    super();\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    const width_half = width / 2;\n    const height_half = height / 2;\n    const gridX = Math.floor(widthSegments);\n    const gridY = Math.floor(heightSegments);\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segment_width = width / gridX;\n    const segment_height = height / gridY;\n\n    //\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    for (let iy = 0; iy < gridY1; iy++) {\n      const y = iy * segment_height - height_half;\n      for (let ix = 0; ix < gridX1; ix++) {\n        const x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    }\n    for (let iy = 0; iy < gridY; iy++) {\n      for (let ix = 0; ix < gridX; ix++) {\n        const a = ix + gridX1 * iy;\n        const b = ix + gridX1 * (iy + 1);\n        const c = ix + 1 + gridX1 * (iy + 1);\n        const d = ix + 1 + gridX1 * iy;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n  }\n}\nclass RingGeometry extends BufferGeometry {\n  constructor() {\n    let innerRadius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n    let outerRadius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let thetaSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 32;\n    let phiSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let thetaStart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    let thetaLength = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n    super();\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    thetaSegments = Math.max(3, thetaSegments);\n    phiSegments = Math.max(1, phiSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // some helper variables\n\n    let radius = innerRadius;\n    const radiusStep = (outerRadius - innerRadius) / phiSegments;\n    const vertex = new Vector3();\n    const uv = new Vector2();\n\n    // generate vertices, normals and uvs\n\n    for (let j = 0; j <= phiSegments; j++) {\n      for (let i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n\n        const segment = thetaStart + i / thetaSegments * thetaLength;\n\n        // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        normals.push(0, 0, 1);\n\n        // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      }\n\n      // increase the radius for next row of vertices\n\n      radius += radiusStep;\n    }\n\n    // indices\n\n    for (let j = 0; j < phiSegments; j++) {\n      const thetaSegmentLevel = j * (thetaSegments + 1);\n      for (let i = 0; i < thetaSegments; i++) {\n        const segment = i + thetaSegmentLevel;\n        const a = segment;\n        const b = segment + thetaSegments + 1;\n        const c = segment + thetaSegments + 2;\n        const d = segment + 1;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n  }\n}\nclass ShapeGeometry extends BufferGeometry {\n  constructor() {\n    let shapes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Shape([new Vector2(0, 0.5), new Vector2(-0.5, -0.5), new Vector2(0.5, -0.5)]);\n    let curveSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    super();\n    this.type = 'ShapeGeometry';\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    let groupStart = 0;\n    let groupCount = 0;\n\n    // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (let i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n        this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    // helper functions\n\n    function addShape(shape) {\n      const indexOffset = vertices.length / 3;\n      const points = shape.extractPoints(curveSegments);\n      let shapeVertices = points.shape;\n      const shapeHoles = points.holes;\n\n      // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse();\n      }\n      for (let i = 0, l = shapeHoles.length; i < l; i++) {\n        const shapeHole = shapeHoles[i];\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[i] = shapeHole.reverse();\n        }\n      }\n      const faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles);\n\n      // join vertices of inner and outer paths to a single array\n\n      for (let i = 0, l = shapeHoles.length; i < l; i++) {\n        const shapeHole = shapeHoles[i];\n        shapeVertices = shapeVertices.concat(shapeHole);\n      }\n\n      // vertices, normals, uvs\n\n      for (let i = 0, l = shapeVertices.length; i < l; i++) {\n        const vertex = shapeVertices[i];\n        vertices.push(vertex.x, vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(vertex.x, vertex.y); // world uvs\n      }\n\n      // indices\n\n      for (let i = 0, l = faces.length; i < l; i++) {\n        const face = faces[i];\n        const a = face[0] + indexOffset;\n        const b = face[1] + indexOffset;\n        const c = face[2] + indexOffset;\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    const shapes = this.parameters.shapes;\n    return toJSON(shapes, data);\n  }\n  static fromJSON(data, shapes) {\n    const geometryShapes = [];\n    for (let j = 0, jl = data.shapes.length; j < jl; j++) {\n      const shape = shapes[data.shapes[j]];\n      geometryShapes.push(shape);\n    }\n    return new ShapeGeometry(geometryShapes, data.curveSegments);\n  }\n}\nfunction toJSON(shapes, data) {\n  data.shapes = [];\n  if (Array.isArray(shapes)) {\n    for (let i = 0, l = shapes.length; i < l; i++) {\n      const shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n  return data;\n}\nclass SphereGeometry extends BufferGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let widthSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n    let heightSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16;\n    let phiStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let phiLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Math.PI * 2;\n    let thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    let thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI;\n    super();\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    widthSegments = Math.max(3, Math.floor(widthSegments));\n    heightSegments = Math.max(2, Math.floor(heightSegments));\n    const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n    let index = 0;\n    const grid = [];\n    const vertex = new Vector3();\n    const normal = new Vector3();\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // generate vertices, normals and uvs\n\n    for (let iy = 0; iy <= heightSegments; iy++) {\n      const verticesRow = [];\n      const v = iy / heightSegments;\n\n      // special case for the poles\n\n      let uOffset = 0;\n      if (iy === 0 && thetaStart === 0) {\n        uOffset = 0.5 / widthSegments;\n      } else if (iy === heightSegments && thetaEnd === Math.PI) {\n        uOffset = -0.5 / widthSegments;\n      }\n      for (let ix = 0; ix <= widthSegments; ix++) {\n        const u = ix / widthSegments;\n\n        // vertex\n\n        vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        normal.copy(vertex).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n\n        // uv\n\n        uvs.push(u + uOffset, 1 - v);\n        verticesRow.push(index++);\n      }\n      grid.push(verticesRow);\n    }\n\n    // indices\n\n    for (let iy = 0; iy < heightSegments; iy++) {\n      for (let ix = 0; ix < widthSegments; ix++) {\n        const a = grid[iy][ix + 1];\n        const b = grid[iy][ix];\n        const c = grid[iy + 1][ix];\n        const d = grid[iy + 1][ix + 1];\n        if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n        if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n  }\n}\nclass TetrahedronGeometry extends PolyhedronGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    const indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    super(vertices, indices, radius, detail);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n  static fromJSON(data) {\n    return new TetrahedronGeometry(data.radius, data.detail);\n  }\n}\nclass TorusGeometry extends BufferGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let tube = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.4;\n    let radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 12;\n    let tubularSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 48;\n    let arc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Math.PI * 2;\n    super();\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radialSegments = Math.floor(radialSegments);\n    tubularSegments = Math.floor(tubularSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    const center = new Vector3();\n    const vertex = new Vector3();\n    const normal = new Vector3();\n\n    // generate vertices, normals and uvs\n\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = i / tubularSegments * arc;\n        const v = j / radialSegments * Math.PI * 2;\n\n        // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n\n        // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    }\n\n    // generate indices\n\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        // indices\n\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n  }\n}\nclass TorusKnotGeometry extends BufferGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let tube = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.4;\n    let tubularSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 64;\n    let radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    let p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n    let q = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 3;\n    super();\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    tubularSegments = Math.floor(tubularSegments);\n    radialSegments = Math.floor(radialSegments);\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    // helper variables\n\n    const vertex = new Vector3();\n    const normal = new Vector3();\n    const P1 = new Vector3();\n    const P2 = new Vector3();\n    const B = new Vector3();\n    const T = new Vector3();\n    const N = new Vector3();\n\n    // generate vertices, normals and uvs\n\n    for (let i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n      const u = i / tubularSegments * p * Math.PI * 2;\n\n      // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2);\n\n      // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T);\n\n      // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n      for (let j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n        const v = j / radialSegments * Math.PI * 2;\n        const cx = -tube * Math.cos(v);\n        const cy = tube * Math.sin(v);\n\n        // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n\n        // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n\n        // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    }\n\n    // generate indices\n\n    for (let j = 1; j <= tubularSegments; j++) {\n      for (let i = 1; i <= radialSegments; i++) {\n        // indices\n\n        const a = (radialSegments + 1) * (j - 1) + (i - 1);\n        const b = (radialSegments + 1) * j + (i - 1);\n        const c = (radialSegments + 1) * j + i;\n        const d = (radialSegments + 1) * (j - 1) + i;\n\n        // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      const cu = Math.cos(u);\n      const su = Math.sin(u);\n      const quOverP = q / p * u;\n      const cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  static fromJSON(data) {\n    return new TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n  }\n}\nclass TubeGeometry extends BufferGeometry {\n  constructor() {\n    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new QuadraticBezierCurve3(new Vector3(-1, -1, 0), new Vector3(-1, 1, 0), new Vector3(1, 1, 0));\n    let tubularSegments = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n    let radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let radialSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n    let closed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    super();\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    const frames = path.computeFrenetFrames(tubularSegments, closed);\n\n    // expose internals\n\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals;\n\n    // helper variables\n\n    const vertex = new Vector3();\n    const normal = new Vector3();\n    const uv = new Vector2();\n    let P = new Vector3();\n\n    // buffer\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n\n    // create buffer data\n\n    generateBufferData();\n\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    // functions\n\n    function generateBufferData() {\n      for (let i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      }\n\n      // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n      generateSegment(closed === false ? tubularSegments : 0);\n\n      // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs();\n\n      // finally create faces\n\n      generateIndices();\n    }\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n\n      P = path.getPointAt(i / tubularSegments, P);\n\n      // retrieve corresponding normal and binormal\n\n      const N = frames.normals[i];\n      const B = frames.binormals[i];\n\n      // generate normals and vertices for the current segment\n\n      for (let j = 0; j <= radialSegments; j++) {\n        const v = j / radialSegments * Math.PI * 2;\n        const sin = Math.sin(v);\n        const cos = -Math.cos(v);\n\n        // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z);\n\n        // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n    function generateIndices() {\n      for (let j = 1; j <= tubularSegments; j++) {\n        for (let i = 1; i <= radialSegments; i++) {\n          const a = (radialSegments + 1) * (j - 1) + (i - 1);\n          const b = (radialSegments + 1) * j + (i - 1);\n          const c = (radialSegments + 1) * j + i;\n          const d = (radialSegments + 1) * (j - 1) + i;\n\n          // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n    function generateUVs() {\n      for (let i = 0; i <= tubularSegments; i++) {\n        for (let j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.path = this.parameters.path.toJSON();\n    return data;\n  }\n  static fromJSON(data) {\n    // This only works for built-in curves (e.g. CatmullRomCurve3).\n    // User defined curves or instances of CurvePath will not be deserialized.\n    return new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n  }\n}\nclass WireframeGeometry extends BufferGeometry {\n  constructor() {\n    let geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super();\n    this.type = 'WireframeGeometry';\n    this.parameters = {\n      geometry: geometry\n    };\n    if (geometry !== null) {\n      // buffer\n\n      const vertices = [];\n      const edges = new Set();\n\n      // helper variables\n\n      const start = new Vector3();\n      const end = new Vector3();\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n\n        const position = geometry.attributes.position;\n        const indices = geometry.index;\n        let groups = geometry.groups;\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        }\n\n        // create a data structure that contains all edges without duplicates\n\n        for (let o = 0, ol = groups.length; o < ol; ++o) {\n          const group = groups[o];\n          const groupStart = group.start;\n          const groupCount = group.count;\n          for (let i = groupStart, l = groupStart + groupCount; i < l; i += 3) {\n            for (let j = 0; j < 3; j++) {\n              const index1 = indices.getX(i + j);\n              const index2 = indices.getX(i + (j + 1) % 3);\n              start.fromBufferAttribute(position, index1);\n              end.fromBufferAttribute(position, index2);\n              if (isUniqueEdge(start, end, edges) === true) {\n                vertices.push(start.x, start.y, start.z);\n                vertices.push(end.x, end.y, end.z);\n              }\n            }\n          }\n        }\n      } else {\n        // non-indexed BufferGeometry\n\n        const position = geometry.attributes.position;\n        for (let i = 0, l = position.count / 3; i < l; i++) {\n          for (let j = 0; j < 3; j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n            const index1 = 3 * i + j;\n            const index2 = 3 * i + (j + 1) % 3;\n            start.fromBufferAttribute(position, index1);\n            end.fromBufferAttribute(position, index2);\n            if (isUniqueEdge(start, end, edges) === true) {\n              vertices.push(start.x, start.y, start.z);\n              vertices.push(end.x, end.y, end.z);\n            }\n          }\n        }\n      }\n\n      // build geometry\n\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    }\n  }\n  copy(source) {\n    super.copy(source);\n    this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n}\nfunction isUniqueEdge(start, end, edges) {\n  const hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n  const hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n  if (edges.has(hash1) === true || edges.has(hash2) === true) {\n    return false;\n  } else {\n    edges.add(hash1);\n    edges.add(hash2);\n    return true;\n  }\n}\nvar Geometries = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BoxGeometry: BoxGeometry,\n  CapsuleGeometry: CapsuleGeometry,\n  CircleGeometry: CircleGeometry,\n  ConeGeometry: ConeGeometry,\n  CylinderGeometry: CylinderGeometry,\n  DodecahedronGeometry: DodecahedronGeometry,\n  EdgesGeometry: EdgesGeometry,\n  ExtrudeGeometry: ExtrudeGeometry,\n  IcosahedronGeometry: IcosahedronGeometry,\n  LatheGeometry: LatheGeometry,\n  OctahedronGeometry: OctahedronGeometry,\n  PlaneGeometry: PlaneGeometry,\n  PolyhedronGeometry: PolyhedronGeometry,\n  RingGeometry: RingGeometry,\n  ShapeGeometry: ShapeGeometry,\n  SphereGeometry: SphereGeometry,\n  TetrahedronGeometry: TetrahedronGeometry,\n  TorusGeometry: TorusGeometry,\n  TorusKnotGeometry: TorusKnotGeometry,\n  TubeGeometry: TubeGeometry,\n  WireframeGeometry: WireframeGeometry\n});\nclass ShadowMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isShadowMaterial = true;\n    this.type = 'ShadowMaterial';\n    this.color = new Color(0x000000);\n    this.transparent = true;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.fog = source.fog;\n    return this;\n  }\n}\nclass RawShaderMaterial extends ShaderMaterial {\n  constructor(parameters) {\n    super(parameters);\n    this.isRawShaderMaterial = true;\n    this.type = 'RawShaderMaterial';\n  }\n}\nclass MeshStandardMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshStandardMaterial = true;\n    this.type = 'MeshStandardMaterial';\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color = new Color(0xffffff); // diffuse\n    this.roughness = 1.0;\n    this.metalness = 0.0;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapRotation = new Euler();\n    this.envMapIntensity = 1.0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.flatShading = false;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapRotation.copy(source.envMapRotation);\n    this.envMapIntensity = source.envMapIntensity;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.flatShading = source.flatShading;\n    this.fog = source.fog;\n    return this;\n  }\n}\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshPhysicalMaterial = true;\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.anisotropyRotation = 0;\n    this.anisotropyMap = null;\n    this.clearcoatMap = null;\n    this.clearcoatRoughness = 0.0;\n    this.clearcoatRoughnessMap = null;\n    this.clearcoatNormalScale = new Vector2(1, 1);\n    this.clearcoatNormalMap = null;\n    this.ior = 1.5;\n    Object.defineProperty(this, 'reflectivity', {\n      get: function () {\n        return clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n      },\n      set: function (reflectivity) {\n        this.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n      }\n    });\n    this.iridescenceMap = null;\n    this.iridescenceIOR = 1.3;\n    this.iridescenceThicknessRange = [100, 400];\n    this.iridescenceThicknessMap = null;\n    this.sheenColor = new Color(0x000000);\n    this.sheenColorMap = null;\n    this.sheenRoughness = 1.0;\n    this.sheenRoughnessMap = null;\n    this.transmissionMap = null;\n    this.thickness = 0;\n    this.thicknessMap = null;\n    this.attenuationDistance = Infinity;\n    this.attenuationColor = new Color(1, 1, 1);\n    this.specularIntensity = 1.0;\n    this.specularIntensityMap = null;\n    this.specularColor = new Color(1, 1, 1);\n    this.specularColorMap = null;\n    this._anisotropy = 0;\n    this._clearcoat = 0;\n    this._dispersion = 0;\n    this._iridescence = 0;\n    this._sheen = 0.0;\n    this._transmission = 0;\n    this.setValues(parameters);\n  }\n  get anisotropy() {\n    return this._anisotropy;\n  }\n  set anisotropy(value) {\n    if (this._anisotropy > 0 !== value > 0) {\n      this.version++;\n    }\n    this._anisotropy = value;\n  }\n  get clearcoat() {\n    return this._clearcoat;\n  }\n  set clearcoat(value) {\n    if (this._clearcoat > 0 !== value > 0) {\n      this.version++;\n    }\n    this._clearcoat = value;\n  }\n  get iridescence() {\n    return this._iridescence;\n  }\n  set iridescence(value) {\n    if (this._iridescence > 0 !== value > 0) {\n      this.version++;\n    }\n    this._iridescence = value;\n  }\n  get dispersion() {\n    return this._dispersion;\n  }\n  set dispersion(value) {\n    if (this._dispersion > 0 !== value > 0) {\n      this.version++;\n    }\n    this._dispersion = value;\n  }\n  get sheen() {\n    return this._sheen;\n  }\n  set sheen(value) {\n    if (this._sheen > 0 !== value > 0) {\n      this.version++;\n    }\n    this._sheen = value;\n  }\n  get transmission() {\n    return this._transmission;\n  }\n  set transmission(value) {\n    if (this._transmission > 0 !== value > 0) {\n      this.version++;\n    }\n    this._transmission = value;\n  }\n  copy(source) {\n    super.copy(source);\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.anisotropy = source.anisotropy;\n    this.anisotropyRotation = source.anisotropyRotation;\n    this.anisotropyMap = source.anisotropyMap;\n    this.clearcoat = source.clearcoat;\n    this.clearcoatMap = source.clearcoatMap;\n    this.clearcoatRoughness = source.clearcoatRoughness;\n    this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n    this.clearcoatNormalMap = source.clearcoatNormalMap;\n    this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n    this.dispersion = source.dispersion;\n    this.ior = source.ior;\n    this.iridescence = source.iridescence;\n    this.iridescenceMap = source.iridescenceMap;\n    this.iridescenceIOR = source.iridescenceIOR;\n    this.iridescenceThicknessRange = [...source.iridescenceThicknessRange];\n    this.iridescenceThicknessMap = source.iridescenceThicknessMap;\n    this.sheen = source.sheen;\n    this.sheenColor.copy(source.sheenColor);\n    this.sheenColorMap = source.sheenColorMap;\n    this.sheenRoughness = source.sheenRoughness;\n    this.sheenRoughnessMap = source.sheenRoughnessMap;\n    this.transmission = source.transmission;\n    this.transmissionMap = source.transmissionMap;\n    this.thickness = source.thickness;\n    this.thicknessMap = source.thicknessMap;\n    this.attenuationDistance = source.attenuationDistance;\n    this.attenuationColor.copy(source.attenuationColor);\n    this.specularIntensity = source.specularIntensity;\n    this.specularIntensityMap = source.specularIntensityMap;\n    this.specularColor.copy(source.specularColor);\n    this.specularColorMap = source.specularColorMap;\n    return this;\n  }\n}\nclass MeshPhongMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshPhongMaterial = true;\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapRotation = new Euler();\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.flatShading = false;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapRotation.copy(source.envMapRotation);\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.flatShading = source.flatShading;\n    this.fog = source.fog;\n    return this;\n  }\n}\nclass MeshToonMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshToonMaterial = true;\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.gradientMap = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.gradientMap = source.gradientMap;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.fog = source.fog;\n    return this;\n  }\n}\nclass MeshNormalMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshNormalMaterial = true;\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.flatShading = false;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.flatShading = source.flatShading;\n    return this;\n  }\n}\nclass MeshLambertMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshLambertMaterial = true;\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapRotation = new Euler();\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.flatShading = false;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapRotation.copy(source.envMapRotation);\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.flatShading = source.flatShading;\n    this.fog = source.fog;\n    return this;\n  }\n}\nclass MeshDepthMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshDepthMaterial = true;\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = BasicDepthPacking;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.depthPacking = source.depthPacking;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  }\n}\nclass MeshDistanceMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshDistanceMaterial = true;\n    this.type = 'MeshDistanceMaterial';\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    return this;\n  }\n}\nclass MeshMatcapMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshMatcapMaterial = true;\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.type = 'MeshMatcapMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n    this.map = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.flatShading = false;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.color.copy(source.color);\n    this.matcap = source.matcap;\n    this.map = source.map;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.flatShading = source.flatShading;\n    this.fog = source.fog;\n    return this;\n  }\n}\nclass LineDashedMaterial extends LineBasicMaterial {\n  constructor(parameters) {\n    super();\n    this.isLineDashedMaterial = true;\n    this.type = 'LineDashedMaterial';\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  }\n}\n\n// converts an array to a specific type\nfunction convertArray(array, type, forceClone) {\n  if (!array ||\n  // let 'undefined' and 'null' pass\n  !forceClone && array.constructor === type) return array;\n  if (typeof type.BYTES_PER_ELEMENT === 'number') {\n    return new type(array); // create typed array\n  }\n  return Array.prototype.slice.call(array); // create Array\n}\nfunction isTypedArray(object) {\n  return ArrayBuffer.isView(object) && !(object instanceof DataView);\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder(times) {\n  function compareTime(i, j) {\n    return times[i] - times[j];\n  }\n  const n = times.length;\n  const result = new Array(n);\n  for (let i = 0; i !== n; ++i) result[i] = i;\n  result.sort(compareTime);\n  return result;\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray(values, stride, order) {\n  const nValues = values.length;\n  const result = new values.constructor(nValues);\n  for (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n    const srcOffset = order[i] * stride;\n    for (let j = 0; j !== stride; ++j) {\n      result[dstOffset++] = values[srcOffset + j];\n    }\n  }\n  return result;\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON(jsonKeys, times, values, valuePropertyName) {\n  let i = 1,\n    key = jsonKeys[0];\n  while (key !== undefined && key[valuePropertyName] === undefined) {\n    key = jsonKeys[i++];\n  }\n  if (key === undefined) return; // no data\n\n  let value = key[valuePropertyName];\n  if (value === undefined) return; // no data\n\n  if (Array.isArray(value)) {\n    do {\n      value = key[valuePropertyName];\n      if (value !== undefined) {\n        times.push(key.time);\n        values.push.apply(values, value); // push all elements\n      }\n      key = jsonKeys[i++];\n    } while (key !== undefined);\n  } else if (value.toArray !== undefined) {\n    // ...assume THREE.Math-ish\n\n    do {\n      value = key[valuePropertyName];\n      if (value !== undefined) {\n        times.push(key.time);\n        value.toArray(values, values.length);\n      }\n      key = jsonKeys[i++];\n    } while (key !== undefined);\n  } else {\n    // otherwise push as-is\n\n    do {\n      value = key[valuePropertyName];\n      if (value !== undefined) {\n        times.push(key.time);\n        values.push(value);\n      }\n      key = jsonKeys[i++];\n    } while (key !== undefined);\n  }\n}\nfunction subclip(sourceClip, name, startFrame, endFrame) {\n  let fps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 30;\n  const clip = sourceClip.clone();\n  clip.name = name;\n  const tracks = [];\n  for (let i = 0; i < clip.tracks.length; ++i) {\n    const track = clip.tracks[i];\n    const valueSize = track.getValueSize();\n    const times = [];\n    const values = [];\n    for (let j = 0; j < track.times.length; ++j) {\n      const frame = track.times[j] * fps;\n      if (frame < startFrame || frame >= endFrame) continue;\n      times.push(track.times[j]);\n      for (let k = 0; k < valueSize; ++k) {\n        values.push(track.values[j * valueSize + k]);\n      }\n    }\n    if (times.length === 0) continue;\n    track.times = convertArray(times, track.times.constructor);\n    track.values = convertArray(values, track.values.constructor);\n    tracks.push(track);\n  }\n  clip.tracks = tracks;\n\n  // find minimum .times value across all tracks in the trimmed clip\n\n  let minStartTime = Infinity;\n  for (let i = 0; i < clip.tracks.length; ++i) {\n    if (minStartTime > clip.tracks[i].times[0]) {\n      minStartTime = clip.tracks[i].times[0];\n    }\n  }\n\n  // shift all tracks such that clip begins at t=0\n\n  for (let i = 0; i < clip.tracks.length; ++i) {\n    clip.tracks[i].shift(-1 * minStartTime);\n  }\n  clip.resetDuration();\n  return clip;\n}\nfunction makeClipAdditive(targetClip) {\n  let referenceFrame = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let referenceClip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : targetClip;\n  let fps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n  if (fps <= 0) fps = 30;\n  const numTracks = referenceClip.tracks.length;\n  const referenceTime = referenceFrame / fps;\n\n  // Make each track's values relative to the values at the reference frame\n  for (let i = 0; i < numTracks; ++i) {\n    const referenceTrack = referenceClip.tracks[i];\n    const referenceTrackType = referenceTrack.ValueTypeName;\n\n    // Skip this track if it's non-numeric\n    if (referenceTrackType === 'bool' || referenceTrackType === 'string') continue;\n\n    // Find the track in the target clip whose name and type matches the reference track\n    const targetTrack = targetClip.tracks.find(function (track) {\n      return track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n    });\n    if (targetTrack === undefined) continue;\n    let referenceOffset = 0;\n    const referenceValueSize = referenceTrack.getValueSize();\n    if (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n      referenceOffset = referenceValueSize / 3;\n    }\n    let targetOffset = 0;\n    const targetValueSize = targetTrack.getValueSize();\n    if (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n      targetOffset = targetValueSize / 3;\n    }\n    const lastIndex = referenceTrack.times.length - 1;\n    let referenceValue;\n\n    // Find the value to subtract out of the track\n    if (referenceTime <= referenceTrack.times[0]) {\n      // Reference frame is earlier than the first keyframe, so just use the first keyframe\n      const startIndex = referenceOffset;\n      const endIndex = referenceValueSize - referenceOffset;\n      referenceValue = referenceTrack.values.slice(startIndex, endIndex);\n    } else if (referenceTime >= referenceTrack.times[lastIndex]) {\n      // Reference frame is after the last keyframe, so just use the last keyframe\n      const startIndex = lastIndex * referenceValueSize + referenceOffset;\n      const endIndex = startIndex + referenceValueSize - referenceOffset;\n      referenceValue = referenceTrack.values.slice(startIndex, endIndex);\n    } else {\n      // Interpolate to the reference value\n      const interpolant = referenceTrack.createInterpolant();\n      const startIndex = referenceOffset;\n      const endIndex = referenceValueSize - referenceOffset;\n      interpolant.evaluate(referenceTime);\n      referenceValue = interpolant.resultBuffer.slice(startIndex, endIndex);\n    }\n\n    // Conjugate the quaternion\n    if (referenceTrackType === 'quaternion') {\n      const referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n      referenceQuat.toArray(referenceValue);\n    }\n\n    // Subtract the reference value from all of the track values\n\n    const numTimes = targetTrack.times.length;\n    for (let j = 0; j < numTimes; ++j) {\n      const valueStart = j * targetValueSize + targetOffset;\n      if (referenceTrackType === 'quaternion') {\n        // Multiply the conjugate for quaternion track types\n        Quaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n      } else {\n        const valueEnd = targetValueSize - targetOffset * 2;\n\n        // Subtract each value for all other numeric track types\n        for (let k = 0; k < valueEnd; ++k) {\n          targetTrack.values[valueStart + k] -= referenceValue[k];\n        }\n      }\n    }\n  }\n  targetClip.blendMode = AdditiveAnimationBlendMode;\n  return targetClip;\n}\nconst AnimationUtils = {\n  convertArray: convertArray,\n  isTypedArray: isTypedArray,\n  getKeyframeOrder: getKeyframeOrder,\n  sortedArray: sortedArray,\n  flattenJSON: flattenJSON,\n  subclip: subclip,\n  makeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n    this.settings = null;\n    this.DefaultSettings_ = {};\n  }\n  evaluate(t) {\n    const pp = this.parameterPositions;\n    let i1 = this._cachedIndex,\n      t1 = pp[i1],\n      t0 = pp[i1 - 1];\n    validate_interval: {\n      seek: {\n        let right;\n        linear_scan: {\n          //- See http://jsperf.com/comparison-to-undefined/3\n          //- slower code:\n          //-\n          //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n          forward_scan: if (!(t < t1)) {\n            for (let giveUpAt = i1 + 2;;) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan;\n\n                // after end\n\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.copySampleValue_(i1 - 1);\n              }\n              if (i1 === giveUpAt) break; // this loop\n\n              t0 = t1;\n              t1 = pp[++i1];\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            }\n\n            // prepare binary search on the right side of the index\n            right = pp.length;\n            break linear_scan;\n          }\n\n          //- slower code:\n          //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n          if (!(t >= t0)) {\n            // looping?\n\n            const t1global = pp[1];\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n              t0 = t1global;\n            }\n\n            // linear reverse scan\n\n            for (let giveUpAt = i1 - 2;;) {\n              if (t0 === undefined) {\n                // before start\n\n                this._cachedIndex = 0;\n                return this.copySampleValue_(0);\n              }\n              if (i1 === giveUpAt) break; // this loop\n\n              t1 = t0;\n              t0 = pp[--i1 - 1];\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            }\n\n            // prepare binary search on the left side of the index\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          }\n\n          // the interval is valid\n\n          break validate_interval;\n        } // linear scan\n\n        // binary search\n\n        while (i1 < right) {\n          const mid = i1 + right >>> 1;\n          if (t < pp[mid]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n        t1 = pp[i1];\n        t0 = pp[i1 - 1];\n\n        // check boundary cases, again\n\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.copySampleValue_(0);\n        }\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.copySampleValue_(i1 - 1);\n        }\n      } // seek\n\n      this._cachedIndex = i1;\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n\n    return this.interpolate_(i1, t0, t, t1);\n  }\n  getSettings_() {\n    return this.settings || this.DefaultSettings_;\n  }\n  copySampleValue_(index) {\n    // copies a sample value to the result buffer\n\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      offset = index * stride;\n    for (let i = 0; i !== stride; ++i) {\n      result[i] = values[offset + i];\n    }\n    return result;\n  }\n\n  // Template methods for derived classes:\n\n  interpolate_(/* i1, t0, t, t1 */\n  ) {\n    throw new Error('call to abstract method');\n    // implementations shall return this.resultBuffer\n  }\n  intervalChanged_(/* i1, t0, t1 */\n  ) {\n\n    // empty\n  }\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n    this.DefaultSettings_ = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n  }\n  intervalChanged_(i1, t0, t1) {\n    const pp = this.parameterPositions;\n    let iPrev = i1 - 2,\n      iNext = i1 + 1,\n      tPrev = pp[iPrev],\n      tNext = pp[iNext];\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case ZeroSlopeEnding:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n          break;\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n          break;\n        default:\n          // ZeroCurvatureEnding\n\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case ZeroSlopeEnding:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n          break;\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[1] - pp[0];\n          break;\n        default:\n          // ZeroCurvatureEnding\n\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n    const halfDt = (t1 - t0) * 0.5,\n      stride = this.valueSize;\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  }\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      o1 = i1 * stride,\n      o0 = o1 - stride,\n      oP = this._offsetPrev,\n      oN = this._offsetNext,\n      wP = this._weightPrev,\n      wN = this._weightNext,\n      p = (t - t0) / (t1 - t0),\n      pp = p * p,\n      ppp = pp * p;\n\n    // evaluate polynomials\n\n    const sP = -wP * ppp + 2 * wP * pp - wP * p;\n    const s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    const s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    const sN = wN * ppp - wN * pp;\n\n    // combine data linearly\n\n    for (let i = 0; i !== stride; ++i) {\n      result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n    }\n    return result;\n  }\n}\nclass LinearInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      offset1 = i1 * stride,\n      offset0 = offset1 - stride,\n      weight1 = (t - t0) / (t1 - t0),\n      weight0 = 1 - weight1;\n    for (let i = 0; i !== stride; ++i) {\n      result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n    }\n    return result;\n  }\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1 /*, t0, t, t1 */) {\n    return this.copySampleValue_(i1 - 1);\n  }\n}\nclass KeyframeTrack {\n  constructor(name, times, values, interpolation) {\n    if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n    if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n    this.name = name;\n    this.times = convertArray(times, this.TimeBufferType);\n    this.values = convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  }\n\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n\n  static toJSON(track) {\n    const trackType = track.constructor;\n    let json;\n\n    // derived classes can define a static toJSON method\n    if (trackType.toJSON !== this.toJSON) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        'name': track.name,\n        'times': convertArray(track.times, Array),\n        'values': convertArray(track.values, Array)\n      };\n      const interpolation = track.getInterpolation();\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n    json.type = track.ValueTypeName; // mandatory\n\n    return json;\n  }\n  InterpolantFactoryMethodDiscrete(result) {\n    return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n  }\n  InterpolantFactoryMethodLinear(result) {\n    return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  }\n  InterpolantFactoryMethodSmooth(result) {\n    return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n  }\n  setInterpolation(interpolation) {\n    let factoryMethod;\n    switch (interpolation) {\n      case InterpolateDiscrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n        break;\n      case InterpolateLinear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n        break;\n      case InterpolateSmooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n        break;\n    }\n    if (factoryMethod === undefined) {\n      const message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n      console.warn('THREE.KeyframeTrack:', message);\n      return this;\n    }\n    this.createInterpolant = factoryMethod;\n    return this;\n  }\n  getInterpolation() {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return InterpolateDiscrete;\n      case this.InterpolantFactoryMethodLinear:\n        return InterpolateLinear;\n      case this.InterpolantFactoryMethodSmooth:\n        return InterpolateSmooth;\n    }\n  }\n  getValueSize() {\n    return this.values.length / this.times.length;\n  }\n\n  // move all keyframes either forwards or backwards in time\n  shift(timeOffset) {\n    if (timeOffset !== 0.0) {\n      const times = this.times;\n      for (let i = 0, n = times.length; i !== n; ++i) {\n        times[i] += timeOffset;\n      }\n    }\n    return this;\n  }\n\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale(timeScale) {\n    if (timeScale !== 1.0) {\n      const times = this.times;\n      for (let i = 0, n = times.length; i !== n; ++i) {\n        times[i] *= timeScale;\n      }\n    }\n    return this;\n  }\n\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim(startTime, endTime) {\n    const times = this.times,\n      nKeys = times.length;\n    let from = 0,\n      to = nKeys - 1;\n    while (from !== nKeys && times[from] < startTime) {\n      ++from;\n    }\n    while (to !== -1 && times[to] > endTime) {\n      --to;\n    }\n    ++to; // inclusive -> exclusive bound\n\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) {\n        to = Math.max(to, 1);\n        from = to - 1;\n      }\n      const stride = this.getValueSize();\n      this.times = times.slice(from, to);\n      this.values = this.values.slice(from * stride, to * stride);\n    }\n    return this;\n  }\n\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate() {\n    let valid = true;\n    const valueSize = this.getValueSize();\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n      valid = false;\n    }\n    const times = this.times,\n      values = this.values,\n      nKeys = times.length;\n    if (nKeys === 0) {\n      console.error('THREE.KeyframeTrack: Track is empty.', this);\n      valid = false;\n    }\n    let prevTime = null;\n    for (let i = 0; i !== nKeys; i++) {\n      const currTime = times[i];\n      if (typeof currTime === 'number' && isNaN(currTime)) {\n        console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n        valid = false;\n        break;\n      }\n      if (prevTime !== null && prevTime > currTime) {\n        console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n        valid = false;\n        break;\n      }\n      prevTime = currTime;\n    }\n    if (values !== undefined) {\n      if (isTypedArray(values)) {\n        for (let i = 0, n = values.length; i !== n; ++i) {\n          const value = values[i];\n          if (isNaN(value)) {\n            console.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n    return valid;\n  }\n\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize() {\n    // times or values may be shared with other tracks, so overwriting is unsafe\n    const times = this.times.slice(),\n      values = this.values.slice(),\n      stride = this.getValueSize(),\n      smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n      lastIndex = times.length - 1;\n    let writeIndex = 1;\n    for (let i = 1; i < lastIndex; ++i) {\n      let keep = false;\n      const time = times[i];\n      const timeNext = times[i + 1];\n\n      // remove adjacent keyframes scheduled at the same time\n\n      if (time !== timeNext && (i !== 1 || time !== times[0])) {\n        if (!smoothInterpolation) {\n          // remove unnecessary keyframes same as their neighbors\n\n          const offset = i * stride,\n            offsetP = offset - stride,\n            offsetN = offset + stride;\n          for (let j = 0; j !== stride; ++j) {\n            const value = values[offset + j];\n            if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n              keep = true;\n              break;\n            }\n          }\n        } else {\n          keep = true;\n        }\n      }\n\n      // in-place compaction\n\n      if (keep) {\n        if (i !== writeIndex) {\n          times[writeIndex] = times[i];\n          const readOffset = i * stride,\n            writeOffset = writeIndex * stride;\n          for (let j = 0; j !== stride; ++j) {\n            values[writeOffset + j] = values[readOffset + j];\n          }\n        }\n        ++writeIndex;\n      }\n    }\n\n    // flush last keyframe (compaction looks ahead)\n\n    if (lastIndex > 0) {\n      times[writeIndex] = times[lastIndex];\n      for (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n        values[writeOffset + j] = values[readOffset + j];\n      }\n      ++writeIndex;\n    }\n    if (writeIndex !== times.length) {\n      this.times = times.slice(0, writeIndex);\n      this.values = values.slice(0, writeIndex * stride);\n    } else {\n      this.times = times;\n      this.values = values;\n    }\n    return this;\n  }\n  clone() {\n    const times = this.times.slice();\n    const values = this.values.slice();\n    const TypedKeyframeTrack = this.constructor;\n    const track = new TypedKeyframeTrack(this.name, times, values);\n\n    // Interpolant argument to constructor is not saved, so copy the factory method directly.\n    track.createInterpolant = this.createInterpolant;\n    return track;\n  }\n}\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n  // No interpolation parameter because only InterpolateDiscrete is valid.\n  constructor(name, times, values) {\n    super(name, times, values);\n  }\n}\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      alpha = (t - t0) / (t1 - t0);\n    let offset = i1 * stride;\n    for (let end = offset + stride; offset !== end; offset += 4) {\n      Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n    }\n    return result;\n  }\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n  InterpolantFactoryMethodLinear(result) {\n    return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  }\n}\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n  // No interpolation parameter because only InterpolateDiscrete is valid.\n  constructor(name, times, values) {\n    super(name, times, values);\n  }\n}\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\nclass AnimationClip {\n  constructor() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    let tracks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let blendMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : NormalAnimationBlendMode;\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration;\n    this.blendMode = blendMode;\n    this.uuid = generateUUID();\n\n    // this means it should figure out its duration by scanning the tracks\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n  static parse(json) {\n    const tracks = [],\n      jsonTracks = json.tracks,\n      frameTime = 1.0 / (json.fps || 1.0);\n    for (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n      tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n    }\n    const clip = new this(json.name, json.duration, tracks, json.blendMode);\n    clip.uuid = json.uuid;\n    return clip;\n  }\n  static toJSON(clip) {\n    const tracks = [],\n      clipTracks = clip.tracks;\n    const json = {\n      'name': clip.name,\n      'duration': clip.duration,\n      'tracks': tracks,\n      'uuid': clip.uuid,\n      'blendMode': clip.blendMode\n    };\n    for (let i = 0, n = clipTracks.length; i !== n; ++i) {\n      tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n    }\n    return json;\n  }\n  static CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n    const numMorphTargets = morphTargetSequence.length;\n    const tracks = [];\n    for (let i = 0; i < numMorphTargets; i++) {\n      let times = [];\n      let values = [];\n      times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n      values.push(0, 1, 0);\n      const order = getKeyframeOrder(times);\n      times = sortedArray(times, 1, order);\n      values = sortedArray(values, 1, order);\n\n      // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n      if (!noLoop && times[0] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[0]);\n      }\n      tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n    }\n    return new this(name, -1, tracks);\n  }\n  static findByName(objectOrClipArray, name) {\n    let clipArray = objectOrClipArray;\n    if (!Array.isArray(objectOrClipArray)) {\n      const o = objectOrClipArray;\n      clipArray = o.geometry && o.geometry.animations || o.animations;\n    }\n    for (let i = 0; i < clipArray.length; i++) {\n      if (clipArray[i].name === name) {\n        return clipArray[i];\n      }\n    }\n    return null;\n  }\n  static CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n    const animationToMorphTargets = {};\n\n    // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n    const pattern = /^([\\w-]*?)([\\d]+)$/;\n\n    // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n    for (let i = 0, il = morphTargets.length; i < il; i++) {\n      const morphTarget = morphTargets[i];\n      const parts = morphTarget.name.match(pattern);\n      if (parts && parts.length > 1) {\n        const name = parts[1];\n        let animationMorphTargets = animationToMorphTargets[name];\n        if (!animationMorphTargets) {\n          animationToMorphTargets[name] = animationMorphTargets = [];\n        }\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n    const clips = [];\n    for (const name in animationToMorphTargets) {\n      clips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n    }\n    return clips;\n  }\n\n  // parse the animation.hierarchy format\n  static parseAnimation(animation, bones) {\n    if (!animation) {\n      console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n      return null;\n    }\n    const addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        const times = [];\n        const values = [];\n        flattenJSON(animationKeys, times, values, propertyName);\n\n        // empty keys are filtered out, so check again\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    };\n    const tracks = [];\n    const clipName = animation.name || 'default';\n    const fps = animation.fps || 30;\n    const blendMode = animation.blendMode;\n\n    // automatic length determination in AnimationClip.\n    let duration = animation.length || -1;\n    const hierarchyTracks = animation.hierarchy || [];\n    for (let h = 0; h < hierarchyTracks.length; h++) {\n      const animationKeys = hierarchyTracks[h].keys;\n\n      // skip empty tracks\n      if (!animationKeys || animationKeys.length === 0) continue;\n\n      // process morph targets\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        const morphTargetNames = {};\n        let k;\n        for (k = 0; k < animationKeys.length; k++) {\n          if (animationKeys[k].morphTargets) {\n            for (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n              morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n            }\n          }\n        }\n\n        // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n        for (const morphTargetName in morphTargetNames) {\n          const times = [];\n          const values = [];\n          for (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n            const animationKey = animationKeys[k];\n            times.push(animationKey.time);\n            values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n          }\n          tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n        }\n        duration = morphTargetNames.length * fps;\n      } else {\n        // ...assume skeletal animation\n\n        const boneName = '.bones[' + bones[h].name + ']';\n        addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n        addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n        addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n      }\n    }\n    if (tracks.length === 0) {\n      return null;\n    }\n    const clip = new this(clipName, duration, tracks, blendMode);\n    return clip;\n  }\n  resetDuration() {\n    const tracks = this.tracks;\n    let duration = 0;\n    for (let i = 0, n = tracks.length; i !== n; ++i) {\n      const track = this.tracks[i];\n      duration = Math.max(duration, track.times[track.times.length - 1]);\n    }\n    this.duration = duration;\n    return this;\n  }\n  trim() {\n    for (let i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].trim(0, this.duration);\n    }\n    return this;\n  }\n  validate() {\n    let valid = true;\n    for (let i = 0; i < this.tracks.length; i++) {\n      valid = valid && this.tracks[i].validate();\n    }\n    return valid;\n  }\n  optimize() {\n    for (let i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].optimize();\n    }\n    return this;\n  }\n  clone() {\n    const tracks = [];\n    for (let i = 0; i < this.tracks.length; i++) {\n      tracks.push(this.tracks[i].clone());\n    }\n    return new this.constructor(this.name, this.duration, tracks, this.blendMode);\n  }\n  toJSON() {\n    return this.constructor.toJSON(this);\n  }\n}\nfunction getTrackTypeForValueTypeName(typeName) {\n  switch (typeName.toLowerCase()) {\n    case 'scalar':\n    case 'double':\n    case 'float':\n    case 'number':\n    case 'integer':\n      return NumberKeyframeTrack;\n    case 'vector':\n    case 'vector2':\n    case 'vector3':\n    case 'vector4':\n      return VectorKeyframeTrack;\n    case 'color':\n      return ColorKeyframeTrack;\n    case 'quaternion':\n      return QuaternionKeyframeTrack;\n    case 'bool':\n    case 'boolean':\n      return BooleanKeyframeTrack;\n    case 'string':\n      return StringKeyframeTrack;\n  }\n  throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n}\nfunction parseKeyframeTrack(json) {\n  if (json.type === undefined) {\n    throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n  }\n  const trackType = getTrackTypeForValueTypeName(json.type);\n  if (json.times === undefined) {\n    const times = [],\n      values = [];\n    flattenJSON(json.keys, times, values, 'value');\n    json.times = times;\n    json.values = values;\n  }\n\n  // derived classes can define a static parse method\n  if (trackType.parse !== undefined) {\n    return trackType.parse(json);\n  } else {\n    // by default, we assume a constructor compatible with the base\n    return new trackType(json.name, json.times, json.values, json.interpolation);\n  }\n}\nconst Cache = {\n  enabled: false,\n  files: {},\n  add: function (key, file) {\n    if (this.enabled === false) return;\n\n    // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function (key) {\n    if (this.enabled === false) return;\n\n    // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function (key) {\n    delete this.files[key];\n  },\n  clear: function () {\n    this.files = {};\n  }\n};\nclass LoadingManager {\n  constructor(onLoad, onProgress, onError) {\n    const scope = this;\n    let isLoading = false;\n    let itemsLoaded = 0;\n    let itemsTotal = 0;\n    let urlModifier = undefined;\n    const handlers = [];\n\n    // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n    this.itemStart = function (url) {\n      itemsTotal++;\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n      isLoading = true;\n    };\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n      return url;\n    };\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n      return this;\n    };\n    this.addHandler = function (regex, loader) {\n      handlers.push(regex, loader);\n      return this;\n    };\n    this.removeHandler = function (regex) {\n      const index = handlers.indexOf(regex);\n      if (index !== -1) {\n        handlers.splice(index, 2);\n      }\n      return this;\n    };\n    this.getHandler = function (file) {\n      for (let i = 0, l = handlers.length; i < l; i += 2) {\n        const regex = handlers[i];\n        const loader = handlers[i + 1];\n        if (regex.global) regex.lastIndex = 0; // see #17920\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n      return null;\n    };\n  }\n}\nconst DefaultLoadingManager = /*@__PURE__*/new LoadingManager();\nclass Loader {\n  constructor(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.crossOrigin = 'anonymous';\n    this.withCredentials = false;\n    this.path = '';\n    this.resourcePath = '';\n    this.requestHeader = {};\n  }\n  load(/* url, onLoad, onProgress, onError */) {}\n  loadAsync(url, onProgress) {\n    const scope = this;\n    return new Promise(function (resolve, reject) {\n      scope.load(url, resolve, onProgress, reject);\n    });\n  }\n  parse(/* data */) {}\n  setCrossOrigin(crossOrigin) {\n    this.crossOrigin = crossOrigin;\n    return this;\n  }\n  setWithCredentials(value) {\n    this.withCredentials = value;\n    return this;\n  }\n  setPath(path) {\n    this.path = path;\n    return this;\n  }\n  setResourcePath(resourcePath) {\n    this.resourcePath = resourcePath;\n    return this;\n  }\n  setRequestHeader(requestHeader) {\n    this.requestHeader = requestHeader;\n    return this;\n  }\n}\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\nconst loading = {};\nclass HttpError extends Error {\n  constructor(message, response) {\n    super(message);\n    this.response = response;\n  }\n}\nclass FileLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    const cached = Cache.get(url);\n    if (cached !== undefined) {\n      this.manager.itemStart(url);\n      setTimeout(() => {\n        if (onLoad) onLoad(cached);\n        this.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    // Check if request is duplicate\n\n    if (loading[url] !== undefined) {\n      loading[url].push({\n        onLoad: onLoad,\n        onProgress: onProgress,\n        onError: onError\n      });\n      return;\n    }\n\n    // Initialise array for duplicate requests\n    loading[url] = [];\n    loading[url].push({\n      onLoad: onLoad,\n      onProgress: onProgress,\n      onError: onError\n    });\n\n    // create request\n    const req = new Request(url, {\n      headers: new Headers(this.requestHeader),\n      credentials: this.withCredentials ? 'include' : 'same-origin'\n      // An abort controller could be added within a future PR\n    });\n\n    // record states ( avoid data race )\n    const mimeType = this.mimeType;\n    const responseType = this.responseType;\n\n    // start the fetch\n    fetch(req).then(response => {\n      if (response.status === 200 || response.status === 0) {\n        // Some browsers return HTTP Status 0 when using non-http protocol\n        // e.g. 'file://' or 'data://'. Handle as success.\n\n        if (response.status === 0) {\n          console.warn('THREE.FileLoader: HTTP Status 0 received.');\n        }\n\n        // Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n        if (typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined) {\n          return response;\n        }\n        const callbacks = loading[url];\n        const reader = response.body.getReader();\n\n        // Nginx needs X-File-Size check\n        // https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n        const contentLength = response.headers.get('X-File-Size') || response.headers.get('Content-Length');\n        const total = contentLength ? parseInt(contentLength) : 0;\n        const lengthComputable = total !== 0;\n        let loaded = 0;\n\n        // periodically read data into the new stream tracking while download progress\n        const stream = new ReadableStream({\n          start(controller) {\n            readData();\n            function readData() {\n              reader.read().then(_ref => {\n                let {\n                  done,\n                  value\n                } = _ref;\n                if (done) {\n                  controller.close();\n                } else {\n                  loaded += value.byteLength;\n                  const event = new ProgressEvent('progress', {\n                    lengthComputable,\n                    loaded,\n                    total\n                  });\n                  for (let i = 0, il = callbacks.length; i < il; i++) {\n                    const callback = callbacks[i];\n                    if (callback.onProgress) callback.onProgress(event);\n                  }\n                  controller.enqueue(value);\n                  readData();\n                }\n              }, e => {\n                controller.error(e);\n              });\n            }\n          }\n        });\n        return new Response(stream);\n      } else {\n        throw new HttpError(`fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response);\n      }\n    }).then(response => {\n      switch (responseType) {\n        case 'arraybuffer':\n          return response.arrayBuffer();\n        case 'blob':\n          return response.blob();\n        case 'document':\n          return response.text().then(text => {\n            const parser = new DOMParser();\n            return parser.parseFromString(text, mimeType);\n          });\n        case 'json':\n          return response.json();\n        default:\n          if (mimeType === undefined) {\n            return response.text();\n          } else {\n            // sniff encoding\n            const re = /charset=\"?([^;\"\\s]*)\"?/i;\n            const exec = re.exec(mimeType);\n            const label = exec && exec[1] ? exec[1].toLowerCase() : undefined;\n            const decoder = new TextDecoder(label);\n            return response.arrayBuffer().then(ab => decoder.decode(ab));\n          }\n      }\n    }).then(data => {\n      // Add to cache only on HTTP success, so that we do not cache\n      // error response bodies as proper responses to requests.\n      Cache.add(url, data);\n      const callbacks = loading[url];\n      delete loading[url];\n      for (let i = 0, il = callbacks.length; i < il; i++) {\n        const callback = callbacks[i];\n        if (callback.onLoad) callback.onLoad(data);\n      }\n    }).catch(err => {\n      // Abort errors and other errors are handled the same\n\n      const callbacks = loading[url];\n      if (callbacks === undefined) {\n        // When onLoad was called and url was deleted in `loading`\n        this.manager.itemError(url);\n        throw err;\n      }\n      delete loading[url];\n      for (let i = 0, il = callbacks.length; i < il; i++) {\n        const callback = callbacks[i];\n        if (callback.onError) callback.onError(err);\n      }\n      this.manager.itemError(url);\n    }).finally(() => {\n      this.manager.itemEnd(url);\n    });\n    this.manager.itemStart(url);\n  }\n  setResponseType(value) {\n    this.responseType = value;\n    return this;\n  }\n  setMimeType(value) {\n    this.mimeType = value;\n    return this;\n  }\n}\nclass AnimationLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(json) {\n    const animations = [];\n    for (let i = 0; i < json.length; i++) {\n      const clip = AnimationClip.parse(json[i]);\n      animations.push(clip);\n    }\n    return animations;\n  }\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const images = [];\n    const texture = new CompressedTexture();\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    let loaded = 0;\n    function loadTexture(i) {\n      loader.load(url[i], function (buffer) {\n        const texDatas = scope.parse(buffer, true);\n        images[i] = {\n          width: texDatas.width,\n          height: texDatas.height,\n          format: texDatas.format,\n          mipmaps: texDatas.mipmaps\n        };\n        loaded += 1;\n        if (loaded === 6) {\n          if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n          texture.image = images;\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n    if (Array.isArray(url)) {\n      for (let i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n\n      loader.load(url, function (buffer) {\n        const texDatas = scope.parse(buffer, true);\n        if (texDatas.isCubemap) {\n          const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n          for (let f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n            for (let i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n          texture.image = images;\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n    return texture;\n  }\n}\nclass ImageLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    const scope = this;\n    const cached = Cache.get(url);\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n    const image = createElementNS('img');\n    function onImageLoad() {\n      removeEventListeners();\n      Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }\n    function onImageError(event) {\n      removeEventListeners();\n      if (onError) onError(event);\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    }\n    function removeEventListeners() {\n      image.removeEventListener('load', onImageLoad, false);\n      image.removeEventListener('error', onImageError, false);\n    }\n    image.addEventListener('load', onImageLoad, false);\n    image.addEventListener('error', onImageError, false);\n    if (url.slice(0, 5) !== 'data:') {\n      if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    }\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  }\n}\nclass CubeTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    texture.colorSpace = SRGBColorSpace;\n    const loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    let loaded = 0;\n    function loadTexture(i) {\n      loader.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n    return texture;\n  }\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const texture = new DataTexture();\n    const loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setPath(this.path);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      let texData;\n      try {\n        texData = scope.parse(buffer);\n      } catch (error) {\n        if (onError !== undefined) {\n          onError(error);\n        } else {\n          console.error(error);\n          return;\n        }\n      }\n      if (texData.image !== undefined) {\n        texture.image = texData.image;\n      } else if (texData.data !== undefined) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n      texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n      texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n      texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n      texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n      texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n      if (texData.colorSpace !== undefined) {\n        texture.colorSpace = texData.colorSpace;\n      }\n      if (texData.flipY !== undefined) {\n        texture.flipY = texData.flipY;\n      }\n      if (texData.format !== undefined) {\n        texture.format = texData.format;\n      }\n      if (texData.type !== undefined) {\n        texture.type = texData.type;\n      }\n      if (texData.mipmaps !== undefined) {\n        texture.mipmaps = texData.mipmaps;\n        texture.minFilter = LinearMipmapLinearFilter; // presumably...\n      }\n      if (texData.mipmapCount === 1) {\n        texture.minFilter = LinearFilter;\n      }\n      if (texData.generateMipmaps !== undefined) {\n        texture.generateMipmaps = texData.generateMipmaps;\n      }\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  }\n}\nclass TextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const texture = new Texture();\n    const loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    loader.load(url, function (image) {\n      texture.image = image;\n      texture.needsUpdate = true;\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  }\n}\nclass Light extends Object3D {\n  constructor(color) {\n    let intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    super();\n    this.isLight = true;\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity;\n  }\n  dispose() {\n\n    // Empty here in base class; some subclasses override.\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n    if (this.target !== undefined) data.object.target = this.target.uuid;\n    return data;\n  }\n}\nclass HemisphereLight extends Light {\n  constructor(skyColor, groundColor, intensity) {\n    super(skyColor, intensity);\n    this.isHemisphereLight = true;\n    this.type = 'HemisphereLight';\n    this.position.copy(Object3D.DEFAULT_UP);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.groundColor.copy(source.groundColor);\n    return this;\n  }\n}\nconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/new Vector3();\nclass LightShadow {\n  constructor(camera) {\n    this.camera = camera;\n    this.intensity = 1;\n    this.bias = 0;\n    this.normalBias = 0;\n    this.radius = 1;\n    this.blurSamples = 8;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n    this._viewportCount = 1;\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n  getViewportCount() {\n    return this._viewportCount;\n  }\n  getFrustum() {\n    return this._frustum;\n  }\n  updateMatrices(light) {\n    const shadowCamera = this.camera;\n    const shadowMatrix = this.matrix;\n    _lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n    shadowCamera.position.copy(_lightPositionWorld$1);\n    _lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n    shadowCamera.lookAt(_lookTarget$1);\n    shadowCamera.updateMatrixWorld();\n    _projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n    this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n    shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    shadowMatrix.multiply(_projScreenMatrix$1);\n  }\n  getViewport(viewportIndex) {\n    return this._viewports[viewportIndex];\n  }\n  getFrameExtents() {\n    return this._frameExtents;\n  }\n  dispose() {\n    if (this.map) {\n      this.map.dispose();\n    }\n    if (this.mapPass) {\n      this.mapPass.dispose();\n    }\n  }\n  copy(source) {\n    this.camera = source.camera.clone();\n    this.intensity = source.intensity;\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  toJSON() {\n    const object = {};\n    if (this.intensity !== 1) object.intensity = this.intensity;\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.normalBias !== 0) object.normalBias = this.normalBias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n}\nclass SpotLightShadow extends LightShadow {\n  constructor() {\n    super(new PerspectiveCamera(50, 1, 0.5, 500));\n    this.isSpotLightShadow = true;\n    this.focus = 1;\n  }\n  updateMatrices(light) {\n    const camera = this.camera;\n    const fov = RAD2DEG * 2 * light.angle * this.focus;\n    const aspect = this.mapSize.width / this.mapSize.height;\n    const far = light.distance || camera.far;\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n    super.updateMatrices(light);\n  }\n  copy(source) {\n    super.copy(source);\n    this.focus = source.focus;\n    return this;\n  }\n}\nclass SpotLight extends Light {\n  constructor(color, intensity) {\n    let distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let angle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Math.PI / 3;\n    let penumbra = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    let decay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2;\n    super(color, intensity);\n    this.isSpotLight = true;\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DEFAULT_UP);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.distance = distance;\n    this.angle = angle;\n    this.penumbra = penumbra;\n    this.decay = decay;\n    this.map = null;\n    this.shadow = new SpotLightShadow();\n  }\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in candela)\n    // by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n    return this.intensity * Math.PI;\n  }\n  set power(power) {\n    // set the light's intensity (in candela) from the desired luminous power (in lumens)\n    this.intensity = power / Math.PI;\n  }\n  dispose() {\n    this.shadow.dispose();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}\nconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/new Vector3();\nconst _lookTarget = /*@__PURE__*/new Vector3();\nclass PointLightShadow extends LightShadow {\n  constructor() {\n    super(new PerspectiveCamera(90, 1, 0.5, 500));\n    this.isPointLightShadow = true;\n    this._frameExtents = new Vector2(4, 2);\n    this._viewportCount = 6;\n    this._viewports = [\n    // These viewports map a cube-map onto a 2D texture with the\n    // following orientation:\n    //\n    //  xzXZ\n    //   y Y\n    //\n    // X - Positive x direction\n    // x - Negative x direction\n    // Y - Positive y direction\n    // y - Negative y direction\n    // Z - Positive z direction\n    // z - Negative z direction\n\n    // positive X\n    new Vector4(2, 1, 1, 1),\n    // negative X\n    new Vector4(0, 1, 1, 1),\n    // positive Z\n    new Vector4(3, 1, 1, 1),\n    // negative Z\n    new Vector4(1, 1, 1, 1),\n    // positive Y\n    new Vector4(3, 0, 1, 1),\n    // negative Y\n    new Vector4(1, 0, 1, 1)];\n    this._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    this._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n  }\n  updateMatrices(light) {\n    let viewportIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const camera = this.camera;\n    const shadowMatrix = this.matrix;\n    const far = light.distance || camera.far;\n    if (far !== camera.far) {\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n    _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n    camera.position.copy(_lightPositionWorld);\n    _lookTarget.copy(camera.position);\n    _lookTarget.add(this._cubeDirections[viewportIndex]);\n    camera.up.copy(this._cubeUps[viewportIndex]);\n    camera.lookAt(_lookTarget);\n    camera.updateMatrixWorld();\n    shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    this._frustum.setFromProjectionMatrix(_projScreenMatrix);\n  }\n}\nclass PointLight extends Light {\n  constructor(color, intensity) {\n    let distance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let decay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n    super(color, intensity);\n    this.isPointLight = true;\n    this.type = 'PointLight';\n    this.distance = distance;\n    this.decay = decay;\n    this.shadow = new PointLightShadow();\n  }\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in candela)\n    // for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n    return this.intensity * 4 * Math.PI;\n  }\n  set power(power) {\n    // set the light's intensity (in candela) from the desired luminous power (in lumens)\n    this.intensity = power / (4 * Math.PI);\n  }\n  dispose() {\n    this.shadow.dispose();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}\nclass OrthographicCamera extends Camera {\n  constructor() {\n    let left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    let right = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let bottom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n    let near = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.1;\n    let far = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2000;\n    super();\n    this.isOrthographicCamera = true;\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left;\n    this.right = right;\n    this.top = top;\n    this.bottom = bottom;\n    this.near = near;\n    this.far = far;\n    this.updateProjectionMatrix();\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    return this;\n  }\n  setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  }\n  clearViewOffset() {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n    this.updateProjectionMatrix();\n  }\n  updateProjectionMatrix() {\n    const dx = (this.right - this.left) / (2 * this.zoom);\n    const dy = (this.top - this.bottom) / (2 * this.zoom);\n    const cx = (this.right + this.left) / 2;\n    const cy = (this.top + this.bottom) / 2;\n    let left = cx - dx;\n    let right = cx + dx;\n    let top = cy + dy;\n    let bottom = cy - dy;\n    if (this.view !== null && this.view.enabled) {\n      const scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n      const scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far, this.coordinateSystem);\n    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    return data;\n  }\n}\nclass DirectionalLightShadow extends LightShadow {\n  constructor() {\n    super(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n    this.isDirectionalLightShadow = true;\n  }\n}\nclass DirectionalLight extends Light {\n  constructor(color, intensity) {\n    super(color, intensity);\n    this.isDirectionalLight = true;\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DEFAULT_UP);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.shadow = new DirectionalLightShadow();\n  }\n  dispose() {\n    this.shadow.dispose();\n  }\n  copy(source) {\n    super.copy(source);\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n}\nclass AmbientLight extends Light {\n  constructor(color, intensity) {\n    super(color, intensity);\n    this.isAmbientLight = true;\n    this.type = 'AmbientLight';\n  }\n}\nclass RectAreaLight extends Light {\n  constructor(color, intensity) {\n    let width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    let height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n    super(color, intensity);\n    this.isRectAreaLight = true;\n    this.type = 'RectAreaLight';\n    this.width = width;\n    this.height = height;\n  }\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in nits)\n    return this.intensity * this.width * this.height * Math.PI;\n  }\n  set power(power) {\n    // set the light's intensity (in nits) from the desired luminous power (in lumens)\n    this.intensity = power / (this.width * this.height * Math.PI);\n  }\n  copy(source) {\n    super.copy(source);\n    this.width = source.width;\n    this.height = source.height;\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.width = this.width;\n    data.object.height = this.height;\n    return data;\n  }\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n  constructor() {\n    this.isSphericalHarmonics3 = true;\n    this.coefficients = [];\n    for (let i = 0; i < 9; i++) {\n      this.coefficients.push(new Vector3());\n    }\n  }\n  set(coefficients) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].copy(coefficients[i]);\n    }\n    return this;\n  }\n  zero() {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].set(0, 0, 0);\n    }\n    return this;\n  }\n\n  // get the radiance in the direction of the normal\n  // target is a Vector3\n  getAt(normal, target) {\n    // normal is assumed to be unit length\n\n    const x = normal.x,\n      y = normal.y,\n      z = normal.z;\n    const coeff = this.coefficients;\n\n    // band 0\n    target.copy(coeff[0]).multiplyScalar(0.282095);\n\n    // band 1\n    target.addScaledVector(coeff[1], 0.488603 * y);\n    target.addScaledVector(coeff[2], 0.488603 * z);\n    target.addScaledVector(coeff[3], 0.488603 * x);\n\n    // band 2\n    target.addScaledVector(coeff[4], 1.092548 * (x * y));\n    target.addScaledVector(coeff[5], 1.092548 * (y * z));\n    target.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n    target.addScaledVector(coeff[7], 1.092548 * (x * z));\n    target.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n    return target;\n  }\n\n  // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n  // target is a Vector3\n  // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n  getIrradianceAt(normal, target) {\n    // normal is assumed to be unit length\n\n    const x = normal.x,\n      y = normal.y,\n      z = normal.z;\n    const coeff = this.coefficients;\n\n    // band 0\n    target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\n    // band 1\n    target.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n    target.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n    target.addScaledVector(coeff[3], 2.0 * 0.511664 * x);\n\n    // band 2\n    target.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n    target.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n    target.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n    target.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n    target.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n    return target;\n  }\n  add(sh) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].add(sh.coefficients[i]);\n    }\n    return this;\n  }\n  addScaledSH(sh, s) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].addScaledVector(sh.coefficients[i], s);\n    }\n    return this;\n  }\n  scale(s) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].multiplyScalar(s);\n    }\n    return this;\n  }\n  lerp(sh, alpha) {\n    for (let i = 0; i < 9; i++) {\n      this.coefficients[i].lerp(sh.coefficients[i], alpha);\n    }\n    return this;\n  }\n  equals(sh) {\n    for (let i = 0; i < 9; i++) {\n      if (!this.coefficients[i].equals(sh.coefficients[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  copy(sh) {\n    return this.set(sh.coefficients);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const coefficients = this.coefficients;\n    for (let i = 0; i < 9; i++) {\n      coefficients[i].fromArray(array, offset + i * 3);\n    }\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const coefficients = this.coefficients;\n    for (let i = 0; i < 9; i++) {\n      coefficients[i].toArray(array, offset + i * 3);\n    }\n    return array;\n  }\n\n  // evaluate the basis functions\n  // shBasis is an Array[ 9 ]\n  static getBasisAt(normal, shBasis) {\n    // normal is assumed to be unit length\n\n    const x = normal.x,\n      y = normal.y,\n      z = normal.z;\n\n    // band 0\n    shBasis[0] = 0.282095;\n\n    // band 1\n    shBasis[1] = 0.488603 * y;\n    shBasis[2] = 0.488603 * z;\n    shBasis[3] = 0.488603 * x;\n\n    // band 2\n    shBasis[4] = 1.092548 * x * y;\n    shBasis[5] = 1.092548 * y * z;\n    shBasis[6] = 0.315392 * (3 * z * z - 1);\n    shBasis[7] = 1.092548 * x * z;\n    shBasis[8] = 0.546274 * (x * x - y * y);\n  }\n}\nclass LightProbe extends Light {\n  constructor() {\n    let sh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new SphericalHarmonics3();\n    let intensity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    super(undefined, intensity);\n    this.isLightProbe = true;\n    this.sh = sh;\n  }\n  copy(source) {\n    super.copy(source);\n    this.sh.copy(source.sh);\n    return this;\n  }\n  fromJSON(json) {\n    this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n    this.sh.fromArray(json.sh);\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.sh = this.sh.toArray();\n    return data;\n  }\n}\nclass MaterialLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.textures = {};\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(json) {\n    const textures = this.textures;\n    function getTexture(name) {\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n      return textures[name];\n    }\n    const material = this.createMaterialFromType(json.type);\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.sheen !== undefined) material.sheen = json.sheen;\n    if (json.sheenColor !== undefined) material.sheenColor = new Color().setHex(json.sheenColor);\n    if (json.sheenRoughness !== undefined) material.sheenRoughness = json.sheenRoughness;\n    if (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.specularIntensity !== undefined) material.specularIntensity = json.specularIntensity;\n    if (json.specularColor !== undefined && material.specularColor !== undefined) material.specularColor.setHex(json.specularColor);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n    if (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n    if (json.dispersion !== undefined) material.dispersion = json.dispersion;\n    if (json.iridescence !== undefined) material.iridescence = json.iridescence;\n    if (json.iridescenceIOR !== undefined) material.iridescenceIOR = json.iridescenceIOR;\n    if (json.iridescenceThicknessRange !== undefined) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n    if (json.transmission !== undefined) material.transmission = json.transmission;\n    if (json.thickness !== undefined) material.thickness = json.thickness;\n    if (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n    if (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n    if (json.anisotropy !== undefined) material.anisotropy = json.anisotropy;\n    if (json.anisotropyRotation !== undefined) material.anisotropyRotation = json.anisotropyRotation;\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.combine !== undefined) material.combine = json.combine;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.alphaHash !== undefined) material.alphaHash = json.alphaHash;\n    if (json.depthFunc !== undefined) material.depthFunc = json.depthFunc;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.blendSrc !== undefined) material.blendSrc = json.blendSrc;\n    if (json.blendDst !== undefined) material.blendDst = json.blendDst;\n    if (json.blendEquation !== undefined) material.blendEquation = json.blendEquation;\n    if (json.blendSrcAlpha !== undefined) material.blendSrcAlpha = json.blendSrcAlpha;\n    if (json.blendDstAlpha !== undefined) material.blendDstAlpha = json.blendDstAlpha;\n    if (json.blendEquationAlpha !== undefined) material.blendEquationAlpha = json.blendEquationAlpha;\n    if (json.blendColor !== undefined && material.blendColor !== undefined) material.blendColor.setHex(json.blendColor);\n    if (json.blendAlpha !== undefined) material.blendAlpha = json.blendAlpha;\n    if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n    if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n    if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n    if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n    if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n    if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n    if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n    if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n    if (json.rotation !== undefined) material.rotation = json.rotation;\n    if (json.linewidth !== undefined) material.linewidth = json.linewidth;\n    if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n    if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n    if (json.scale !== undefined) material.scale = json.scale;\n    if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n    if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n    if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n    if (json.dithering !== undefined) material.dithering = json.dithering;\n    if (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n    if (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n    if (json.forceSinglePass !== undefined) material.forceSinglePass = json.forceSinglePass;\n    if (json.visible !== undefined) material.visible = json.visible;\n    if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n    if (json.userData !== undefined) material.userData = json.userData;\n    if (json.vertexColors !== undefined) {\n      if (typeof json.vertexColors === 'number') {\n        material.vertexColors = json.vertexColors > 0 ? true : false;\n      } else {\n        material.vertexColors = json.vertexColors;\n      }\n    }\n\n    // Shader Material\n\n    if (json.uniforms !== undefined) {\n      for (const name in json.uniforms) {\n        const uniform = json.uniforms[name];\n        material.uniforms[name] = {};\n        switch (uniform.type) {\n          case 't':\n            material.uniforms[name].value = getTexture(uniform.value);\n            break;\n          case 'c':\n            material.uniforms[name].value = new Color().setHex(uniform.value);\n            break;\n          case 'v2':\n            material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n            break;\n          case 'v3':\n            material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n            break;\n          case 'v4':\n            material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n            break;\n          case 'm3':\n            material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n            break;\n          case 'm4':\n            material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n            break;\n          default:\n            material.uniforms[name].value = uniform.value;\n        }\n      }\n    }\n    if (json.defines !== undefined) material.defines = json.defines;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.glslVersion !== undefined) material.glslVersion = json.glslVersion;\n    if (json.extensions !== undefined) {\n      for (const key in json.extensions) {\n        material.extensions[key] = json.extensions[key];\n      }\n    }\n    if (json.lights !== undefined) material.lights = json.lights;\n    if (json.clipping !== undefined) material.clipping = json.clipping;\n\n    // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation;\n\n    // maps\n\n    if (json.map !== undefined) material.map = getTexture(json.map);\n    if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n    if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n    if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n    if (json.normalScale !== undefined) {\n      let normalScale = json.normalScale;\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n\n        normalScale = [normalScale, normalScale];\n      }\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n    if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n    if (json.specularIntensityMap !== undefined) material.specularIntensityMap = getTexture(json.specularIntensityMap);\n    if (json.specularColorMap !== undefined) material.specularColorMap = getTexture(json.specularColorMap);\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.envMapRotation !== undefined) material.envMapRotation.fromArray(json.envMapRotation);\n    if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n    if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n    if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n    if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n    if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n    if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n    if (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n    if (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n    if (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n    if (json.iridescenceMap !== undefined) material.iridescenceMap = getTexture(json.iridescenceMap);\n    if (json.iridescenceThicknessMap !== undefined) material.iridescenceThicknessMap = getTexture(json.iridescenceThicknessMap);\n    if (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n    if (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n    if (json.anisotropyMap !== undefined) material.anisotropyMap = getTexture(json.anisotropyMap);\n    if (json.sheenColorMap !== undefined) material.sheenColorMap = getTexture(json.sheenColorMap);\n    if (json.sheenRoughnessMap !== undefined) material.sheenRoughnessMap = getTexture(json.sheenRoughnessMap);\n    return material;\n  }\n  setTextures(value) {\n    this.textures = value;\n    return this;\n  }\n  createMaterialFromType(type) {\n    return MaterialLoader.createMaterialFromType(type);\n  }\n  static createMaterialFromType(type) {\n    const materialLib = {\n      ShadowMaterial,\n      SpriteMaterial,\n      RawShaderMaterial,\n      ShaderMaterial,\n      PointsMaterial,\n      MeshPhysicalMaterial,\n      MeshStandardMaterial,\n      MeshPhongMaterial,\n      MeshToonMaterial,\n      MeshNormalMaterial,\n      MeshLambertMaterial,\n      MeshDepthMaterial,\n      MeshDistanceMaterial,\n      MeshBasicMaterial,\n      MeshMatcapMaterial,\n      LineDashedMaterial,\n      LineBasicMaterial,\n      Material\n    };\n    return new materialLib[type]();\n  }\n}\nclass LoaderUtils {\n  static decodeText(array) {\n    // @deprecated, r165\n\n    console.warn('THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.');\n    if (typeof TextDecoder !== 'undefined') {\n      return new TextDecoder().decode(array);\n    }\n\n    // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n    // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n    let s = '';\n    for (let i = 0, il = array.length; i < il; i++) {\n      // Implicitly assumes little-endian.\n      s += String.fromCharCode(array[i]);\n    }\n    try {\n      // merges multi-byte utf-8 characters.\n\n      return decodeURIComponent(escape(s));\n    } catch (e) {\n      // see #16358\n\n      return s;\n    }\n  }\n  static extractUrlBase(url) {\n    const index = url.lastIndexOf('/');\n    if (index === -1) return './';\n    return url.slice(0, index + 1);\n  }\n  static resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return '';\n\n    // Host Relative URL\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n    }\n\n    // Absolute URL http://,https://,//\n    if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n    // Data URI\n    if (/^data:.*,.*$/i.test(url)) return url;\n\n    // Blob URL\n    if (/^blob:.*$/i.test(url)) return url;\n\n    // Relative URL\n    return path + url;\n  }\n}\nclass InstancedBufferGeometry extends BufferGeometry {\n  constructor() {\n    super();\n    this.isInstancedBufferGeometry = true;\n    this.type = 'InstancedBufferGeometry';\n    this.instanceCount = Infinity;\n  }\n  copy(source) {\n    super.copy(source);\n    this.instanceCount = source.instanceCount;\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.instanceCount = this.instanceCount;\n    data.isInstancedBufferGeometry = true;\n    return data;\n  }\n}\nclass BufferGeometryLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(json) {\n    const interleavedBufferMap = {};\n    const arrayBufferMap = {};\n    function getInterleavedBuffer(json, uuid) {\n      if (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n      const interleavedBuffers = json.interleavedBuffers;\n      const interleavedBuffer = interleavedBuffers[uuid];\n      const buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n      const array = getTypedArray(interleavedBuffer.type, buffer);\n      const ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n      ib.uuid = interleavedBuffer.uuid;\n      interleavedBufferMap[uuid] = ib;\n      return ib;\n    }\n    function getArrayBuffer(json, uuid) {\n      if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n      const arrayBuffers = json.arrayBuffers;\n      const arrayBuffer = arrayBuffers[uuid];\n      const ab = new Uint32Array(arrayBuffer).buffer;\n      arrayBufferMap[uuid] = ab;\n      return ab;\n    }\n    const geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n    const index = json.data.index;\n    if (index !== undefined) {\n      const typedArray = getTypedArray(index.type, index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n    const attributes = json.data.attributes;\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      let bufferAttribute;\n      if (attribute.isInterleavedBufferAttribute) {\n        const interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n        bufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n      } else {\n        const typedArray = getTypedArray(attribute.type, attribute.array);\n        const bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n        bufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n      }\n      if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n      if (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n      geometry.setAttribute(key, bufferAttribute);\n    }\n    const morphAttributes = json.data.morphAttributes;\n    if (morphAttributes) {\n      for (const key in morphAttributes) {\n        const attributeArray = morphAttributes[key];\n        const array = [];\n        for (let i = 0, il = attributeArray.length; i < il; i++) {\n          const attribute = attributeArray[i];\n          let bufferAttribute;\n          if (attribute.isInterleavedBufferAttribute) {\n            const interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n            bufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n          } else {\n            const typedArray = getTypedArray(attribute.type, attribute.array);\n            bufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n          }\n          if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n          array.push(bufferAttribute);\n        }\n        geometry.morphAttributes[key] = array;\n      }\n    }\n    const morphTargetsRelative = json.data.morphTargetsRelative;\n    if (morphTargetsRelative) {\n      geometry.morphTargetsRelative = true;\n    }\n    const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n    if (groups !== undefined) {\n      for (let i = 0, n = groups.length; i !== n; ++i) {\n        const group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n    const boundingSphere = json.data.boundingSphere;\n    if (boundingSphere !== undefined) {\n      const center = new Vector3();\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n    if (json.name) geometry.name = json.name;\n    if (json.userData) geometry.userData = json.userData;\n    return geometry;\n  }\n}\nclass ObjectLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n    this.resourcePath = this.resourcePath || path;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      let json = null;\n      try {\n        json = JSON.parse(text);\n      } catch (error) {\n        if (onError !== undefined) onError(error);\n        console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n        return;\n      }\n      const metadata = json.metadata;\n      if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n        if (onError !== undefined) onError(new Error('THREE.ObjectLoader: Can\\'t load ' + url));\n        console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n        return;\n      }\n      scope.parse(json, onLoad);\n    }, onProgress, onError);\n  }\n  async loadAsync(url, onProgress) {\n    const scope = this;\n    const path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n    this.resourcePath = this.resourcePath || path;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    const text = await loader.loadAsync(url, onProgress);\n    const json = JSON.parse(text);\n    const metadata = json.metadata;\n    if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n      throw new Error('THREE.ObjectLoader: Can\\'t load ' + url);\n    }\n    return await scope.parseAsync(json);\n  }\n  parse(json, onLoad) {\n    const animations = this.parseAnimations(json.animations);\n    const shapes = this.parseShapes(json.shapes);\n    const geometries = this.parseGeometries(json.geometries, shapes);\n    const images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    const textures = this.parseTextures(json.textures, images);\n    const materials = this.parseMaterials(json.materials, textures);\n    const object = this.parseObject(json.object, geometries, materials, textures, animations);\n    const skeletons = this.parseSkeletons(json.skeletons, object);\n    this.bindSkeletons(object, skeletons);\n    this.bindLightTargets(object);\n\n    //\n\n    if (onLoad !== undefined) {\n      let hasImages = false;\n      for (const uuid in images) {\n        if (images[uuid].data instanceof HTMLImageElement) {\n          hasImages = true;\n          break;\n        }\n      }\n      if (hasImages === false) onLoad(object);\n    }\n    return object;\n  }\n  async parseAsync(json) {\n    const animations = this.parseAnimations(json.animations);\n    const shapes = this.parseShapes(json.shapes);\n    const geometries = this.parseGeometries(json.geometries, shapes);\n    const images = await this.parseImagesAsync(json.images);\n    const textures = this.parseTextures(json.textures, images);\n    const materials = this.parseMaterials(json.materials, textures);\n    const object = this.parseObject(json.object, geometries, materials, textures, animations);\n    const skeletons = this.parseSkeletons(json.skeletons, object);\n    this.bindSkeletons(object, skeletons);\n    this.bindLightTargets(object);\n    return object;\n  }\n  parseShapes(json) {\n    const shapes = {};\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i++) {\n        const shape = new Shape().fromJSON(json[i]);\n        shapes[shape.uuid] = shape;\n      }\n    }\n    return shapes;\n  }\n  parseSkeletons(json, object) {\n    const skeletons = {};\n    const bones = {};\n\n    // generate bone lookup table\n\n    object.traverse(function (child) {\n      if (child.isBone) bones[child.uuid] = child;\n    });\n\n    // create skeletons\n\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i++) {\n        const skeleton = new Skeleton().fromJSON(json[i], bones);\n        skeletons[skeleton.uuid] = skeleton;\n      }\n    }\n    return skeletons;\n  }\n  parseGeometries(json, shapes) {\n    const geometries = {};\n    if (json !== undefined) {\n      const bufferGeometryLoader = new BufferGeometryLoader();\n      for (let i = 0, l = json.length; i < l; i++) {\n        let geometry;\n        const data = json[i];\n        switch (data.type) {\n          case 'BufferGeometry':\n          case 'InstancedBufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n          default:\n            if (data.type in Geometries) {\n              geometry = Geometries[data.type].fromJSON(data, shapes);\n            } else {\n              console.warn(`THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"`);\n            }\n        }\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        if (data.userData !== undefined) geometry.userData = data.userData;\n        geometries[data.uuid] = geometry;\n      }\n    }\n    return geometries;\n  }\n  parseMaterials(json, textures) {\n    const cache = {}; // MultiMaterial\n    const materials = {};\n    if (json !== undefined) {\n      const loader = new MaterialLoader();\n      loader.setTextures(textures);\n      for (let i = 0, l = json.length; i < l; i++) {\n        const data = json[i];\n        if (cache[data.uuid] === undefined) {\n          cache[data.uuid] = loader.parse(data);\n        }\n        materials[data.uuid] = cache[data.uuid];\n      }\n    }\n    return materials;\n  }\n  parseAnimations(json) {\n    const animations = {};\n    if (json !== undefined) {\n      for (let i = 0; i < json.length; i++) {\n        const data = json[i];\n        const clip = AnimationClip.parse(data);\n        animations[clip.uuid] = clip;\n      }\n    }\n    return animations;\n  }\n  parseImages(json, onLoad) {\n    const scope = this;\n    const images = {};\n    let loader;\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n    function deserializeImage(image) {\n      if (typeof image === 'string') {\n        const url = image;\n        const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n        return loadImage(path);\n      } else {\n        if (image.data) {\n          return {\n            data: getTypedArray(image.type, image.data),\n            width: image.width,\n            height: image.height\n          };\n        } else {\n          return null;\n        }\n      }\n    }\n    if (json !== undefined && json.length > 0) {\n      const manager = new LoadingManager(onLoad);\n      loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      for (let i = 0, il = json.length; i < il; i++) {\n        const image = json[i];\n        const url = image.url;\n        if (Array.isArray(url)) {\n          // load array of images e.g CubeTexture\n\n          const imageArray = [];\n          for (let j = 0, jl = url.length; j < jl; j++) {\n            const currentUrl = url[j];\n            const deserializedImage = deserializeImage(currentUrl);\n            if (deserializedImage !== null) {\n              if (deserializedImage instanceof HTMLImageElement) {\n                imageArray.push(deserializedImage);\n              } else {\n                // special case: handle array of data textures for cube textures\n\n                imageArray.push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n              }\n            }\n          }\n          images[image.uuid] = new Source(imageArray);\n        } else {\n          // load single image\n\n          const deserializedImage = deserializeImage(image.url);\n          images[image.uuid] = new Source(deserializedImage);\n        }\n      }\n    }\n    return images;\n  }\n  async parseImagesAsync(json) {\n    const scope = this;\n    const images = {};\n    let loader;\n    async function deserializeImage(image) {\n      if (typeof image === 'string') {\n        const url = image;\n        const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n        return await loader.loadAsync(path);\n      } else {\n        if (image.data) {\n          return {\n            data: getTypedArray(image.type, image.data),\n            width: image.width,\n            height: image.height\n          };\n        } else {\n          return null;\n        }\n      }\n    }\n    if (json !== undefined && json.length > 0) {\n      loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      for (let i = 0, il = json.length; i < il; i++) {\n        const image = json[i];\n        const url = image.url;\n        if (Array.isArray(url)) {\n          // load array of images e.g CubeTexture\n\n          const imageArray = [];\n          for (let j = 0, jl = url.length; j < jl; j++) {\n            const currentUrl = url[j];\n            const deserializedImage = await deserializeImage(currentUrl);\n            if (deserializedImage !== null) {\n              if (deserializedImage instanceof HTMLImageElement) {\n                imageArray.push(deserializedImage);\n              } else {\n                // special case: handle array of data textures for cube textures\n\n                imageArray.push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n              }\n            }\n          }\n          images[image.uuid] = new Source(imageArray);\n        } else {\n          // load single image\n\n          const deserializedImage = await deserializeImage(image.url);\n          images[image.uuid] = new Source(deserializedImage);\n        }\n      }\n    }\n    return images;\n  }\n  parseTextures(json, images) {\n    function parseConstant(value, type) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return type[value];\n    }\n    const textures = {};\n    if (json !== undefined) {\n      for (let i = 0, l = json.length; i < l; i++) {\n        const data = json[i];\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n        const source = images[data.image];\n        const image = source.data;\n        let texture;\n        if (Array.isArray(image)) {\n          texture = new CubeTexture();\n          if (image.length === 6) texture.needsUpdate = true;\n        } else {\n          if (image && image.data) {\n            texture = new DataTexture();\n          } else {\n            texture = new Texture();\n          }\n          if (image) texture.needsUpdate = true; // textures can have undefined image data\n        }\n        texture.source = source;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n        if (data.channel !== undefined) texture.channel = data.channel;\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n        if (data.center !== undefined) texture.center.fromArray(data.center);\n        if (data.rotation !== undefined) texture.rotation = data.rotation;\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n          texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n        }\n        if (data.format !== undefined) texture.format = data.format;\n        if (data.internalFormat !== undefined) texture.internalFormat = data.internalFormat;\n        if (data.type !== undefined) texture.type = data.type;\n        if (data.colorSpace !== undefined) texture.colorSpace = data.colorSpace;\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n        if (data.generateMipmaps !== undefined) texture.generateMipmaps = data.generateMipmaps;\n        if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n        if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n        if (data.compareFunction !== undefined) texture.compareFunction = data.compareFunction;\n        if (data.userData !== undefined) texture.userData = data.userData;\n        textures[data.uuid] = texture;\n      }\n    }\n    return textures;\n  }\n  parseObject(data, geometries, materials, textures, animations) {\n    let object;\n    function getGeometry(name) {\n      if (geometries[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined geometry', name);\n      }\n      return geometries[name];\n    }\n    function getMaterial(name) {\n      if (name === undefined) return undefined;\n      if (Array.isArray(name)) {\n        const array = [];\n        for (let i = 0, l = name.length; i < l; i++) {\n          const uuid = name[i];\n          if (materials[uuid] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', uuid);\n          }\n          array.push(materials[uuid]);\n        }\n        return array;\n      }\n      if (materials[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined material', name);\n      }\n      return materials[name];\n    }\n    function getTexture(uuid) {\n      if (textures[uuid] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined texture', uuid);\n      }\n      return textures[uuid];\n    }\n    let geometry, material;\n    switch (data.type) {\n      case 'Scene':\n        object = new Scene();\n        if (data.background !== undefined) {\n          if (Number.isInteger(data.background)) {\n            object.background = new Color(data.background);\n          } else {\n            object.background = getTexture(data.background);\n          }\n        }\n        if (data.environment !== undefined) {\n          object.environment = getTexture(data.environment);\n        }\n        if (data.fog !== undefined) {\n          if (data.fog.type === 'Fog') {\n            object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n          } else if (data.fog.type === 'FogExp2') {\n            object.fog = new FogExp2(data.fog.color, data.fog.density);\n          }\n          if (data.fog.name !== '') {\n            object.fog.name = data.fog.name;\n          }\n        }\n        if (data.backgroundBlurriness !== undefined) object.backgroundBlurriness = data.backgroundBlurriness;\n        if (data.backgroundIntensity !== undefined) object.backgroundIntensity = data.backgroundIntensity;\n        if (data.backgroundRotation !== undefined) object.backgroundRotation.fromArray(data.backgroundRotation);\n        if (data.environmentIntensity !== undefined) object.environmentIntensity = data.environmentIntensity;\n        if (data.environmentRotation !== undefined) object.environmentRotation.fromArray(data.environmentRotation);\n        break;\n      case 'PerspectiveCamera':\n        object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n        if (data.focus !== undefined) object.focus = data.focus;\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n        if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n        break;\n      case 'OrthographicCamera':\n        object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n        break;\n      case 'AmbientLight':\n        object = new AmbientLight(data.color, data.intensity);\n        break;\n      case 'DirectionalLight':\n        object = new DirectionalLight(data.color, data.intensity);\n        object.target = data.target || '';\n        break;\n      case 'PointLight':\n        object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n        break;\n      case 'RectAreaLight':\n        object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n        break;\n      case 'SpotLight':\n        object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n        object.target = data.target || '';\n        break;\n      case 'HemisphereLight':\n        object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n        break;\n      case 'LightProbe':\n        object = new LightProbe().fromJSON(data);\n        break;\n      case 'SkinnedMesh':\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        object = new SkinnedMesh(geometry, material);\n        if (data.bindMode !== undefined) object.bindMode = data.bindMode;\n        if (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n        if (data.skeleton !== undefined) object.skeleton = data.skeleton;\n        break;\n      case 'Mesh':\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        object = new Mesh(geometry, material);\n        break;\n      case 'InstancedMesh':\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        const count = data.count;\n        const instanceMatrix = data.instanceMatrix;\n        const instanceColor = data.instanceColor;\n        object = new InstancedMesh(geometry, material, count);\n        object.instanceMatrix = new InstancedBufferAttribute(new Float32Array(instanceMatrix.array), 16);\n        if (instanceColor !== undefined) object.instanceColor = new InstancedBufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n        break;\n      case 'BatchedMesh':\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        object = new BatchedMesh(data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material);\n        object.geometry = geometry;\n        object.perObjectFrustumCulled = data.perObjectFrustumCulled;\n        object.sortObjects = data.sortObjects;\n        object._drawRanges = data.drawRanges;\n        object._reservedRanges = data.reservedRanges;\n        object._visibility = data.visibility;\n        object._active = data.active;\n        object._bounds = data.bounds.map(bound => {\n          const box = new Box3();\n          box.min.fromArray(bound.boxMin);\n          box.max.fromArray(bound.boxMax);\n          const sphere = new Sphere();\n          sphere.radius = bound.sphereRadius;\n          sphere.center.fromArray(bound.sphereCenter);\n          return {\n            boxInitialized: bound.boxInitialized,\n            box: box,\n            sphereInitialized: bound.sphereInitialized,\n            sphere: sphere\n          };\n        });\n        object._maxInstanceCount = data.maxInstanceCount;\n        object._maxVertexCount = data.maxVertexCount;\n        object._maxIndexCount = data.maxIndexCount;\n        object._geometryInitialized = data.geometryInitialized;\n        object._geometryCount = data.geometryCount;\n        object._matricesTexture = getTexture(data.matricesTexture.uuid);\n        if (data.colorsTexture !== undefined) object._colorsTexture = getTexture(data.colorsTexture.uuid);\n        break;\n      case 'LOD':\n        object = new LOD();\n        break;\n      case 'Line':\n        object = new Line(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n      case 'LineLoop':\n        object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n      case 'LineSegments':\n        object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n      case 'PointCloud':\n      case 'Points':\n        object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n      case 'Sprite':\n        object = new Sprite(getMaterial(data.material));\n        break;\n      case 'Group':\n        object = new Group();\n        break;\n      case 'Bone':\n        object = new Bone();\n        break;\n      default:\n        object = new Object3D();\n    }\n    object.uuid = data.uuid;\n    if (data.name !== undefined) object.name = data.name;\n    if (data.matrix !== undefined) {\n      object.matrix.fromArray(data.matrix);\n      if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n      if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n    } else {\n      if (data.position !== undefined) object.position.fromArray(data.position);\n      if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n      if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n      if (data.scale !== undefined) object.scale.fromArray(data.scale);\n    }\n    if (data.up !== undefined) object.up.fromArray(data.up);\n    if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n    if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n    if (data.shadow) {\n      if (data.shadow.intensity !== undefined) object.shadow.intensity = data.shadow.intensity;\n      if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n      if (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n      if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n      if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n      if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n    }\n    if (data.visible !== undefined) object.visible = data.visible;\n    if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n    if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n    if (data.userData !== undefined) object.userData = data.userData;\n    if (data.layers !== undefined) object.layers.mask = data.layers;\n    if (data.children !== undefined) {\n      const children = data.children;\n      for (let i = 0; i < children.length; i++) {\n        object.add(this.parseObject(children[i], geometries, materials, textures, animations));\n      }\n    }\n    if (data.animations !== undefined) {\n      const objectAnimations = data.animations;\n      for (let i = 0; i < objectAnimations.length; i++) {\n        const uuid = objectAnimations[i];\n        object.animations.push(animations[uuid]);\n      }\n    }\n    if (data.type === 'LOD') {\n      if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n      const levels = data.levels;\n      for (let l = 0; l < levels.length; l++) {\n        const level = levels[l];\n        const child = object.getObjectByProperty('uuid', level.object);\n        if (child !== undefined) {\n          object.addLevel(child, level.distance, level.hysteresis);\n        }\n      }\n    }\n    return object;\n  }\n  bindSkeletons(object, skeletons) {\n    if (Object.keys(skeletons).length === 0) return;\n    object.traverse(function (child) {\n      if (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n        const skeleton = skeletons[child.skeleton];\n        if (skeleton === undefined) {\n          console.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n        } else {\n          child.bind(skeleton, child.bindMatrix);\n        }\n      }\n    });\n  }\n  bindLightTargets(object) {\n    object.traverse(function (child) {\n      if (child.isDirectionalLight || child.isSpotLight) {\n        const uuid = child.target;\n        const target = object.getObjectByProperty('uuid', uuid);\n        if (target !== undefined) {\n          child.target = target;\n        } else {\n          child.target = new Object3D();\n        }\n      }\n    });\n  }\n}\nconst TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping\n};\nconst TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nconst TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\nclass ImageBitmapLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.isImageBitmapLoader = true;\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n    this.options = {\n      premultiplyAlpha: 'none'\n    };\n  }\n  setOptions(options) {\n    this.options = options;\n    return this;\n  }\n  load(url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    const scope = this;\n    const cached = Cache.get(url);\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n\n      // If cached is a promise, wait for it to resolve\n      if (cached.then) {\n        cached.then(imageBitmap => {\n          if (onLoad) onLoad(imageBitmap);\n          scope.manager.itemEnd(url);\n        }).catch(e => {\n          if (onError) onError(e);\n        });\n        return;\n      }\n\n      // If cached is not a promise (i.e., it's already an imageBitmap)\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n    const fetchOptions = {};\n    fetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n    fetchOptions.headers = this.requestHeader;\n    const promise = fetch(url, fetchOptions).then(function (res) {\n      return res.blob();\n    }).then(function (blob) {\n      return createImageBitmap(blob, Object.assign(scope.options, {\n        colorSpaceConversion: 'none'\n      }));\n    }).then(function (imageBitmap) {\n      Cache.add(url, imageBitmap);\n      if (onLoad) onLoad(imageBitmap);\n      scope.manager.itemEnd(url);\n      return imageBitmap;\n    }).catch(function (e) {\n      if (onError) onError(e);\n      Cache.remove(url);\n      scope.manager.itemError(url);\n      scope.manager.itemEnd(url);\n    });\n    Cache.add(url, promise);\n    scope.manager.itemStart(url);\n  }\n}\nlet _context;\nclass AudioContext {\n  static getContext() {\n    if (_context === undefined) {\n      _context = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    return _context;\n  }\n  static setContext(value) {\n    _context = value;\n  }\n}\nclass AudioLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        // Create a copy of the buffer. The `decodeAudioData` method\n        // detaches the buffer when complete, preventing reuse.\n        const bufferCopy = buffer.slice(0);\n        const context = AudioContext.getContext();\n        context.decodeAudioData(bufferCopy, function (audioBuffer) {\n          onLoad(audioBuffer);\n        }).catch(handleError);\n      } catch (e) {\n        handleError(e);\n      }\n    }, onProgress, onError);\n    function handleError(e) {\n      if (onError) {\n        onError(e);\n      } else {\n        console.error(e);\n      }\n      scope.manager.itemError(url);\n    }\n  }\n}\nconst _eyeRight = /*@__PURE__*/new Matrix4();\nconst _eyeLeft = /*@__PURE__*/new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/new Matrix4();\nclass StereoCamera {\n  constructor() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null\n    };\n  }\n  update(camera) {\n    const cache = this._cache;\n    const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n    if (needsUpdate) {\n      cache.focus = camera.focus;\n      cache.fov = camera.fov;\n      cache.aspect = camera.aspect * this.aspect;\n      cache.near = camera.near;\n      cache.far = camera.far;\n      cache.zoom = camera.zoom;\n      cache.eyeSep = this.eyeSep;\n\n      // Off-axis stereoscopic effect based on\n      // http://paulbourke.net/stereographics/stereorender/\n\n      _projectionMatrix.copy(camera.projectionMatrix);\n      const eyeSepHalf = cache.eyeSep / 2;\n      const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n      const ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n      let xmin, xmax;\n\n      // translate xOffset\n\n      _eyeLeft.elements[12] = -eyeSepHalf;\n      _eyeRight.elements[12] = eyeSepHalf;\n\n      // for left eye\n\n      xmin = -ymax * cache.aspect + eyeSepOnProjection;\n      xmax = ymax * cache.aspect + eyeSepOnProjection;\n      _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraL.projectionMatrix.copy(_projectionMatrix);\n\n      // for right eye\n\n      xmin = -ymax * cache.aspect - eyeSepOnProjection;\n      xmax = ymax * cache.aspect - eyeSepOnProjection;\n      _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraR.projectionMatrix.copy(_projectionMatrix);\n    }\n    this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n    this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n  }\n}\nclass ArrayCamera extends PerspectiveCamera {\n  constructor() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    super();\n    this.isArrayCamera = true;\n    this.cameras = array;\n  }\n}\nclass Clock {\n  constructor() {\n    let autoStart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.autoStart = autoStart;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n  start() {\n    this.startTime = now();\n    this.oldTime = this.startTime;\n    this.elapsedTime = 0;\n    this.running = true;\n  }\n  stop() {\n    this.getElapsedTime();\n    this.running = false;\n    this.autoStart = false;\n  }\n  getElapsedTime() {\n    this.getDelta();\n    return this.elapsedTime;\n  }\n  getDelta() {\n    let diff = 0;\n    if (this.autoStart && !this.running) {\n      this.start();\n      return 0;\n    }\n    if (this.running) {\n      const newTime = now();\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n    return diff;\n  }\n}\nfunction now() {\n  return performance.now();\n}\nconst _position$1 = /*@__PURE__*/new Vector3();\nconst _quaternion$1 = /*@__PURE__*/new Quaternion();\nconst _scale$1 = /*@__PURE__*/new Vector3();\nconst _orientation$1 = /*@__PURE__*/new Vector3();\nclass AudioListener extends Object3D {\n  constructor() {\n    super();\n    this.type = 'AudioListener';\n    this.context = AudioContext.getContext();\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n    this.timeDelta = 0;\n\n    // private\n\n    this._clock = new Clock();\n  }\n  getInput() {\n    return this.gain;\n  }\n  removeFilter() {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n    return this;\n  }\n  getFilter() {\n    return this.filter;\n  }\n  setFilter(value) {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n    return this;\n  }\n  getMasterVolume() {\n    return this.gain.gain.value;\n  }\n  setMasterVolume(value) {\n    this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n    return this;\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    const listener = this.context.listener;\n    const up = this.up;\n    this.timeDelta = this._clock.getDelta();\n    this.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n    _orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n    if (listener.positionX) {\n      // code path for Chrome (see #14393)\n\n      const endTime = this.context.currentTime + this.timeDelta;\n      listener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n      listener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n      listener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n      listener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n      listener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n      listener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n      listener.upX.linearRampToValueAtTime(up.x, endTime);\n      listener.upY.linearRampToValueAtTime(up.y, endTime);\n      listener.upZ.linearRampToValueAtTime(up.z, endTime);\n    } else {\n      listener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n      listener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n    }\n  }\n}\nclass Audio extends Object3D {\n  constructor(listener) {\n    super();\n    this.type = 'Audio';\n    this.listener = listener;\n    this.context = listener.context;\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n    this.autoplay = false;\n    this.buffer = null;\n    this.detune = 0;\n    this.loop = false;\n    this.loopStart = 0;\n    this.loopEnd = 0;\n    this.offset = 0;\n    this.duration = undefined;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.source = null;\n    this.sourceType = 'empty';\n    this._startedAt = 0;\n    this._progress = 0;\n    this._connected = false;\n    this.filters = [];\n  }\n  getOutput() {\n    return this.gain;\n  }\n  setNodeSource(audioNode) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'audioNode';\n    this.source = audioNode;\n    this.connect();\n    return this;\n  }\n  setMediaElementSource(mediaElement) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'mediaNode';\n    this.source = this.context.createMediaElementSource(mediaElement);\n    this.connect();\n    return this;\n  }\n  setMediaStreamSource(mediaStream) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'mediaStreamNode';\n    this.source = this.context.createMediaStreamSource(mediaStream);\n    this.connect();\n    return this;\n  }\n  setBuffer(audioBuffer) {\n    this.buffer = audioBuffer;\n    this.sourceType = 'buffer';\n    if (this.autoplay) this.play();\n    return this;\n  }\n  play() {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (this.isPlaying === true) {\n      console.warn('THREE.Audio: Audio is already playing.');\n      return;\n    }\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n    this._startedAt = this.context.currentTime + delay;\n    const source = this.context.createBufferSource();\n    source.buffer = this.buffer;\n    source.loop = this.loop;\n    source.loopStart = this.loopStart;\n    source.loopEnd = this.loopEnd;\n    source.onended = this.onEnded.bind(this);\n    source.start(this._startedAt, this._progress + this.offset, this.duration);\n    this.isPlaying = true;\n    this.source = source;\n    this.setDetune(this.detune);\n    this.setPlaybackRate(this.playbackRate);\n    return this.connect();\n  }\n  pause() {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n    if (this.isPlaying === true) {\n      // update current progress\n\n      this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n      if (this.loop === true) {\n        // ensure _progress does not exceed duration with looped audios\n\n        this._progress = this._progress % (this.duration || this.buffer.duration);\n      }\n      this.source.stop();\n      this.source.onended = null;\n      this.isPlaying = false;\n    }\n    return this;\n  }\n  stop() {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n    this._progress = 0;\n    if (this.source !== null) {\n      this.source.stop(this.context.currentTime + delay);\n      this.source.onended = null;\n    }\n    this.isPlaying = false;\n    return this;\n  }\n  connect() {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n      for (let i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n    this._connected = true;\n    return this;\n  }\n  disconnect() {\n    if (this._connected === false) {\n      return;\n    }\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n      for (let i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n    this._connected = false;\n    return this;\n  }\n  getFilters() {\n    return this.filters;\n  }\n  setFilters(value) {\n    if (!value) value = [];\n    if (this._connected === true) {\n      this.disconnect();\n      this.filters = value.slice();\n      this.connect();\n    } else {\n      this.filters = value.slice();\n    }\n    return this;\n  }\n  setDetune(value) {\n    this.detune = value;\n    if (this.isPlaying === true && this.source.detune !== undefined) {\n      this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n    }\n    return this;\n  }\n  getDetune() {\n    return this.detune;\n  }\n  getFilter() {\n    return this.getFilters()[0];\n  }\n  setFilter(filter) {\n    return this.setFilters(filter ? [filter] : []);\n  }\n  setPlaybackRate(value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n    this.playbackRate = value;\n    if (this.isPlaying === true) {\n      this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n    }\n    return this;\n  }\n  getPlaybackRate() {\n    return this.playbackRate;\n  }\n  onEnded() {\n    this.isPlaying = false;\n    this._progress = 0;\n  }\n  getLoop() {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return false;\n    }\n    return this.loop;\n  }\n  setLoop(value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n    this.loop = value;\n    if (this.isPlaying === true) {\n      this.source.loop = this.loop;\n    }\n    return this;\n  }\n  setLoopStart(value) {\n    this.loopStart = value;\n    return this;\n  }\n  setLoopEnd(value) {\n    this.loopEnd = value;\n    return this;\n  }\n  getVolume() {\n    return this.gain.gain.value;\n  }\n  setVolume(value) {\n    this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n    return this;\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    if (source.sourceType !== 'buffer') {\n      console.warn('THREE.Audio: Audio source type cannot be copied.');\n      return this;\n    }\n    this.autoplay = source.autoplay;\n    this.buffer = source.buffer;\n    this.detune = source.detune;\n    this.loop = source.loop;\n    this.loopStart = source.loopStart;\n    this.loopEnd = source.loopEnd;\n    this.offset = source.offset;\n    this.duration = source.duration;\n    this.playbackRate = source.playbackRate;\n    this.hasPlaybackControl = source.hasPlaybackControl;\n    this.sourceType = source.sourceType;\n    this.filters = source.filters.slice();\n    return this;\n  }\n  clone(recursive) {\n    return new this.constructor(this.listener).copy(this, recursive);\n  }\n}\nconst _position = /*@__PURE__*/new Vector3();\nconst _quaternion = /*@__PURE__*/new Quaternion();\nconst _scale = /*@__PURE__*/new Vector3();\nconst _orientation = /*@__PURE__*/new Vector3();\nclass PositionalAudio extends Audio {\n  constructor(listener) {\n    super(listener);\n    this.panner = this.context.createPanner();\n    this.panner.panningModel = 'HRTF';\n    this.panner.connect(this.gain);\n  }\n  connect() {\n    super.connect();\n    this.panner.connect(this.gain);\n  }\n  disconnect() {\n    super.disconnect();\n    this.panner.disconnect(this.gain);\n  }\n  getOutput() {\n    return this.panner;\n  }\n  getRefDistance() {\n    return this.panner.refDistance;\n  }\n  setRefDistance(value) {\n    this.panner.refDistance = value;\n    return this;\n  }\n  getRolloffFactor() {\n    return this.panner.rolloffFactor;\n  }\n  setRolloffFactor(value) {\n    this.panner.rolloffFactor = value;\n    return this;\n  }\n  getDistanceModel() {\n    return this.panner.distanceModel;\n  }\n  setDistanceModel(value) {\n    this.panner.distanceModel = value;\n    return this;\n  }\n  getMaxDistance() {\n    return this.panner.maxDistance;\n  }\n  setMaxDistance(value) {\n    this.panner.maxDistance = value;\n    return this;\n  }\n  setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n    this.panner.coneInnerAngle = coneInnerAngle;\n    this.panner.coneOuterAngle = coneOuterAngle;\n    this.panner.coneOuterGain = coneOuterGain;\n    return this;\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n    this.matrixWorld.decompose(_position, _quaternion, _scale);\n    _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n    const panner = this.panner;\n    if (panner.positionX) {\n      // code path for Chrome and Firefox (see #14393)\n\n      const endTime = this.context.currentTime + this.listener.timeDelta;\n      panner.positionX.linearRampToValueAtTime(_position.x, endTime);\n      panner.positionY.linearRampToValueAtTime(_position.y, endTime);\n      panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n      panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n      panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n      panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n    } else {\n      panner.setPosition(_position.x, _position.y, _position.z);\n      panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n    }\n  }\n}\nclass AudioAnalyser {\n  constructor(audio) {\n    let fftSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2048;\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n  getFrequencyData() {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  }\n  getAverageFrequency() {\n    let value = 0;\n    const data = this.getFrequencyData();\n    for (let i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n    return value / data.length;\n  }\n}\nclass PropertyMixer {\n  constructor(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    let mixFunction, mixFunctionAdditive, setIdentity;\n\n    // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n    //\n    // 'add' is used for additive cumulative results\n    //\n    // 'work' is optional and is only present for quaternion types. It is used\n    // to store intermediate quaternion multiplication results\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        mixFunctionAdditive = this._slerpAdditive;\n        setIdentity = this._setAdditiveIdentityQuaternion;\n        this.buffer = new Float64Array(valueSize * 6);\n        this._workIndex = 5;\n        break;\n      case 'string':\n      case 'bool':\n        mixFunction = this._select;\n\n        // Use the regular mix function and for additive on these types,\n        // additive is not relevant for non-numeric types\n        mixFunctionAdditive = this._select;\n        setIdentity = this._setAdditiveIdentityOther;\n        this.buffer = new Array(valueSize * 5);\n        break;\n      default:\n        mixFunction = this._lerp;\n        mixFunctionAdditive = this._lerpAdditive;\n        setIdentity = this._setAdditiveIdentityNumeric;\n        this.buffer = new Float64Array(valueSize * 5);\n    }\n    this._mixBufferRegion = mixFunction;\n    this._mixBufferRegionAdditive = mixFunctionAdditive;\n    this._setIdentity = setIdentity;\n    this._origIndex = 3;\n    this._addIndex = 4;\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate(accuIndex, weight) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      offset = accuIndex * stride + stride;\n    let currentWeight = this.cumulativeWeight;\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n\n      for (let i = 0; i !== stride; ++i) {\n        buffer[offset + i] = buffer[i];\n      }\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n\n      currentWeight += weight;\n      const mix = weight / currentWeight;\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n    this.cumulativeWeight = currentWeight;\n  }\n\n  // accumulate data in the 'incoming' region into 'add'\n  accumulateAdditive(weight) {\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      offset = stride * this._addIndex;\n    if (this.cumulativeWeightAdditive === 0) {\n      // add = identity\n\n      this._setIdentity();\n    }\n\n    // add := add + incoming * weight\n\n    this._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n    this.cumulativeWeightAdditive += weight;\n  }\n\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply(accuIndex) {\n    const stride = this.valueSize,\n      buffer = this.buffer,\n      offset = accuIndex * stride + stride,\n      weight = this.cumulativeWeight,\n      weightAdditive = this.cumulativeWeightAdditive,\n      binding = this.binding;\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n    if (weight < 1) {\n      // accuN := accuN + original * ( 1 - cumulativeWeight )\n\n      const originalValueOffset = stride * this._origIndex;\n      this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n    }\n    if (weightAdditive > 0) {\n      // accuN := accuN + additive accuN\n\n      this._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n    }\n    for (let i = stride, e = stride + stride; i !== e; ++i) {\n      if (buffer[i] !== buffer[i + stride]) {\n        // value has changed -> update scene graph\n\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  }\n\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState() {\n    const binding = this.binding;\n    const buffer = this.buffer,\n      stride = this.valueSize,\n      originalValueOffset = stride * this._origIndex;\n    binding.getValue(buffer, originalValueOffset);\n\n    // accu[0..1] := orig -- initially detect changes against the original\n    for (let i = stride, e = originalValueOffset; i !== e; ++i) {\n      buffer[i] = buffer[originalValueOffset + i % stride];\n    }\n\n    // Add to identity for additive\n    this._setIdentity();\n    this.cumulativeWeight = 0;\n    this.cumulativeWeightAdditive = 0;\n  }\n\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState() {\n    const originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  }\n  _setAdditiveIdentityNumeric() {\n    const startIndex = this._addIndex * this.valueSize;\n    const endIndex = startIndex + this.valueSize;\n    for (let i = startIndex; i < endIndex; i++) {\n      this.buffer[i] = 0;\n    }\n  }\n  _setAdditiveIdentityQuaternion() {\n    this._setAdditiveIdentityNumeric();\n    this.buffer[this._addIndex * this.valueSize + 3] = 1;\n  }\n  _setAdditiveIdentityOther() {\n    const startIndex = this._origIndex * this.valueSize;\n    const targetIndex = this._addIndex * this.valueSize;\n    for (let i = 0; i < this.valueSize; i++) {\n      this.buffer[targetIndex + i] = this.buffer[startIndex + i];\n    }\n  }\n\n  // mix functions\n\n  _select(buffer, dstOffset, srcOffset, t, stride) {\n    if (t >= 0.5) {\n      for (let i = 0; i !== stride; ++i) {\n        buffer[dstOffset + i] = buffer[srcOffset + i];\n      }\n    }\n  }\n  _slerp(buffer, dstOffset, srcOffset, t) {\n    Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n  }\n  _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n    const workOffset = this._workIndex * stride;\n\n    // Store result in intermediate buffer offset\n    Quaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset);\n\n    // Slerp to the intermediate result\n    Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n  }\n  _lerp(buffer, dstOffset, srcOffset, t, stride) {\n    const s = 1 - t;\n    for (let i = 0; i !== stride; ++i) {\n      const j = dstOffset + i;\n      buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n    }\n  }\n  _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n    for (let i = 0; i !== stride; ++i) {\n      const j = dstOffset + i;\n      buffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n    }\n  }\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g');\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*//((?:WC+[\\/:])*)/.source.replace('WC', _wordChar);\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*//(WCOD+)?/.source.replace('WCOD', _wordCharOrDot);\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*//(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar);\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*//\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\nconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\nconst _supportedObjectNames = ['material', 'materials', 'bones', 'map'];\nclass Composite {\n  constructor(targetGroup, path, optionalParsedPath) {\n    const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n  getValue(array, offset) {\n    this.bind(); // bind all binding\n\n    const firstValidIndex = this._targetGroup.nCachedObjects_,\n      binding = this._bindings[firstValidIndex];\n\n    // and only call .getValue on the first\n    if (binding !== undefined) binding.getValue(array, offset);\n  }\n  setValue(array, offset) {\n    const bindings = this._bindings;\n    for (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].setValue(array, offset);\n    }\n  }\n  bind() {\n    const bindings = this._bindings;\n    for (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].bind();\n    }\n  }\n  unbind() {\n    const bindings = this._bindings;\n    for (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].unbind();\n    }\n  }\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n  constructor(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName);\n    this.rootNode = rootNode;\n\n    // initial state of these methods that calls 'bind'\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n  static create(root, path, parsedPath) {\n    if (!(root && root.isAnimationObjectGroup)) {\n      return new PropertyBinding(root, path, parsedPath);\n    } else {\n      return new PropertyBinding.Composite(root, path, parsedPath);\n    }\n  }\n\n  /**\n   * Replaces spaces with underscores and removes unsupported characters from\n   * node names, to ensure compatibility with parseTrackName().\n   *\n   * @param {string} name Node name to be sanitized.\n   * @return {string}\n   */\n  static sanitizeNodeName(name) {\n    return name.replace(/\\s/g, '_').replace(_reservedRe, '');\n  }\n  static parseTrackName(trackName) {\n    const matches = _trackRe.exec(trackName);\n    if (matches === null) {\n      throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n    }\n    const results = {\n      // directoryName: matches[ 1 ], // (tschw) currently unused\n      nodeName: matches[2],\n      objectName: matches[3],\n      objectIndex: matches[4],\n      propertyName: matches[5],\n      // required\n      propertyIndex: matches[6]\n    };\n    const lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n    if (lastDot !== undefined && lastDot !== -1) {\n      const objectName = results.nodeName.substring(lastDot + 1);\n\n      // Object names must be checked against an allowlist. Otherwise, there\n      // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n      // 'bar' could be the objectName, or part of a nodeName (which can\n      // include '.' characters).\n      if (_supportedObjectNames.indexOf(objectName) !== -1) {\n        results.nodeName = results.nodeName.substring(0, lastDot);\n        results.objectName = objectName;\n      }\n    }\n    if (results.propertyName === null || results.propertyName.length === 0) {\n      throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n    }\n    return results;\n  }\n  static findNode(root, nodeName) {\n    if (nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n      return root;\n    }\n\n    // search into skeleton bones.\n    if (root.skeleton) {\n      const bone = root.skeleton.getBoneByName(nodeName);\n      if (bone !== undefined) {\n        return bone;\n      }\n    }\n\n    // search into node subtree.\n    if (root.children) {\n      const searchNodeSubtree = function (children) {\n        for (let i = 0; i < children.length; i++) {\n          const childNode = children[i];\n          if (childNode.name === nodeName || childNode.uuid === nodeName) {\n            return childNode;\n          }\n          const result = searchNodeSubtree(childNode.children);\n          if (result) return result;\n        }\n        return null;\n      };\n      const subTreeNode = searchNodeSubtree(root.children);\n      if (subTreeNode) {\n        return subTreeNode;\n      }\n    }\n    return null;\n  }\n\n  // these are used to \"bind\" a nonexistent property\n  _getValue_unavailable() {}\n  _setValue_unavailable() {}\n\n  // Getters\n\n  _getValue_direct(buffer, offset) {\n    buffer[offset] = this.targetObject[this.propertyName];\n  }\n  _getValue_array(buffer, offset) {\n    const source = this.resolvedProperty;\n    for (let i = 0, n = source.length; i !== n; ++i) {\n      buffer[offset++] = source[i];\n    }\n  }\n  _getValue_arrayElement(buffer, offset) {\n    buffer[offset] = this.resolvedProperty[this.propertyIndex];\n  }\n  _getValue_toArray(buffer, offset) {\n    this.resolvedProperty.toArray(buffer, offset);\n  }\n\n  // Direct\n\n  _setValue_direct(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n  }\n  _setValue_direct_setNeedsUpdate(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }\n  _setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  // EntireArray\n\n  _setValue_array(buffer, offset) {\n    const dest = this.resolvedProperty;\n    for (let i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n  }\n  _setValue_array_setNeedsUpdate(buffer, offset) {\n    const dest = this.resolvedProperty;\n    for (let i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n    this.targetObject.needsUpdate = true;\n  }\n  _setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n    const dest = this.resolvedProperty;\n    for (let i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  // ArrayElement\n\n  _setValue_arrayElement(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n  }\n  _setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }\n  _setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n\n  // HasToFromArray\n\n  _setValue_fromArray(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }\n  _setValue_fromArray_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }\n  _setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }\n  _getValue_unbound(targetArray, offset) {\n    this.bind();\n    this.getValue(targetArray, offset);\n  }\n  _setValue_unbound(sourceArray, offset) {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  }\n\n  // create getter / setter pair for a property in the scene graph\n  bind() {\n    let targetObject = this.node;\n    const parsedPath = this.parsedPath;\n    const objectName = parsedPath.objectName;\n    const propertyName = parsedPath.propertyName;\n    let propertyIndex = parsedPath.propertyIndex;\n    if (!targetObject) {\n      targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName);\n      this.node = targetObject;\n    }\n\n    // set fail state so we can just 'return' on error\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable;\n\n    // ensure there is a value node\n    if (!targetObject) {\n      console.warn('THREE.PropertyBinding: No target node found for track: ' + this.path + '.');\n      return;\n    }\n    if (objectName) {\n      let objectIndex = parsedPath.objectIndex;\n\n      // special cases were we need to reach deeper into the hierarchy to get the face materials....\n      switch (objectName) {\n        case 'materials':\n          if (!targetObject.material) {\n            console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n            return;\n          }\n          if (!targetObject.material.materials) {\n            console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n            return;\n          }\n          targetObject = targetObject.material.materials;\n          break;\n        case 'bones':\n          if (!targetObject.skeleton) {\n            console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n            return;\n          }\n\n          // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n\n          targetObject = targetObject.skeleton.bones;\n\n          // support resolving morphTarget names into indices.\n          for (let i = 0; i < targetObject.length; i++) {\n            if (targetObject[i].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n          break;\n        case 'map':\n          if ('map' in targetObject) {\n            targetObject = targetObject.map;\n            break;\n          }\n          if (!targetObject.material) {\n            console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n            return;\n          }\n          if (!targetObject.material.map) {\n            console.error('THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this);\n            return;\n          }\n          targetObject = targetObject.material.map;\n          break;\n        default:\n          if (targetObject[objectName] === undefined) {\n            console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n            return;\n          }\n          targetObject = targetObject[objectName];\n      }\n      if (objectIndex !== undefined) {\n        if (targetObject[objectIndex] === undefined) {\n          console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n          return;\n        }\n        targetObject = targetObject[objectIndex];\n      }\n    }\n\n    // resolve property\n    const nodeProperty = targetObject[propertyName];\n    if (nodeProperty === undefined) {\n      const nodeName = parsedPath.nodeName;\n      console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n      return;\n    }\n\n    // determine versioning scheme\n    let versioning = this.Versioning.None;\n    this.targetObject = targetObject;\n    if (targetObject.needsUpdate !== undefined) {\n      // material\n\n      versioning = this.Versioning.NeedsUpdate;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n      // node transform\n\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n    }\n\n    // determine how the property gets bound\n    let bindingType = this.BindingType.Direct;\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n\n      if (propertyName === 'morphTargetInfluences') {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n        // support resolving morphTarget names into indices.\n        if (!targetObject.geometry) {\n          console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n          return;\n        }\n        if (!targetObject.geometry.morphAttributes) {\n          console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n          return;\n        }\n        if (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n          propertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n        }\n      }\n      bindingType = this.BindingType.ArrayElement;\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n      // must use copy for Object3D.Euler/Quaternion\n\n      bindingType = this.BindingType.HasFromToArray;\n      this.resolvedProperty = nodeProperty;\n    } else if (Array.isArray(nodeProperty)) {\n      bindingType = this.BindingType.EntireArray;\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    }\n\n    // select getter / setter\n    this.getValue = this.GetterByBindingType[bindingType];\n    this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n  }\n  unbind() {\n    this.node = null;\n\n    // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n}\nPropertyBinding.Composite = Composite;\nPropertyBinding.prototype.BindingType = {\n  Direct: 0,\n  EntireArray: 1,\n  ArrayElement: 2,\n  HasFromToArray: 3\n};\nPropertyBinding.prototype.Versioning = {\n  None: 0,\n  NeedsUpdate: 1,\n  MatrixWorldNeedsUpdate: 2\n};\nPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[\n// Direct\nPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [\n// EntireArray\n\nPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [\n// ArrayElement\nPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [\n// HasToFromArray\nPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n  constructor() {\n    this.isAnimationObjectGroup = true;\n    this.uuid = generateUUID();\n\n    // cached objects followed by the active ones\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    const indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n    this._paths = []; // inside: string\n    this._parsedPaths = []; // inside: { we don't care, here }\n    this._bindings = []; // inside: Array< PropertyBinding >\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    const scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n      },\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n    };\n  }\n  add() {\n    const objects = this._objects,\n      indicesByUUID = this._indicesByUUID,\n      paths = this._paths,\n      parsedPaths = this._parsedPaths,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n    let knownObject = undefined,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_;\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      const object = arguments[i],\n        uuid = object.uuid;\n      let index = indicesByUUID[uuid];\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n\n        index = nObjects++;\n        indicesByUUID[uuid] = index;\n        objects.push(object);\n\n        // accounting is done, now do the same for all bindings\n\n        for (let j = 0, m = nBindings; j !== m; ++j) {\n          bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n        }\n      } else if (index < nCachedObjects) {\n        knownObject = objects[index];\n\n        // move existing object to the ACTIVE region\n\n        const firstActiveIndex = --nCachedObjects,\n          lastCachedObject = objects[firstActiveIndex];\n        indicesByUUID[lastCachedObject.uuid] = index;\n        objects[index] = lastCachedObject;\n        indicesByUUID[uuid] = firstActiveIndex;\n        objects[firstActiveIndex] = object;\n\n        // accounting is done, now do the same for all bindings\n\n        for (let j = 0, m = nBindings; j !== m; ++j) {\n          const bindingsForPath = bindings[j],\n            lastCached = bindingsForPath[firstActiveIndex];\n          let binding = bindingsForPath[index];\n          bindingsForPath[index] = lastCached;\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n\n            binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n          }\n          bindingsForPath[firstActiveIndex] = binding;\n        }\n      } else if (objects[index] !== knownObject) {\n        console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n      } // else the object is already where we want it to be\n    } // for arguments\n\n    this.nCachedObjects_ = nCachedObjects;\n  }\n  remove() {\n    const objects = this._objects,\n      indicesByUUID = this._indicesByUUID,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n    let nCachedObjects = this.nCachedObjects_;\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      const object = arguments[i],\n        uuid = object.uuid,\n        index = indicesByUUID[uuid];\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n\n        const lastCachedIndex = nCachedObjects++,\n          firstActiveObject = objects[lastCachedIndex];\n        indicesByUUID[firstActiveObject.uuid] = index;\n        objects[index] = firstActiveObject;\n        indicesByUUID[uuid] = lastCachedIndex;\n        objects[lastCachedIndex] = object;\n\n        // accounting is done, now do the same for all bindings\n\n        for (let j = 0, m = nBindings; j !== m; ++j) {\n          const bindingsForPath = bindings[j],\n            firstActive = bindingsForPath[lastCachedIndex],\n            binding = bindingsForPath[index];\n          bindingsForPath[index] = firstActive;\n          bindingsForPath[lastCachedIndex] = binding;\n        }\n      }\n    } // for arguments\n\n    this.nCachedObjects_ = nCachedObjects;\n  }\n\n  // remove & forget\n  uncache() {\n    const objects = this._objects,\n      indicesByUUID = this._indicesByUUID,\n      bindings = this._bindings,\n      nBindings = bindings.length;\n    let nCachedObjects = this.nCachedObjects_,\n      nObjects = objects.length;\n    for (let i = 0, n = arguments.length; i !== n; ++i) {\n      const object = arguments[i],\n        uuid = object.uuid,\n        index = indicesByUUID[uuid];\n      if (index !== undefined) {\n        delete indicesByUUID[uuid];\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n\n          const firstActiveIndex = --nCachedObjects,\n            lastCachedObject = objects[firstActiveIndex],\n            lastIndex = --nObjects,\n            lastObject = objects[lastIndex];\n\n          // last cached object takes this object's place\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n\n          // last object goes to the activated slot and pop\n          indicesByUUID[lastObject.uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = lastObject;\n          objects.pop();\n\n          // accounting is done, now do the same for all bindings\n\n          for (let j = 0, m = nBindings; j !== m; ++j) {\n            const bindingsForPath = bindings[j],\n              lastCached = bindingsForPath[firstActiveIndex],\n              last = bindingsForPath[lastIndex];\n            bindingsForPath[index] = lastCached;\n            bindingsForPath[firstActiveIndex] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n\n          const lastIndex = --nObjects,\n            lastObject = objects[lastIndex];\n          if (lastIndex > 0) {\n            indicesByUUID[lastObject.uuid] = index;\n          }\n          objects[index] = lastObject;\n          objects.pop();\n\n          // accounting is done, now do the same for all bindings\n\n          for (let j = 0, m = nBindings; j !== m; ++j) {\n            const bindingsForPath = bindings[j];\n            bindingsForPath[index] = bindingsForPath[lastIndex];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n      } // if object is known\n    } // for arguments\n\n    this.nCachedObjects_ = nCachedObjects;\n  }\n\n  // Internal interface used by befriended PropertyBinding.Composite:\n\n  subscribe_(path, parsedPath) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n\n    const indicesByPath = this._bindingsIndicesByPath;\n    let index = indicesByPath[path];\n    const bindings = this._bindings;\n    if (index !== undefined) return bindings[index];\n    const paths = this._paths,\n      parsedPaths = this._parsedPaths,\n      objects = this._objects,\n      nObjects = objects.length,\n      nCachedObjects = this.nCachedObjects_,\n      bindingsForPath = new Array(nObjects);\n    index = bindings.length;\n    indicesByPath[path] = index;\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n    for (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n      const object = objects[i];\n      bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n    }\n    return bindingsForPath;\n  }\n  unsubscribe_(path) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n\n    const indicesByPath = this._bindingsIndicesByPath,\n      index = indicesByPath[path];\n    if (index !== undefined) {\n      const paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        lastBindingsIndex = bindings.length - 1,\n        lastBindings = bindings[lastBindingsIndex],\n        lastBindingsPath = path[lastBindingsIndex];\n      indicesByPath[lastBindingsPath] = index;\n      bindings[index] = lastBindings;\n      bindings.pop();\n      parsedPaths[index] = parsedPaths[lastBindingsIndex];\n      parsedPaths.pop();\n      paths[index] = paths[lastBindingsIndex];\n      paths.pop();\n    }\n  }\n}\nclass AnimationAction {\n  constructor(mixer, clip) {\n    let localRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let blendMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : clip.blendMode;\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot;\n    this.blendMode = blendMode;\n    const tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n    const interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n    for (let i = 0; i !== nTracks; ++i) {\n      const interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n\n    // inside: PropertyMixer (managed by the mixer)\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopRepeat;\n    this._loopCount = -1;\n\n    // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n    this._startTime = null;\n\n    // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  }\n\n  // State & Scheduling\n\n  play() {\n    this._mixer._activateAction(this);\n    return this;\n  }\n  stop() {\n    this._mixer._deactivateAction(this);\n    return this.reset();\n  }\n  reset() {\n    this.paused = false;\n    this.enabled = true;\n    this.time = 0; // restart clip\n    this._loopCount = -1; // forget previous loops\n    this._startTime = null; // forget scheduling\n\n    return this.stopFading().stopWarping();\n  }\n  isRunning() {\n    return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n  }\n\n  // return true when play has been called\n  isScheduled() {\n    return this._mixer._isActiveAction(this);\n  }\n  startAt(time) {\n    this._startTime = time;\n    return this;\n  }\n  setLoop(mode, repetitions) {\n    this.loop = mode;\n    this.repetitions = repetitions;\n    return this;\n  }\n\n  // Weight\n\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight(weight) {\n    this.weight = weight;\n\n    // note: same logic as when updated at runtime\n    this._effectiveWeight = this.enabled ? weight : 0;\n    return this.stopFading();\n  }\n\n  // return the weight considering fading and .enabled\n  getEffectiveWeight() {\n    return this._effectiveWeight;\n  }\n  fadeIn(duration) {\n    return this._scheduleFading(duration, 0, 1);\n  }\n  fadeOut(duration) {\n    return this._scheduleFading(duration, 1, 0);\n  }\n  crossFadeFrom(fadeOutAction, duration, warp) {\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n    if (warp) {\n      const fadeInDuration = this._clip.duration,\n        fadeOutDuration = fadeOutAction._clip.duration,\n        startEndRatio = fadeOutDuration / fadeInDuration,\n        endStartRatio = fadeInDuration / fadeOutDuration;\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n    return this;\n  }\n  crossFadeTo(fadeInAction, duration, warp) {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  }\n  stopFading() {\n    const weightInterpolant = this._weightInterpolant;\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n    return this;\n  }\n\n  // Time Scale Control\n\n  // set the time scale stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale(timeScale) {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n    return this.stopWarping();\n  }\n\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale() {\n    return this._effectiveTimeScale;\n  }\n  setDuration(duration) {\n    this.timeScale = this._clip.duration / duration;\n    return this.stopWarping();\n  }\n  syncWith(action) {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n    return this.stopWarping();\n  }\n  halt(duration) {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  }\n  warp(startTimeScale, endTimeScale, duration) {\n    const mixer = this._mixer,\n      now = mixer.time,\n      timeScale = this.timeScale;\n    let interpolant = this._timeScaleInterpolant;\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._timeScaleInterpolant = interpolant;\n    }\n    const times = interpolant.parameterPositions,\n      values = interpolant.sampleValues;\n    times[0] = now;\n    times[1] = now + duration;\n    values[0] = startTimeScale / timeScale;\n    values[1] = endTimeScale / timeScale;\n    return this;\n  }\n  stopWarping() {\n    const timeScaleInterpolant = this._timeScaleInterpolant;\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n    return this;\n  }\n\n  // Object Accessors\n\n  getMixer() {\n    return this._mixer;\n  }\n  getClip() {\n    return this._clip;\n  }\n  getRoot() {\n    return this._localRoot || this._mixer._root;\n  }\n\n  // Interna\n\n  _update(time, deltaTime, timeDirection, accuIndex) {\n    // called by the mixer\n\n    if (!this.enabled) {\n      // call ._updateWeight() to update ._effectiveWeight\n\n      this._updateWeight(time);\n      return;\n    }\n    const startTime = this._startTime;\n    if (startTime !== null) {\n      // check for scheduled start of action\n\n      const timeRunning = (time - startTime) * timeDirection;\n      if (timeRunning < 0 || timeDirection === 0) {\n        deltaTime = 0;\n      } else {\n        this._startTime = null; // unschedule\n        deltaTime = timeDirection * timeRunning;\n      }\n    }\n\n    // apply time scale and advance time\n\n    deltaTime *= this._updateTimeScale(time);\n    const clipTime = this._updateTime(deltaTime);\n\n    // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n\n    const weight = this._updateWeight(time);\n    if (weight > 0) {\n      const interpolants = this._interpolants;\n      const propertyMixers = this._propertyBindings;\n      switch (this.blendMode) {\n        case AdditiveAnimationBlendMode:\n          for (let j = 0, m = interpolants.length; j !== m; ++j) {\n            interpolants[j].evaluate(clipTime);\n            propertyMixers[j].accumulateAdditive(weight);\n          }\n          break;\n        case NormalAnimationBlendMode:\n        default:\n          for (let j = 0, m = interpolants.length; j !== m; ++j) {\n            interpolants[j].evaluate(clipTime);\n            propertyMixers[j].accumulate(accuIndex, weight);\n          }\n      }\n    }\n  }\n  _updateWeight(time) {\n    let weight = 0;\n    if (this.enabled) {\n      weight = this.weight;\n      const interpolant = this._weightInterpolant;\n      if (interpolant !== null) {\n        const interpolantValue = interpolant.evaluate(time)[0];\n        weight *= interpolantValue;\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopFading();\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n    this._effectiveWeight = weight;\n    return weight;\n  }\n  _updateTimeScale(time) {\n    let timeScale = 0;\n    if (!this.paused) {\n      timeScale = this.timeScale;\n      const interpolant = this._timeScaleInterpolant;\n      if (interpolant !== null) {\n        const interpolantValue = interpolant.evaluate(time)[0];\n        timeScale *= interpolantValue;\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopWarping();\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  }\n  _updateTime(deltaTime) {\n    const duration = this._clip.duration;\n    const loop = this.loop;\n    let time = this.time + deltaTime;\n    let loopCount = this._loopCount;\n    const pingPong = loop === LoopPingPong;\n    if (deltaTime === 0) {\n      if (loopCount === -1) return time;\n      return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n    }\n    if (loop === LoopOnce) {\n      if (loopCount === -1) {\n        // just started\n\n        this._loopCount = 0;\n        this._setEndings(true, true, false);\n      }\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else {\n          this.time = time;\n          break handle_stop;\n        }\n        if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n        this.time = time;\n        this._mixer.dispatchEvent({\n          type: 'finished',\n          action: this,\n          direction: deltaTime < 0 ? -1 : 1\n        });\n      }\n    } else {\n      // repetitive Repeat or PingPong\n\n      if (loopCount === -1) {\n        // just started\n\n        if (deltaTime >= 0) {\n          loopCount = 0;\n          this._setEndings(true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n\n          this._setEndings(this.repetitions === 0, true, pingPong);\n        }\n      }\n      if (time >= duration || time < 0) {\n        // wrap around\n\n        const loopDelta = Math.floor(time / duration); // signed\n        time -= duration * loopDelta;\n        loopCount += Math.abs(loopDelta);\n        const pending = this.repetitions - loopCount;\n        if (pending <= 0) {\n          // have to stop (switch state, clamp time, fire event)\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          time = deltaTime > 0 ? duration : 0;\n          this.time = time;\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime > 0 ? 1 : -1\n          });\n        } else {\n          // keep running\n\n          if (pending === 1) {\n            // entering the last round\n\n            const atStart = deltaTime < 0;\n            this._setEndings(atStart, !atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n          this._loopCount = loopCount;\n          this.time = time;\n          this._mixer.dispatchEvent({\n            type: 'loop',\n            action: this,\n            loopDelta: loopDelta\n          });\n        }\n      } else {\n        this.time = time;\n      }\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n\n        return duration - time;\n      }\n    }\n    return time;\n  }\n  _setEndings(atStart, atEnd, pingPong) {\n    const settings = this._interpolantSettings;\n    if (pingPong) {\n      settings.endingStart = ZeroSlopeEnding;\n      settings.endingEnd = ZeroSlopeEnding;\n    } else {\n      // assuming for LoopOnce atStart == atEnd == true\n\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n      } else {\n        settings.endingStart = WrapAroundEnding;\n      }\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n      } else {\n        settings.endingEnd = WrapAroundEnding;\n      }\n    }\n  }\n  _scheduleFading(duration, weightNow, weightThen) {\n    const mixer = this._mixer,\n      now = mixer.time;\n    let interpolant = this._weightInterpolant;\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._weightInterpolant = interpolant;\n    }\n    const times = interpolant.parameterPositions,\n      values = interpolant.sampleValues;\n    times[0] = now;\n    values[0] = weightNow;\n    times[1] = now + duration;\n    values[1] = weightThen;\n    return this;\n  }\n}\nconst _controlInterpolantsResultBuffer = new Float32Array(1);\nclass AnimationMixer extends EventDispatcher {\n  constructor(root) {\n    super();\n    this._root = root;\n    this._initMemoryManager();\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n  _bindAction(action, prototypeAction) {\n    const root = action._localRoot || this._root,\n      tracks = action._clip.tracks,\n      nTracks = tracks.length,\n      bindings = action._propertyBindings,\n      interpolants = action._interpolants,\n      rootUuid = root.uuid,\n      bindingsByRoot = this._bindingsByRootAndName;\n    let bindingsByName = bindingsByRoot[rootUuid];\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[rootUuid] = bindingsByName;\n    }\n    for (let i = 0; i !== nTracks; ++i) {\n      const track = tracks[i],\n        trackName = track.name;\n      let binding = bindingsByName[trackName];\n      if (binding !== undefined) {\n        ++binding.referenceCount;\n        bindings[i] = binding;\n      } else {\n        binding = bindings[i];\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n\n          if (binding._cacheIndex === null) {\n            ++binding.referenceCount;\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n          continue;\n        }\n        const path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n        binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n        ++binding.referenceCount;\n        this._addInactiveBinding(binding, rootUuid, trackName);\n        bindings[i] = binding;\n      }\n      interpolants[i].resultBuffer = binding.buffer;\n    }\n  }\n  _activateAction(action) {\n    if (!this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n\n        const rootUuid = (action._localRoot || this._root).uuid,\n          clipUuid = action._clip.uuid,\n          actionsForClip = this._actionsByClip[clipUuid];\n        this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n      const bindings = action._propertyBindings;\n\n      // increment reference counts / sort out state\n      for (let i = 0, n = bindings.length; i !== n; ++i) {\n        const binding = bindings[i];\n        if (binding.useCount++ === 0) {\n          this._lendBinding(binding);\n          binding.saveOriginalState();\n        }\n      }\n      this._lendAction(action);\n    }\n  }\n  _deactivateAction(action) {\n    if (this._isActiveAction(action)) {\n      const bindings = action._propertyBindings;\n\n      // decrement reference counts / sort out state\n      for (let i = 0, n = bindings.length; i !== n; ++i) {\n        const binding = bindings[i];\n        if (--binding.useCount === 0) {\n          binding.restoreOriginalState();\n          this._takeBackBinding(binding);\n        }\n      }\n      this._takeBackAction(action);\n    }\n  }\n\n  // Memory manager\n\n  _initMemoryManager() {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n    this._nActiveActions = 0;\n    this._actionsByClip = {};\n    // inside:\n    // {\n    // \tknownActions: Array< AnimationAction > - used as prototypes\n    // \tactionByRoot: AnimationAction - lookup\n    // }\n\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n    this._nActiveBindings = 0;\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n    this._controlInterpolants = []; // same game as above\n    this._nActiveControlInterpolants = 0;\n    const scope = this;\n    this.stats = {\n      actions: {\n        get total() {\n          return scope._actions.length;\n        },\n        get inUse() {\n          return scope._nActiveActions;\n        }\n      },\n      bindings: {\n        get total() {\n          return scope._bindings.length;\n        },\n        get inUse() {\n          return scope._nActiveBindings;\n        }\n      },\n      controlInterpolants: {\n        get total() {\n          return scope._controlInterpolants.length;\n        },\n        get inUse() {\n          return scope._nActiveControlInterpolants;\n        }\n      }\n    };\n  }\n\n  // Memory management for AnimationAction objects\n\n  _isActiveAction(action) {\n    const index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  }\n  _addInactiveAction(action, clipUuid, rootUuid) {\n    const actions = this._actions,\n      actionsByClip = this._actionsByClip;\n    let actionsForClip = actionsByClip[clipUuid];\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [action],\n        actionByRoot: {}\n      };\n      action._byClipCacheIndex = 0;\n      actionsByClip[clipUuid] = actionsForClip;\n    } else {\n      const knownActions = actionsForClip.knownActions;\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n    action._cacheIndex = actions.length;\n    actions.push(action);\n    actionsForClip.actionByRoot[rootUuid] = action;\n  }\n  _removeInactiveAction(action) {\n    const actions = this._actions,\n      lastInactiveAction = actions[actions.length - 1],\n      cacheIndex = action._cacheIndex;\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[cacheIndex] = lastInactiveAction;\n    actions.pop();\n    action._cacheIndex = null;\n    const clipUuid = action._clip.uuid,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[clipUuid],\n      knownActionsForClip = actionsForClip.knownActions,\n      lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n      byClipCacheIndex = action._byClipCacheIndex;\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n    knownActionsForClip.pop();\n    action._byClipCacheIndex = null;\n    const actionByRoot = actionsForClip.actionByRoot,\n      rootUuid = (action._localRoot || this._root).uuid;\n    delete actionByRoot[rootUuid];\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[clipUuid];\n    }\n    this._removeInactiveBindingsForAction(action);\n  }\n  _removeInactiveBindingsForAction(action) {\n    const bindings = action._propertyBindings;\n    for (let i = 0, n = bindings.length; i !== n; ++i) {\n      const binding = bindings[i];\n      if (--binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  }\n  _lendAction(action) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n\n    const actions = this._actions,\n      prevIndex = action._cacheIndex,\n      lastActiveIndex = this._nActiveActions++,\n      firstInactiveAction = actions[lastActiveIndex];\n    action._cacheIndex = lastActiveIndex;\n    actions[lastActiveIndex] = action;\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = firstInactiveAction;\n  }\n  _takeBackAction(action) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n\n    const actions = this._actions,\n      prevIndex = action._cacheIndex,\n      firstInactiveIndex = --this._nActiveActions,\n      lastActiveAction = actions[firstInactiveIndex];\n    action._cacheIndex = firstInactiveIndex;\n    actions[firstInactiveIndex] = action;\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = lastActiveAction;\n  }\n\n  // Memory management for PropertyMixer objects\n\n  _addInactiveBinding(binding, rootUuid, trackName) {\n    const bindingsByRoot = this._bindingsByRootAndName,\n      bindings = this._bindings;\n    let bindingByName = bindingsByRoot[rootUuid];\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[rootUuid] = bindingByName;\n    }\n    bindingByName[trackName] = binding;\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  }\n  _removeInactiveBinding(binding) {\n    const bindings = this._bindings,\n      propBinding = binding.binding,\n      rootUuid = propBinding.rootNode.uuid,\n      trackName = propBinding.path,\n      bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[rootUuid],\n      lastInactiveBinding = bindings[bindings.length - 1],\n      cacheIndex = binding._cacheIndex;\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[cacheIndex] = lastInactiveBinding;\n    bindings.pop();\n    delete bindingByName[trackName];\n    if (Object.keys(bindingByName).length === 0) {\n      delete bindingsByRoot[rootUuid];\n    }\n  }\n  _lendBinding(binding) {\n    const bindings = this._bindings,\n      prevIndex = binding._cacheIndex,\n      lastActiveIndex = this._nActiveBindings++,\n      firstInactiveBinding = bindings[lastActiveIndex];\n    binding._cacheIndex = lastActiveIndex;\n    bindings[lastActiveIndex] = binding;\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = firstInactiveBinding;\n  }\n  _takeBackBinding(binding) {\n    const bindings = this._bindings,\n      prevIndex = binding._cacheIndex,\n      firstInactiveIndex = --this._nActiveBindings,\n      lastActiveBinding = bindings[firstInactiveIndex];\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[firstInactiveIndex] = binding;\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = lastActiveBinding;\n  }\n\n  // Memory management of Interpolants for weight and time scale\n\n  _lendControlInterpolant() {\n    const interpolants = this._controlInterpolants,\n      lastActiveIndex = this._nActiveControlInterpolants++;\n    let interpolant = interpolants[lastActiveIndex];\n    if (interpolant === undefined) {\n      interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, _controlInterpolantsResultBuffer);\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[lastActiveIndex] = interpolant;\n    }\n    return interpolant;\n  }\n  _takeBackControlInterpolant(interpolant) {\n    const interpolants = this._controlInterpolants,\n      prevIndex = interpolant.__cacheIndex,\n      firstInactiveIndex = --this._nActiveControlInterpolants,\n      lastActiveInterpolant = interpolants[firstInactiveIndex];\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[firstInactiveIndex] = interpolant;\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[prevIndex] = lastActiveInterpolant;\n  }\n\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction(clip, optionalRoot, blendMode) {\n    const root = optionalRoot || this._root,\n      rootUuid = root.uuid;\n    let clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n    const clipUuid = clipObject !== null ? clipObject.uuid : clip;\n    const actionsForClip = this._actionsByClip[clipUuid];\n    let prototypeAction = null;\n    if (blendMode === undefined) {\n      if (clipObject !== null) {\n        blendMode = clipObject.blendMode;\n      } else {\n        blendMode = NormalAnimationBlendMode;\n      }\n    }\n    if (actionsForClip !== undefined) {\n      const existingAction = actionsForClip.actionByRoot[rootUuid];\n      if (existingAction !== undefined && existingAction.blendMode === blendMode) {\n        return existingAction;\n      }\n\n      // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n      prototypeAction = actionsForClip.knownActions[0];\n\n      // also, take the clip from the prototype action\n      if (clipObject === null) clipObject = prototypeAction._clip;\n    }\n\n    // clip must be known when specified via string\n    if (clipObject === null) return null;\n\n    // allocate all resources required to run it\n    const newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n    this._bindAction(newAction, prototypeAction);\n\n    // and make the action known to the memory manager\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n    return newAction;\n  }\n\n  // get an existing action\n  existingAction(clip, optionalRoot) {\n    const root = optionalRoot || this._root,\n      rootUuid = root.uuid,\n      clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n      clipUuid = clipObject ? clipObject.uuid : clip,\n      actionsForClip = this._actionsByClip[clipUuid];\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[rootUuid] || null;\n    }\n    return null;\n  }\n\n  // deactivates all previously scheduled actions\n  stopAllAction() {\n    const actions = this._actions,\n      nActions = this._nActiveActions;\n    for (let i = nActions - 1; i >= 0; --i) {\n      actions[i].stop();\n    }\n    return this;\n  }\n\n  // advance the time and update apply the animation\n  update(deltaTime) {\n    deltaTime *= this.timeScale;\n    const actions = this._actions,\n      nActions = this._nActiveActions,\n      time = this.time += deltaTime,\n      timeDirection = Math.sign(deltaTime),\n      accuIndex = this._accuIndex ^= 1;\n\n    // run active actions\n\n    for (let i = 0; i !== nActions; ++i) {\n      const action = actions[i];\n      action._update(time, deltaTime, timeDirection, accuIndex);\n    }\n\n    // update scene graph\n\n    const bindings = this._bindings,\n      nBindings = this._nActiveBindings;\n    for (let i = 0; i !== nBindings; ++i) {\n      bindings[i].apply(accuIndex);\n    }\n    return this;\n  }\n\n  // Allows you to seek to a specific time in an animation.\n  setTime(timeInSeconds) {\n    this.time = 0; // Zero out time attribute for AnimationMixer object;\n    for (let i = 0; i < this._actions.length; i++) {\n      this._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n    }\n    return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n  }\n\n  // return this mixer's root target object\n  getRoot() {\n    return this._root;\n  }\n\n  // free all resources specific to a particular clip\n  uncacheClip(clip) {\n    const actions = this._actions,\n      clipUuid = clip.uuid,\n      actionsByClip = this._actionsByClip,\n      actionsForClip = actionsByClip[clipUuid];\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n\n      const actionsToRemove = actionsForClip.knownActions;\n      for (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n        const action = actionsToRemove[i];\n        this._deactivateAction(action);\n        const cacheIndex = action._cacheIndex,\n          lastInactiveAction = actions[actions.length - 1];\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n        this._removeInactiveBindingsForAction(action);\n      }\n      delete actionsByClip[clipUuid];\n    }\n  }\n\n  // free all resources specific to a particular root target object\n  uncacheRoot(root) {\n    const rootUuid = root.uuid,\n      actionsByClip = this._actionsByClip;\n    for (const clipUuid in actionsByClip) {\n      const actionByRoot = actionsByClip[clipUuid].actionByRoot,\n        action = actionByRoot[rootUuid];\n      if (action !== undefined) {\n        this._deactivateAction(action);\n        this._removeInactiveAction(action);\n      }\n    }\n    const bindingsByRoot = this._bindingsByRootAndName,\n      bindingByName = bindingsByRoot[rootUuid];\n    if (bindingByName !== undefined) {\n      for (const trackName in bindingByName) {\n        const binding = bindingByName[trackName];\n        binding.restoreOriginalState();\n        this._removeInactiveBinding(binding);\n      }\n    }\n  }\n\n  // remove a targeted clip from the cache\n  uncacheAction(clip, optionalRoot) {\n    const action = this.existingAction(clip, optionalRoot);\n    if (action !== null) {\n      this._deactivateAction(action);\n      this._removeInactiveAction(action);\n    }\n  }\n}\nclass Uniform {\n  constructor(value) {\n    this.value = value;\n  }\n  clone() {\n    return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n  }\n}\nlet _id = 0;\nclass UniformsGroup extends EventDispatcher {\n  constructor() {\n    super();\n    this.isUniformsGroup = true;\n    Object.defineProperty(this, 'id', {\n      value: _id++\n    });\n    this.name = '';\n    this.usage = StaticDrawUsage;\n    this.uniforms = [];\n  }\n  add(uniform) {\n    this.uniforms.push(uniform);\n    return this;\n  }\n  remove(uniform) {\n    const index = this.uniforms.indexOf(uniform);\n    if (index !== -1) this.uniforms.splice(index, 1);\n    return this;\n  }\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n  setUsage(value) {\n    this.usage = value;\n    return this;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n    return this;\n  }\n  copy(source) {\n    this.name = source.name;\n    this.usage = source.usage;\n    const uniformsSource = source.uniforms;\n    this.uniforms.length = 0;\n    for (let i = 0, l = uniformsSource.length; i < l; i++) {\n      const uniforms = Array.isArray(uniformsSource[i]) ? uniformsSource[i] : [uniformsSource[i]];\n      for (let j = 0; j < uniforms.length; j++) {\n        this.uniforms.push(uniforms[j].clone());\n      }\n    }\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n  constructor(array, stride) {\n    let meshPerAttribute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    super(array, stride);\n    this.isInstancedInterleavedBuffer = true;\n    this.meshPerAttribute = meshPerAttribute;\n  }\n  copy(source) {\n    super.copy(source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n  clone(data) {\n    const ib = super.clone(data);\n    ib.meshPerAttribute = this.meshPerAttribute;\n    return ib;\n  }\n  toJSON(data) {\n    const json = super.toJSON(data);\n    json.isInstancedInterleavedBuffer = true;\n    json.meshPerAttribute = this.meshPerAttribute;\n    return json;\n  }\n}\nclass GLBufferAttribute {\n  constructor(buffer, type, itemSize, elementSize, count) {\n    this.isGLBufferAttribute = true;\n    this.name = '';\n    this.buffer = buffer;\n    this.type = type;\n    this.itemSize = itemSize;\n    this.elementSize = elementSize;\n    this.count = count;\n    this.version = 0;\n  }\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  setBuffer(buffer) {\n    this.buffer = buffer;\n    return this;\n  }\n  setType(type, elementSize) {\n    this.type = type;\n    this.elementSize = elementSize;\n    return this;\n  }\n  setItemSize(itemSize) {\n    this.itemSize = itemSize;\n    return this;\n  }\n  setCount(count) {\n    this.count = count;\n    return this;\n  }\n}\nconst _matrix = /*@__PURE__*/new Matrix4();\nclass Raycaster {\n  constructor(origin, direction) {\n    let near = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let far = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;\n    this.ray = new Ray(origin, direction);\n    // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near;\n    this.far = far;\n    this.camera = null;\n    this.layers = new Layers();\n    this.params = {\n      Mesh: {},\n      Line: {\n        threshold: 1\n      },\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n  }\n  set(origin, direction) {\n    // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.ray.set(origin, direction);\n  }\n  setFromCamera(coords, camera) {\n    if (camera.isPerspectiveCamera) {\n      this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n      this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      this.camera = camera;\n    } else if (camera.isOrthographicCamera) {\n      this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n      this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      this.camera = camera;\n    } else {\n      console.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n    }\n  }\n  setFromXRController(controller) {\n    _matrix.identity().extractRotation(controller.matrixWorld);\n    this.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n    this.ray.direction.set(0, 0, -1).applyMatrix4(_matrix);\n    return this;\n  }\n  intersectObject(object) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let intersects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    intersect(object, this, intersects, recursive);\n    intersects.sort(ascSort);\n    return intersects;\n  }\n  intersectObjects(objects) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let intersects = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    for (let i = 0, l = objects.length; i < l; i++) {\n      intersect(objects[i], this, intersects, recursive);\n    }\n    intersects.sort(ascSort);\n    return intersects;\n  }\n}\nfunction ascSort(a, b) {\n  return a.distance - b.distance;\n}\nfunction intersect(object, raycaster, intersects, recursive) {\n  let propagate = true;\n  if (object.layers.test(raycaster.layers)) {\n    const result = object.raycast(raycaster, intersects);\n    if (result === false) propagate = false;\n  }\n  if (propagate === true && recursive === true) {\n    const children = object.children;\n    for (let i = 0, l = children.length; i < l; i++) {\n      intersect(children[i], raycaster, intersects, true);\n    }\n  }\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let phi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let theta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this.radius = radius;\n    this.phi = phi; // polar angle\n    this.theta = theta; // azimuthal angle\n\n    return this;\n  }\n  set(radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  }\n  copy(other) {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this;\n  }\n\n  // restrict phi to be between EPS and PI-EPS\n  makeSafe() {\n    const EPS = 0.000001;\n    this.phi = clamp(this.phi, EPS, Math.PI - EPS);\n    return this;\n  }\n  setFromVector3(v) {\n    return this.setFromCartesianCoords(v.x, v.y, v.z);\n  }\n  setFromCartesianCoords(x, y, z) {\n    this.radius = Math.sqrt(x * x + y * y + z * z);\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(x, z);\n      this.phi = Math.acos(clamp(y / this.radius, -1, 1));\n    }\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let theta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    this.radius = radius; // distance from the origin to a point in the x-z plane\n    this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n    this.y = y; // height above the x-z plane\n\n    return this;\n  }\n  set(radius, theta, y) {\n    this.radius = radius;\n    this.theta = theta;\n    this.y = y;\n    return this;\n  }\n  copy(other) {\n    this.radius = other.radius;\n    this.theta = other.theta;\n    this.y = other.y;\n    return this;\n  }\n  setFromVector3(v) {\n    return this.setFromCartesianCoords(v.x, v.y, v.z);\n  }\n  setFromCartesianCoords(x, y, z) {\n    this.radius = Math.sqrt(x * x + z * z);\n    this.theta = Math.atan2(x, z);\n    this.y = y;\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nclass Matrix2 {\n  constructor(n11, n12, n21, n22) {\n    Matrix2.prototype.isMatrix2 = true;\n    this.elements = [1, 0, 0, 1];\n    if (n11 !== undefined) {\n      this.set(n11, n12, n21, n22);\n    }\n  }\n  identity() {\n    this.set(1, 0, 0, 1);\n    return this;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    for (let i = 0; i < 4; i++) {\n      this.elements[i] = array[i + offset];\n    }\n    return this;\n  }\n  set(n11, n12, n21, n22) {\n    const te = this.elements;\n    te[0] = n11;\n    te[2] = n12;\n    te[1] = n21;\n    te[3] = n22;\n    return this;\n  }\n}\nconst _vector$4 = /*@__PURE__*/new Vector2();\nclass Box2 {\n  constructor() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2(+Infinity, +Infinity);\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2(-Infinity, -Infinity);\n    this.isBox2 = true;\n    this.min = min;\n    this.max = max;\n  }\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n  setFromPoints(points) {\n    this.makeEmpty();\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n    return this;\n  }\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n  makeEmpty() {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  }\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  }\n  getCenter(target) {\n    return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n  getSize(target) {\n    return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n  }\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n  containsPoint(point) {\n    return point.x >= this.min.x && point.x <= this.max.x && point.y >= this.min.y && point.y <= this.max.y;\n  }\n  containsBox(box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n  }\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  }\n  intersectsBox(box) {\n    // using 4 splitting planes to rule out intersections\n\n    return box.max.x >= this.min.x && box.min.x <= this.max.x && box.max.y >= this.min.y && box.min.y <= this.max.y;\n  }\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n  distanceToPoint(point) {\n    return this.clampPoint(point, _vector$4).distanceTo(point);\n  }\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  }\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}\nconst _startP = /*@__PURE__*/new Vector3();\nconst _startEnd = /*@__PURE__*/new Vector3();\nclass Line3 {\n  constructor() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    this.start = start;\n    this.end = end;\n  }\n  set(start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  }\n  copy(line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  }\n  getCenter(target) {\n    return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n  }\n  delta(target) {\n    return target.subVectors(this.end, this.start);\n  }\n  distanceSq() {\n    return this.start.distanceToSquared(this.end);\n  }\n  distance() {\n    return this.start.distanceTo(this.end);\n  }\n  at(t, target) {\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  }\n  closestPointToPointParameter(point, clampToLine) {\n    _startP.subVectors(point, this.start);\n    _startEnd.subVectors(this.end, this.start);\n    const startEnd2 = _startEnd.dot(_startEnd);\n    const startEnd_startP = _startEnd.dot(_startP);\n    let t = startEnd_startP / startEnd2;\n    if (clampToLine) {\n      t = clamp(t, 0, 1);\n    }\n    return t;\n  }\n  closestPointToPoint(point, clampToLine, target) {\n    const t = this.closestPointToPointParameter(point, clampToLine);\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  }\n  applyMatrix4(matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  }\n  equals(line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n}\nconst _vector$3 = /*@__PURE__*/new Vector3();\nclass SpotLightHelper extends Object3D {\n  constructor(light, color) {\n    super();\n    this.light = light;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    this.type = 'SpotLightHelper';\n    const geometry = new BufferGeometry();\n    const positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n    for (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n      const p1 = i / l * Math.PI * 2;\n      const p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    const material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n  dispose() {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  }\n  update() {\n    this.light.updateWorldMatrix(true, false);\n    this.light.target.updateWorldMatrix(true, false);\n\n    // update the local matrix based on the parent and light target transforms\n    if (this.parent) {\n      this.parent.updateWorldMatrix(true);\n      this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld);\n    } else {\n      this.matrix.copy(this.light.matrixWorld);\n    }\n    this.matrixWorld.copy(this.light.matrixWorld);\n    const coneLength = this.light.distance ? this.light.distance : 1000;\n    const coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    _vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(_vector$3);\n    if (this.color !== undefined) {\n      this.cone.material.color.set(this.color);\n    } else {\n      this.cone.material.color.copy(this.light.color);\n    }\n  }\n}\nconst _vector$2 = /*@__PURE__*/new Vector3();\nconst _boneMatrix = /*@__PURE__*/new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\nclass SkeletonHelper extends LineSegments {\n  constructor(object) {\n    const bones = getBoneList(object);\n    const geometry = new BufferGeometry();\n    const vertices = [];\n    const colors = [];\n    const color1 = new Color(0, 0, 1);\n    const color2 = new Color(0, 1, 0);\n    for (let i = 0; i < bones.length; i++) {\n      const bone = bones[i];\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: false,\n      depthWrite: false,\n      toneMapped: false,\n      transparent: true\n    });\n    super(geometry, material);\n    this.isSkeletonHelper = true;\n    this.type = 'SkeletonHelper';\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n  updateMatrixWorld(force) {\n    const bones = this.bones;\n    const geometry = this.geometry;\n    const position = geometry.getAttribute('position');\n    _matrixWorldInv.copy(this.root.matrixWorld).invert();\n    for (let i = 0, j = 0; i < bones.length; i++) {\n      const bone = bones[i];\n      if (bone.parent && bone.parent.isBone) {\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n        _vector$2.setFromMatrixPosition(_boneMatrix);\n        position.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n        _vector$2.setFromMatrixPosition(_boneMatrix);\n        position.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n        j += 2;\n      }\n    }\n    geometry.getAttribute('position').needsUpdate = true;\n    super.updateMatrixWorld(force);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nfunction getBoneList(object) {\n  const boneList = [];\n  if (object.isBone === true) {\n    boneList.push(object);\n  }\n  for (let i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n  return boneList;\n}\nclass PointLightHelper extends Mesh {\n  constructor(light, sphereSize, color) {\n    const geometry = new SphereGeometry(sphereSize, 4, 2);\n    const material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false\n    });\n    super(geometry, material);\n    this.light = light;\n    this.color = color;\n    this.type = 'PointLightHelper';\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.update();\n\n    /*\n    // TODO: delete this comment?\n    const distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n    const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    const d = light.distance;\n    if ( d === 0.0 ) {\n    \tthis.lightDistance.visible = false;\n    } else {\n    \tthis.lightDistance.scale.set( d, d, d );\n    }\n    this.add( this.lightDistance );\n    */\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n  update() {\n    this.light.updateWorldMatrix(true, false);\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color);\n    }\n\n    /*\n    const d = this.light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.visible = true;\n    \tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    */\n  }\n}\nconst _vector$1 = /*@__PURE__*/new Vector3();\nconst _color1 = /*@__PURE__*/new Color();\nconst _color2 = /*@__PURE__*/new Color();\nclass HemisphereLightHelper extends Object3D {\n  constructor(light, size, color) {\n    super();\n    this.light = light;\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    this.type = 'HemisphereLightHelper';\n    const geometry = new OctahedronGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    this.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false,\n      toneMapped: false\n    });\n    if (this.color === undefined) this.material.vertexColors = true;\n    const position = geometry.getAttribute('position');\n    const colors = new Float32Array(position.count * 3);\n    geometry.setAttribute('color', new BufferAttribute(colors, 3));\n    this.add(new Mesh(geometry, this.material));\n    this.update();\n  }\n  dispose() {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n  update() {\n    const mesh = this.children[0];\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      const colors = mesh.geometry.getAttribute('color');\n      _color1.copy(this.light.color);\n      _color2.copy(this.light.groundColor);\n      for (let i = 0, l = colors.count; i < l; i++) {\n        const color = i < l / 2 ? _color1 : _color2;\n        colors.setXYZ(i, color.r, color.g, color.b);\n      }\n      colors.needsUpdate = true;\n    }\n    this.light.updateWorldMatrix(true, false);\n    mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n  }\n}\nclass GridHelper extends LineSegments {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    let divisions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    let color1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0x444444;\n    let color2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0x888888;\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n    const center = divisions / 2;\n    const step = size / divisions;\n    const halfSize = size / 2;\n    const vertices = [],\n      colors = [];\n    for (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      const color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    super(geometry, material);\n    this.type = 'GridHelper';\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nclass PolarGridHelper extends LineSegments {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    let sectors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n    let rings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    let divisions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 64;\n    let color1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0x444444;\n    let color2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0x888888;\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n    const vertices = [];\n    const colors = [];\n\n    // create the sectors\n\n    if (sectors > 1) {\n      for (let i = 0; i < sectors; i++) {\n        const v = i / sectors * (Math.PI * 2);\n        const x = Math.sin(v) * radius;\n        const z = Math.cos(v) * radius;\n        vertices.push(0, 0, 0);\n        vertices.push(x, 0, z);\n        const color = i & 1 ? color1 : color2;\n        colors.push(color.r, color.g, color.b);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    // create the rings\n\n    for (let i = 0; i < rings; i++) {\n      const color = i & 1 ? color1 : color2;\n      const r = radius - radius / rings * i;\n      for (let j = 0; j < divisions; j++) {\n        // first vertex\n\n        let v = j / divisions * (Math.PI * 2);\n        let x = Math.sin(v) * r;\n        let z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n\n        // second vertex\n\n        v = (j + 1) / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    super(geometry, material);\n    this.type = 'PolarGridHelper';\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nconst _v1 = /*@__PURE__*/new Vector3();\nconst _v2 = /*@__PURE__*/new Vector3();\nconst _v3 = /*@__PURE__*/new Vector3();\nclass DirectionalLightHelper extends Object3D {\n  constructor(light, size, color) {\n    super();\n    this.light = light;\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    this.type = 'DirectionalLightHelper';\n    if (size === undefined) size = 1;\n    let geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    const material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n    geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n    this.update();\n  }\n  dispose() {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  }\n  update() {\n    this.light.updateWorldMatrix(true, false);\n    this.light.target.updateWorldMatrix(true, false);\n    _v1.setFromMatrixPosition(this.light.matrixWorld);\n    _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    _v3.subVectors(_v2, _v1);\n    this.lightPlane.lookAt(_v2);\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n    this.targetLine.lookAt(_v2);\n    this.targetLine.scale.z = _v3.length();\n  }\n}\nconst _vector = /*@__PURE__*/new Vector3();\nconst _camera = /*@__PURE__*/new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n  constructor(camera) {\n    const geometry = new BufferGeometry();\n    const material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: true,\n      toneMapped: false\n    });\n    const vertices = [];\n    const colors = [];\n    const pointMap = {};\n\n    // near\n\n    addLine('n1', 'n2');\n    addLine('n2', 'n4');\n    addLine('n4', 'n3');\n    addLine('n3', 'n1');\n\n    // far\n\n    addLine('f1', 'f2');\n    addLine('f2', 'f4');\n    addLine('f4', 'f3');\n    addLine('f3', 'f1');\n\n    // sides\n\n    addLine('n1', 'f1');\n    addLine('n2', 'f2');\n    addLine('n3', 'f3');\n    addLine('n4', 'f4');\n\n    // cone\n\n    addLine('p', 'n1');\n    addLine('p', 'n2');\n    addLine('p', 'n3');\n    addLine('p', 'n4');\n\n    // up\n\n    addLine('u1', 'u2');\n    addLine('u2', 'u3');\n    addLine('u3', 'u1');\n\n    // target\n\n    addLine('c', 't');\n    addLine('p', 'c');\n\n    // cross\n\n    addLine('cn1', 'cn2');\n    addLine('cn3', 'cn4');\n    addLine('cf1', 'cf2');\n    addLine('cf3', 'cf4');\n    function addLine(a, b) {\n      addPoint(a);\n      addPoint(b);\n    }\n    function addPoint(id) {\n      vertices.push(0, 0, 0);\n      colors.push(0, 0, 0);\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    super(geometry, material);\n    this.type = 'CameraHelper';\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n\n    // colors\n\n    const colorFrustum = new Color(0xffaa00);\n    const colorCone = new Color(0xff0000);\n    const colorUp = new Color(0x00aaff);\n    const colorTarget = new Color(0xffffff);\n    const colorCross = new Color(0x333333);\n    this.setColors(colorFrustum, colorCone, colorUp, colorTarget, colorCross);\n  }\n  setColors(frustum, cone, up, target, cross) {\n    const geometry = this.geometry;\n    const colorAttribute = geometry.getAttribute('color');\n\n    // near\n\n    colorAttribute.setXYZ(0, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(1, frustum.r, frustum.g, frustum.b); // n1, n2\n    colorAttribute.setXYZ(2, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(3, frustum.r, frustum.g, frustum.b); // n2, n4\n    colorAttribute.setXYZ(4, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(5, frustum.r, frustum.g, frustum.b); // n4, n3\n    colorAttribute.setXYZ(6, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(7, frustum.r, frustum.g, frustum.b); // n3, n1\n\n    // far\n\n    colorAttribute.setXYZ(8, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(9, frustum.r, frustum.g, frustum.b); // f1, f2\n    colorAttribute.setXYZ(10, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(11, frustum.r, frustum.g, frustum.b); // f2, f4\n    colorAttribute.setXYZ(12, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(13, frustum.r, frustum.g, frustum.b); // f4, f3\n    colorAttribute.setXYZ(14, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(15, frustum.r, frustum.g, frustum.b); // f3, f1\n\n    // sides\n\n    colorAttribute.setXYZ(16, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(17, frustum.r, frustum.g, frustum.b); // n1, f1\n    colorAttribute.setXYZ(18, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(19, frustum.r, frustum.g, frustum.b); // n2, f2\n    colorAttribute.setXYZ(20, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(21, frustum.r, frustum.g, frustum.b); // n3, f3\n    colorAttribute.setXYZ(22, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(23, frustum.r, frustum.g, frustum.b); // n4, f4\n\n    // cone\n\n    colorAttribute.setXYZ(24, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(25, cone.r, cone.g, cone.b); // p, n1\n    colorAttribute.setXYZ(26, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(27, cone.r, cone.g, cone.b); // p, n2\n    colorAttribute.setXYZ(28, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(29, cone.r, cone.g, cone.b); // p, n3\n    colorAttribute.setXYZ(30, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(31, cone.r, cone.g, cone.b); // p, n4\n\n    // up\n\n    colorAttribute.setXYZ(32, up.r, up.g, up.b);\n    colorAttribute.setXYZ(33, up.r, up.g, up.b); // u1, u2\n    colorAttribute.setXYZ(34, up.r, up.g, up.b);\n    colorAttribute.setXYZ(35, up.r, up.g, up.b); // u2, u3\n    colorAttribute.setXYZ(36, up.r, up.g, up.b);\n    colorAttribute.setXYZ(37, up.r, up.g, up.b); // u3, u1\n\n    // target\n\n    colorAttribute.setXYZ(38, target.r, target.g, target.b);\n    colorAttribute.setXYZ(39, target.r, target.g, target.b); // c, t\n    colorAttribute.setXYZ(40, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(41, cross.r, cross.g, cross.b); // p, c\n\n    // cross\n\n    colorAttribute.setXYZ(42, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(43, cross.r, cross.g, cross.b); // cn1, cn2\n    colorAttribute.setXYZ(44, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(45, cross.r, cross.g, cross.b); // cn3, cn4\n\n    colorAttribute.setXYZ(46, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(47, cross.r, cross.g, cross.b); // cf1, cf2\n    colorAttribute.setXYZ(48, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(49, cross.r, cross.g, cross.b); // cf3, cf4\n\n    colorAttribute.needsUpdate = true;\n  }\n  update() {\n    const geometry = this.geometry;\n    const pointMap = this.pointMap;\n    const w = 1,\n      h = 1;\n\n    // we need just camera projection matrix inverse\n    // world matrix must be identity\n\n    _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);\n\n    // center / target\n\n    setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n    setPoint('t', pointMap, geometry, _camera, 0, 0, 1);\n\n    // near\n\n    setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n    setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n    setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n    setPoint('n4', pointMap, geometry, _camera, w, h, -1);\n\n    // far\n\n    setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n    setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n    setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n    setPoint('f4', pointMap, geometry, _camera, w, h, 1);\n\n    // up\n\n    setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n    setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n    setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1);\n\n    // cross\n\n    setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n    setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n    setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n    setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n    setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n    setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n    setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n    setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n    geometry.getAttribute('position').needsUpdate = true;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n  const points = pointMap[point];\n  if (points !== undefined) {\n    const position = geometry.getAttribute('position');\n    for (let i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\nconst _box = /*@__PURE__*/new Box3();\nclass BoxHelper extends LineSegments {\n  constructor(object) {\n    let color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffff00;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(8 * 3);\n    const geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute('position', new BufferAttribute(positions, 3));\n    super(geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.object = object;\n    this.type = 'BoxHelper';\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n  update(object) {\n    if (object !== undefined) {\n      console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n    }\n    if (this.object !== undefined) {\n      _box.setFromObject(this.object);\n    }\n    if (_box.isEmpty()) return;\n    const min = _box.min;\n    const max = _box.max;\n\n    /*\n    \t5____4\n    1/___0/|\n    | 6__|_7\n    2/___3/\n    \t0: max.x, max.y, max.z\n    1: min.x, max.y, max.z\n    2: min.x, min.y, max.z\n    3: max.x, min.y, max.z\n    4: max.x, max.y, min.z\n    5: min.x, max.y, min.z\n    6: min.x, min.y, min.z\n    7: max.x, min.y, min.z\n    */\n\n    const position = this.geometry.attributes.position;\n    const array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  }\n  setFromObject(object) {\n    this.object = object;\n    this.update();\n    return this;\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.object = source.object;\n    return this;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nclass Box3Helper extends LineSegments {\n  constructor(box) {\n    let color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0xffff00;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n    const geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    super(geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.box = box;\n    this.type = 'Box3Helper';\n    this.geometry.computeBoundingSphere();\n  }\n  updateMatrixWorld(force) {\n    const box = this.box;\n    if (box.isEmpty()) return;\n    box.getCenter(this.position);\n    box.getSize(this.scale);\n    this.scale.multiplyScalar(0.5);\n    super.updateMatrixWorld(force);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nclass PlaneHelper extends Line {\n  constructor(plane) {\n    let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let hex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0xffff00;\n    const color = hex;\n    const positions = [1, -1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    super(geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.type = 'PlaneHelper';\n    this.plane = plane;\n    this.size = size;\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      color: color,\n      opacity: 0.2,\n      transparent: true,\n      depthWrite: false,\n      toneMapped: false\n    })));\n  }\n  updateMatrixWorld(force) {\n    this.position.set(0, 0, 0);\n    this.scale.set(0.5 * this.size, 0.5 * this.size, 1);\n    this.lookAt(this.plane.normal);\n    this.translateZ(-this.plane.constant);\n    super.updateMatrixWorld(force);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n}\nconst _axis = /*@__PURE__*/new Vector3();\nlet _lineGeometry, _coneGeometry;\nclass ArrowHelper extends Object3D {\n  // dir is assumed to be normalized\n\n  constructor() {\n    let dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 1);\n    let origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 0, 0);\n    let length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0xffff00;\n    let headLength = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : length * 0.2;\n    let headWidth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : headLength * 0.2;\n    super();\n    this.type = 'ArrowHelper';\n    if (_lineGeometry === undefined) {\n      _lineGeometry = new BufferGeometry();\n      _lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n      _coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n      _coneGeometry.translate(0, -0.5, 0);\n    }\n    this.position.copy(origin);\n    this.line = new Line(_lineGeometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n  setDirection(dir) {\n    // dir is assumed to be normalized\n\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      _axis.set(dir.z, 0, -dir.x).normalize();\n      const radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(_axis, radians);\n    }\n  }\n  setLength(length) {\n    let headLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : length * 0.2;\n    let headWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : headLength * 0.2;\n    this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  }\n  setColor(color) {\n    this.line.material.color.set(color);\n    this.cone.material.color.set(color);\n  }\n  copy(source) {\n    super.copy(source, false);\n    this.line.copy(source.line);\n    this.cone.copy(source.cone);\n    return this;\n  }\n  dispose() {\n    this.line.geometry.dispose();\n    this.line.material.dispose();\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  }\n}\nclass AxesHelper extends LineSegments {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    const vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n    const colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    super(geometry, material);\n    this.type = 'AxesHelper';\n  }\n  setColors(xAxisColor, yAxisColor, zAxisColor) {\n    const color = new Color();\n    const array = this.geometry.attributes.color.array;\n    color.set(xAxisColor);\n    color.toArray(array, 0);\n    color.toArray(array, 3);\n    color.set(yAxisColor);\n    color.toArray(array, 6);\n    color.toArray(array, 9);\n    color.set(zAxisColor);\n    color.toArray(array, 12);\n    color.toArray(array, 15);\n    this.geometry.attributes.color.needsUpdate = true;\n    return this;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nclass ShapePath {\n  constructor() {\n    this.type = 'ShapePath';\n    this.color = new Color();\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n  moveTo(x, y) {\n    this.currentPath = new Path();\n    this.subPaths.push(this.currentPath);\n    this.currentPath.moveTo(x, y);\n    return this;\n  }\n  lineTo(x, y) {\n    this.currentPath.lineTo(x, y);\n    return this;\n  }\n  quadraticCurveTo(aCPx, aCPy, aX, aY) {\n    this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n    return this;\n  }\n  bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n    return this;\n  }\n  splineThru(pts) {\n    this.currentPath.splineThru(pts);\n    return this;\n  }\n  toShapes(isCCW) {\n    function toShapesNoHoles(inSubpaths) {\n      const shapes = [];\n      for (let i = 0, l = inSubpaths.length; i < l; i++) {\n        const tmpPath = inSubpaths[i];\n        const tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n      }\n      return shapes;\n    }\n    function isPointInsidePolygon(inPt, inPolygon) {\n      const polyLen = inPolygon.length;\n\n      // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n      let inside = false;\n      for (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n        let edgeLowPt = inPolygon[p];\n        let edgeHighPt = inPolygon[q];\n        let edgeDx = edgeHighPt.x - edgeLowPt.x;\n        let edgeDy = edgeHighPt.y - edgeLowPt.y;\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt = inPolygon[q];\n            edgeDx = -edgeDx;\n            edgeHighPt = inPolygon[p];\n            edgeDy = -edgeDy;\n          }\n          if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n            // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            const perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0) return true; // inPt is on contour ?\n            if (perpEdge < 0) continue;\n            inside = !inside; // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y) continue; // parallel\n          // edge lies on the same horizontal line as inPt\n          if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n          // continue;\n        }\n      }\n      return inside;\n    }\n    const isClockWise = ShapeUtils.isClockWise;\n    const subPaths = this.subPaths;\n    if (subPaths.length === 0) return [];\n    let solid, tmpPath, tmpShape;\n    const shapes = [];\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new Shape();\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n    let holesFirst = !isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? !holesFirst : holesFirst;\n\n    // console.log(\"Holes first\", holesFirst);\n\n    const betterShapeHoles = [];\n    const newShapes = [];\n    let newShapeHoles = [];\n    let mainIdx = 0;\n    let tmpPoints;\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n    for (let i = 0, l = subPaths.length; i < l; i++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? !solid : solid;\n      if (solid) {\n        if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n        newShapes[mainIdx] = {\n          s: new Shape(),\n          p: tmpPoints\n        };\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n        if (holesFirst) mainIdx++;\n        newShapeHoles[mainIdx] = [];\n\n        //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({\n          h: tmpPath,\n          p: tmpPoints[0]\n        });\n\n        //console.log('ccw', i);\n      }\n    }\n\n    // only Holes? -> probably all Shapes with wrong orientation\n    if (!newShapes[0]) return toShapesNoHoles(subPaths);\n    if (newShapes.length > 1) {\n      let ambiguous = false;\n      let toChange = 0;\n      for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        betterShapeHoles[sIdx] = [];\n      }\n      for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        const sho = newShapeHoles[sIdx];\n        for (let hIdx = 0; hIdx < sho.length; hIdx++) {\n          const ho = sho[hIdx];\n          let hole_unassigned = true;\n          for (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx) toChange++;\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      }\n      if (toChange > 0 && ambiguous === false) {\n        newShapeHoles = betterShapeHoles;\n      }\n    }\n    let tmpHoles;\n    for (let i = 0, il = newShapes.length; i < il; i++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n      for (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    }\n\n    //console.log(\"shape\", shapes);\n\n    return shapes;\n  }\n}\nclass Controls extends EventDispatcher {\n  constructor(object) {\n    let domElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super();\n    this.object = object;\n    this.domElement = domElement;\n    this.enabled = true;\n    this.state = -1;\n    this.keys = {};\n    this.mouseButtons = {\n      LEFT: null,\n      MIDDLE: null,\n      RIGHT: null\n    };\n    this.touches = {\n      ONE: null,\n      TWO: null\n    };\n  }\n  connect() {}\n  disconnect() {}\n  dispose() {}\n  update(/* delta */) {}\n}\nfunction contain(texture, aspect) {\n  const imageAspect = texture.image && texture.image.width ? texture.image.width / texture.image.height : 1;\n  if (imageAspect > aspect) {\n    texture.repeat.x = 1;\n    texture.repeat.y = imageAspect / aspect;\n    texture.offset.x = 0;\n    texture.offset.y = (1 - texture.repeat.y) / 2;\n  } else {\n    texture.repeat.x = aspect / imageAspect;\n    texture.repeat.y = 1;\n    texture.offset.x = (1 - texture.repeat.x) / 2;\n    texture.offset.y = 0;\n  }\n  return texture;\n}\nfunction cover(texture, aspect) {\n  const imageAspect = texture.image && texture.image.width ? texture.image.width / texture.image.height : 1;\n  if (imageAspect > aspect) {\n    texture.repeat.x = aspect / imageAspect;\n    texture.repeat.y = 1;\n    texture.offset.x = (1 - texture.repeat.x) / 2;\n    texture.offset.y = 0;\n  } else {\n    texture.repeat.x = 1;\n    texture.repeat.y = imageAspect / aspect;\n    texture.offset.x = 0;\n    texture.offset.y = (1 - texture.repeat.y) / 2;\n  }\n  return texture;\n}\nfunction fill(texture) {\n  texture.repeat.x = 1;\n  texture.repeat.y = 1;\n  texture.offset.x = 0;\n  texture.offset.y = 0;\n  return texture;\n}\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n */\nfunction getByteLength(width, height, format, type) {\n  const typeByteLength = getTextureTypeByteLength(type);\n  switch (format) {\n    // https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n    case AlphaFormat:\n      return width * height;\n    case LuminanceFormat:\n      return width * height;\n    case LuminanceAlphaFormat:\n      return width * height * 2;\n    case RedFormat:\n      return width * height / typeByteLength.components * typeByteLength.byteLength;\n    case RedIntegerFormat:\n      return width * height / typeByteLength.components * typeByteLength.byteLength;\n    case RGFormat:\n      return width * height * 2 / typeByteLength.components * typeByteLength.byteLength;\n    case RGIntegerFormat:\n      return width * height * 2 / typeByteLength.components * typeByteLength.byteLength;\n    case RGBFormat:\n      return width * height * 3 / typeByteLength.components * typeByteLength.byteLength;\n    case RGBAFormat:\n      return width * height * 4 / typeByteLength.components * typeByteLength.byteLength;\n    case RGBAIntegerFormat:\n      return width * height * 4 / typeByteLength.components * typeByteLength.byteLength;\n\n    // https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n    case RGB_S3TC_DXT1_Format:\n    case RGBA_S3TC_DXT1_Format:\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n    case RGBA_S3TC_DXT3_Format:\n    case RGBA_S3TC_DXT5_Format:\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n\n    // https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n    case RGB_PVRTC_2BPPV1_Format:\n    case RGBA_PVRTC_2BPPV1_Format:\n      return Math.max(width, 16) * Math.max(height, 8) / 4;\n    case RGB_PVRTC_4BPPV1_Format:\n    case RGBA_PVRTC_4BPPV1_Format:\n      return Math.max(width, 8) * Math.max(height, 8) / 2;\n\n    // https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n    case RGB_ETC1_Format:\n    case RGB_ETC2_Format:\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n    case RGBA_ETC2_EAC_Format:\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n\n    // https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n    case RGBA_ASTC_4x4_Format:\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n    case RGBA_ASTC_5x4_Format:\n      return Math.floor((width + 4) / 5) * Math.floor((height + 3) / 4) * 16;\n    case RGBA_ASTC_5x5_Format:\n      return Math.floor((width + 4) / 5) * Math.floor((height + 4) / 5) * 16;\n    case RGBA_ASTC_6x5_Format:\n      return Math.floor((width + 5) / 6) * Math.floor((height + 4) / 5) * 16;\n    case RGBA_ASTC_6x6_Format:\n      return Math.floor((width + 5) / 6) * Math.floor((height + 5) / 6) * 16;\n    case RGBA_ASTC_8x5_Format:\n      return Math.floor((width + 7) / 8) * Math.floor((height + 4) / 5) * 16;\n    case RGBA_ASTC_8x6_Format:\n      return Math.floor((width + 7) / 8) * Math.floor((height + 5) / 6) * 16;\n    case RGBA_ASTC_8x8_Format:\n      return Math.floor((width + 7) / 8) * Math.floor((height + 7) / 8) * 16;\n    case RGBA_ASTC_10x5_Format:\n      return Math.floor((width + 9) / 10) * Math.floor((height + 4) / 5) * 16;\n    case RGBA_ASTC_10x6_Format:\n      return Math.floor((width + 9) / 10) * Math.floor((height + 5) / 6) * 16;\n    case RGBA_ASTC_10x8_Format:\n      return Math.floor((width + 9) / 10) * Math.floor((height + 7) / 8) * 16;\n    case RGBA_ASTC_10x10_Format:\n      return Math.floor((width + 9) / 10) * Math.floor((height + 9) / 10) * 16;\n    case RGBA_ASTC_12x10_Format:\n      return Math.floor((width + 11) / 12) * Math.floor((height + 9) / 10) * 16;\n    case RGBA_ASTC_12x12_Format:\n      return Math.floor((width + 11) / 12) * Math.floor((height + 11) / 12) * 16;\n\n    // https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n    case RGBA_BPTC_Format:\n    case RGB_BPTC_SIGNED_Format:\n    case RGB_BPTC_UNSIGNED_Format:\n      return Math.ceil(width / 4) * Math.ceil(height / 4) * 16;\n\n    // https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n    case RED_RGTC1_Format:\n    case SIGNED_RED_RGTC1_Format:\n      return Math.ceil(width / 4) * Math.ceil(height / 4) * 8;\n    case RED_GREEN_RGTC2_Format:\n    case SIGNED_RED_GREEN_RGTC2_Format:\n      return Math.ceil(width / 4) * Math.ceil(height / 4) * 16;\n  }\n  throw new Error(`Unable to determine texture byte length for ${format} format.`);\n}\nfunction getTextureTypeByteLength(type) {\n  switch (type) {\n    case UnsignedByteType:\n    case ByteType:\n      return {\n        byteLength: 1,\n        components: 1\n      };\n    case UnsignedShortType:\n    case ShortType:\n    case HalfFloatType:\n      return {\n        byteLength: 2,\n        components: 1\n      };\n    case UnsignedShort4444Type:\n    case UnsignedShort5551Type:\n      return {\n        byteLength: 2,\n        components: 4\n      };\n    case UnsignedIntType:\n    case IntType:\n    case FloatType:\n      return {\n        byteLength: 4,\n        components: 1\n      };\n    case UnsignedInt5999Type:\n      return {\n        byteLength: 4,\n        components: 3\n      };\n  }\n  throw new Error(`Unknown texture type ${type}.`);\n}\nconst TextureUtils = {\n  contain,\n  cover,\n  fill,\n  getByteLength\n};\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n  // @deprecated, r162\n\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.');\n    super(width, height, {\n      ...options,\n      count\n    });\n    this.isWebGLMultipleRenderTargets = true;\n  }\n  get texture() {\n    return this.textures;\n  }\n}\nif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n  __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n    detail: {\n      revision: REVISION\n    }\n  }));\n}\nif (typeof window !== 'undefined') {\n  if (window.__THREE__) {\n    console.warn('WARNING: Multiple instances of Three.js being imported.');\n  } else {\n    window.__THREE__ = REVISION;\n  }\n}\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };","map":{"version":3,"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","type","listener","_listeners","undefined","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","Promise","resolve","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","define","colorSpaces","Object","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","defineProperty","dataReady","version","needsUpdate","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","keys","dispose","transformUv","uv","needsPMREMUpdate","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getInterpolation","p3","v3","getInterpolatedAttribute","attr","i1","i2","i3","barycoord","isFrontFacing","setFromPointsAndIndices","i0","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","isMeshBasicMaterial","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","renderTarget","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","scene","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","FogExp2","density","isFogExp2","Fog","isFog","Scene","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","reset","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","instanceCount","_instanceInfo","_availableInstanceIds","unusedVertexCount","_nextVertexStart","unusedIndexCount","_nextIndexStart","customSort","_geometryInfo","_availableGeometryIds","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","hasIndex","setGeometryAt","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","pop","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","requiredVertexLength","requiredIndexLength","oldGeometry","batchId","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","computeLineDistances","lineDistances","threshold","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","distSq","_start","_end","LineSegments","LineLoop","PointsMaterial","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Group","isGroup","VideoTexture","video","isVideoTexture","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","isFramebufferTexture","CompressedTexture","isCompressedTexture","CompressedArrayTexture","isCompressedArrayTexture","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","DepthTexture","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","k","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","resolution","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","path","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","halfHeight","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","isShadowMaterial","RawShaderMaterial","isRawShaderMaterial","MeshStandardMaterial","isMeshStandardMaterial","MeshPhysicalMaterial","isMeshPhysicalMaterial","ior","get","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","isMeshPhongMaterial","MeshToonMaterial","isMeshToonMaterial","MeshNormalMaterial","isMeshNormalMaterial","MeshLambertMaterial","isMeshLambertMaterial","MeshDepthMaterial","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","isMeshDistanceMaterial","MeshMatcapMaterial","isMeshMatcapMaterial","LineDashedMaterial","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","apply","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","frame","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","err","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","skyColor","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","isSpotLightShadow","SpotLight","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","isPointLight","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","isDirectionalLight","AmbientLight","isAmbientLight","RectAreaLight","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","isLightProbe","MaterialLoader","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","isInstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","parseImagesAsync","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","domElement","state","mouseButtons","touches","ONE","TWO","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","WebGLMultipleRenderTargets","isWebGLMultipleRenderTargets","revision","__THREE__"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/node_modules/three/build/three.core.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '171';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}