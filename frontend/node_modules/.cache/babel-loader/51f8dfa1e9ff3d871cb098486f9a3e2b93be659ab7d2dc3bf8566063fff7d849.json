{"ast":null,"code":"// frontend/src/services/api.js\nconst API_BASE_URL='http://localhost:3001';export const api={async searchGifs(query){const response=await fetch(`${API_BASE_URL}/api/gifs/search?q=${encodeURIComponent(query)}`);if(!response.ok)throw new Error('Failed to fetch GIFs');return response.json();},async getTrendingGifs(){const response=await fetch(`${API_BASE_URL}/api/gifs/trending`);if(!response.ok)throw new Error('Failed to fetch trending GIFs');return response.json();}};","map":{"version":3,"names":["API_BASE_URL","api","searchGifs","query","response","fetch","encodeURIComponent","ok","Error","json","getTrendingGifs"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\nconst API_BASE_URL = 'http://localhost:3001';\n\nexport const api = {\n  async searchGifs(query) {\n    const response = await fetch(`${API_BASE_URL}/api/gifs/search?q=${encodeURIComponent(query)}`);\n    if (!response.ok) throw new Error('Failed to fetch GIFs');\n    return response.json();\n  },\n\n  async getTrendingGifs() {\n    const response = await fetch(`${API_BASE_URL}/api/gifs/trending`);\n    if (!response.ok) throw new Error('Failed to fetch trending GIFs');\n    return response.json();\n  }\n};"],"mappings":"AAAA;AACA,KAAM,CAAAA,YAAY,CAAG,uBAAuB,CAE5C,MAAO,MAAM,CAAAC,GAAG,CAAG,CACjB,KAAM,CAAAC,UAAUA,CAACC,KAAK,CAAE,CACtB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,YAAY,sBAAsBM,kBAAkB,CAACH,KAAK,CAAC,EAAE,CAAC,CAC9F,GAAI,CAACC,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACzD,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,eAAeA,CAAA,CAAG,CACtB,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,YAAY,oBAAoB,CAAC,CACjE,GAAI,CAACI,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,+BAA+B,CAAC,CAClE,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}