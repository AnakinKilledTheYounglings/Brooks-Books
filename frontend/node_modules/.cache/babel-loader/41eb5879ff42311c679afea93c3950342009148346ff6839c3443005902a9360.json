{"ast":null,"code":"// frontend/src/pages/Treehouse.js\nimport React,{useState,useEffect,useRef}from'react';import{Container,Box,TextField,IconButton,Typography,Paper,Badge,Avatar,Divider}from'@mui/material';import{Send,Image}from'@mui/icons-material';import GifPicker from'../components/GifPicker';import apiService from'../services/apiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Treehouse(){const[messages,setMessages]=useState([]);const[message,setMessage]=useState('');const[onlineCount,setOnlineCount]=useState(0);const[gifPickerOpen,setGifPickerOpen]=useState(false);const[mediaUrl,setMediaUrl]=useState('');const[mediaType,setMediaType]=useState(null);const ws=useRef(null);const messagesEndRef=useRef(null);useEffect(()=>{// Connect to WebSocket server\nws.current=apiService.connectWebSocket();ws.current.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='history'){setMessages(data.messages);}else if(data.type==='message'){setMessages(prev=>[...prev,data.message]);}};return()=>{if(ws.current){ws.current.close();}};},[]);useEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);const handleSend=e=>{e.preventDefault();if(!message.trim()&&!mediaUrl)return;const user=JSON.parse(localStorage.getItem('user'))||{};const messageData={content:message,author:{username:user.username||'Guest',id:user.userId||user.id},timestamp:new Date().toISOString(),mediaUrl,mediaType};try{apiService.sendChatMessage(messageData);setMessage('');setMediaUrl('');setMediaType(null);}catch(error){console.error('Error sending message:',error);}};const handleGifSelect=gif=>{var _gif$media_formats,_gif$media_formats$gi;const user=JSON.parse(localStorage.getItem('user'))||{};const gifUrl=((_gif$media_formats=gif.media_formats)===null||_gif$media_formats===void 0?void 0:(_gif$media_formats$gi=_gif$media_formats.gif)===null||_gif$media_formats$gi===void 0?void 0:_gif$media_formats$gi.url)||gif.url;const messageData={content:'',author:{username:user.username||'Guest',id:user.userId||user.id},timestamp:new Date().toISOString(),mediaUrl:gifUrl,mediaType:'gif'};try{apiService.sendChatMessage(messageData);setGifPickerOpen(false);}catch(error){console.error('Error sending GIF message:',error);}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{mt:4,mb:4},children:[/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{height:'80vh',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Treehouse Chat\",/*#__PURE__*/_jsx(Badge,{badgeContent:onlineCount,color:\"success\",sx:{ml:2}})]})}),/*#__PURE__*/_jsxs(Box,{sx:{flex:1,overflow:'auto',p:2,display:'flex',flexDirection:'column'},children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',mb:2,alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Avatar,{sx:{mr:1},children:msg.author.username?msg.author.username[0].toUpperCase():'G'}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"textSecondary\",children:msg.author.username||'Guest'}),msg.content&&/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:0.5},children:msg.content}),msg.mediaUrl&&/*#__PURE__*/_jsx(Box,{sx:{mt:1,maxWidth:'300px'},children:/*#__PURE__*/_jsx(\"img\",{src:msg.mediaUrl,alt:\"Chat media\",style:{maxWidth:'100%',borderRadius:'8px',display:'block'// Prevents image spacing issues\n},onError:e=>{console.error('Image failed to load:',msg.mediaUrl);e.target.style.display='none';}})})]})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSend,sx:{p:2,display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(IconButton,{type:\"button\",onClick:()=>setGifPickerOpen(true),children:/*#__PURE__*/_jsx(Image,{})}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Type a message...\",variant:\"outlined\",size:\"small\"}),/*#__PURE__*/_jsx(IconButton,{type:\"submit\",color:\"primary\",children:/*#__PURE__*/_jsx(Send,{})})]})]}),/*#__PURE__*/_jsx(GifPicker,{open:gifPickerOpen,onClose:()=>setGifPickerOpen(false),onSelect:handleGifSelect})]});}export default Treehouse;","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Box","TextField","IconButton","Typography","Paper","Badge","Avatar","Divider","Send","Image","GifPicker","apiService","jsx","_jsx","jsxs","_jsxs","Treehouse","messages","setMessages","message","setMessage","onlineCount","setOnlineCount","gifPickerOpen","setGifPickerOpen","mediaUrl","setMediaUrl","mediaType","setMediaType","ws","messagesEndRef","current","connectWebSocket","onmessage","event","data","JSON","parse","type","prev","close","_messagesEndRef$curre","scrollIntoView","behavior","handleSend","e","preventDefault","trim","user","localStorage","getItem","messageData","content","author","username","id","userId","timestamp","Date","toISOString","sendChatMessage","error","console","handleGifSelect","gif","_gif$media_formats","_gif$media_formats$gi","gifUrl","media_formats","url","maxWidth","sx","mt","mb","children","elevation","height","display","flexDirection","p","borderBottom","borderColor","variant","badgeContent","color","ml","flex","overflow","map","msg","index","alignItems","mr","toUpperCase","src","alt","style","borderRadius","onError","target","ref","component","onSubmit","gap","onClick","fullWidth","value","onChange","placeholder","size","open","onClose","onSelect"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/pages/Treehouse.js"],"sourcesContent":["// frontend/src/pages/Treehouse.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { \n  Container, \n  Box, \n  TextField, \n  IconButton, \n  Typography, \n  Paper,\n  Badge,\n  Avatar,\n  Divider\n} from '@mui/material';\nimport { Send, Image } from '@mui/icons-material';\nimport GifPicker from '../components/GifPicker';\nimport apiService from '../services/apiService';\n\nfunction Treehouse() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [onlineCount, setOnlineCount] = useState(0);\n  const [gifPickerOpen, setGifPickerOpen] = useState(false);\n  const [mediaUrl, setMediaUrl] = useState('');\n  const [mediaType, setMediaType] = useState(null);\n  const ws = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Connect to WebSocket server\n    ws.current = apiService.connectWebSocket();\n\n    ws.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      \n      if (data.type === 'history') {\n        setMessages(data.messages);\n      } else if (data.type === 'message') {\n        setMessages(prev => [...prev, data.message]);\n      }\n    };\n\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    if (!message.trim() && !mediaUrl) return;\n  \n    const user = JSON.parse(localStorage.getItem('user')) || {};\n    \n    const messageData = {\n      content: message,\n      author: {\n        username: user.username || 'Guest',\n        id: user.userId || user.id\n      },\n      timestamp: new Date().toISOString(),\n      mediaUrl,\n      mediaType\n    };\n  \n    try {\n      apiService.sendChatMessage(messageData);\n      setMessage('');\n      setMediaUrl('');\n      setMediaType(null);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleGifSelect = (gif) => {\n    const user = JSON.parse(localStorage.getItem('user')) || {};\n    \n    const gifUrl = gif.media_formats?.gif?.url || gif.url;\n  \n    const messageData = {\n      content: '',\n      author: {\n        username: user.username || 'Guest',\n        id: user.userId || user.id\n      },\n      timestamp: new Date().toISOString(),\n      mediaUrl: gifUrl,\n      mediaType: 'gif'\n    };\n  \n    try {\n      apiService.sendChatMessage(messageData);\n      setGifPickerOpen(false);\n    } catch (error) {\n      console.error('Error sending GIF message:', error);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\n      <Paper elevation={3} sx={{ height: '80vh', display: 'flex', flexDirection: 'column' }}>\n        <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\n          <Typography variant=\"h6\">\n            Treehouse Chat \n            <Badge \n              badgeContent={onlineCount} \n              color=\"success\" \n              sx={{ ml: 2 }}\n            />\n          </Typography>\n        </Box>\n\n        <Box sx={{ \n          flex: 1, \n          overflow: 'auto', \n          p: 2,\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          {messages.map((msg, index) => (\n            <Box \n              key={index}\n              sx={{\n                display: 'flex',\n                mb: 2,\n                alignItems: 'flex-start'\n              }}\n            >\n              <Avatar sx={{ mr: 1 }}>\n                {msg.author.username ? msg.author.username[0].toUpperCase() : 'G'}\n              </Avatar>\n              <Box>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                  {msg.author.username || 'Guest'}\n                </Typography>\n                {msg.content && (\n                  <Typography variant=\"body1\" sx={{ mt: 0.5 }}>\n                    {msg.content}\n                  </Typography>\n                )}\n                {msg.mediaUrl && (\n                  <Box sx={{ mt: 1, maxWidth: '300px' }}>\n                    <img \n                      src={msg.mediaUrl} \n                      alt=\"Chat media\" \n                      style={{ \n                        maxWidth: '100%', \n                        borderRadius: '8px',\n                        display: 'block' // Prevents image spacing issues\n                      }}\n                      onError={(e) => {\n                        console.error('Image failed to load:', msg.mediaUrl);\n                        e.target.style.display = 'none';\n                      }}\n                    />\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          ))}\n          <div ref={messagesEndRef} />\n        </Box>\n\n        <Divider />\n        \n        <Box \n          component=\"form\" \n          onSubmit={handleSend}\n          sx={{ \n            p: 2, \n            display: 'flex', \n            alignItems: 'center',\n            gap: 1\n          }}\n        >\n          <IconButton \n            type=\"button\"\n            onClick={() => setGifPickerOpen(true)}\n          >\n            <Image />\n          </IconButton>\n          <TextField\n            fullWidth\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type a message...\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          <IconButton type=\"submit\" color=\"primary\">\n            <Send />\n          </IconButton>\n        </Box>\n      </Paper>\n\n      <GifPicker \n        open={gifPickerOpen}\n        onClose={() => setGifPickerOpen(false)}\n        onSelect={handleGifSelect}\n      />\n    </Container>\n  );\n}\n\nexport default Treehouse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}