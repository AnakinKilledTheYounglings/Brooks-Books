{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Container,Typography,Box,Paper,TextField,MenuItem,Button}from'@mui/material';import BookGraph from'../components/BookGraph';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function BookExplorer(){const[graphData,setGraphData]=useState({nodes:[],links:[]});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedFilter,setSelectedFilter]=useState(null);const[filterValue,setFilterValue]=useState('');const[filterOptions,setFilterOptions]=useState([]);const navigate=useNavigate();const fetchGraphData=useCallback(async()=>{try{setLoading(true);setError(null);let url='http://localhost:3001/api/recommendations/graph';// Add filter parameters if they exist\nif(selectedFilter){url+=`?nodeType=${selectedFilter}`;if(filterValue){url+=`&value=${encodeURIComponent(filterValue)}`;}}const response=await fetch(url);if(!response.ok){throw new Error('Failed to fetch graph data');}const data=await response.json();if(!data.nodes||!data.links){console.error('Invalid graph data structure:',data);setError('Invalid graph data structure received');return;}// Filter out any invalid links\nconst validNodeIds=new Set(data.nodes.map(node=>node.id));const validLinks=data.links.filter(link=>validNodeIds.has(link.source)&&validNodeIds.has(link.target));setGraphData({nodes:data.nodes,links:validLinks});// Update filter options based on node type\nif(selectedFilter){const options=[...new Set(data.nodes.filter(node=>node.type===selectedFilter).map(node=>node.title||node.name))];setFilterOptions(options);}}catch(err){console.error('Error fetching graph data:',err);setError(err.message);}finally{setLoading(false);}},[selectedFilter,filterValue]);// Add dependencies here\nuseEffect(()=>{fetchGraphData();},[fetchGraphData]);// Update dependency array\nconst handleFilterSelect=nodeType=>{setSelectedFilter(nodeType);setFilterValue('');// Clear the value filter when changing types\n};const handleNodeClick=node=>{if(node.type==='Book'){var _node$properties;// Make sure we're using the correct property for the book ID\nconst bookId=((_node$properties=node.properties)===null||_node$properties===void 0?void 0:_node$properties.id)||node.id;navigate(`/books/${bookId}`);}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",sx:{mt:4,height:'90vh'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Book Explorer\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3,display:'flex',gap:2},children:[selectedFilter&&filterOptions.length>0&&/*#__PURE__*/_jsx(TextField,{select:true,label:`Select ${selectedFilter}`,value:filterValue,onChange:e=>setFilterValue(e.target.value),sx:{minWidth:200},children:filterOptions.map(option=>/*#__PURE__*/_jsx(MenuItem,{value:option,children:option},option))}),selectedFilter&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>{setSelectedFilter(null);setFilterValue('');},children:\"Clear Filters\"})]}),/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{height:'calc(100% - 100px)',overflow:'hidden'},children:/*#__PURE__*/_jsx(BookGraph,{graphData:graphData,onNodeClick:handleNodeClick,selectedFilter:selectedFilter,onFilterSelect:handleFilterSelect})}),loading&&/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)'},children:/*#__PURE__*/_jsx(Typography,{children:\"Loading book network...\"})}),error&&/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:/*#__PURE__*/_jsxs(Typography,{color:\"error\",children:[\"Error: \",error]})})]});}export default BookExplorer;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Typography","Box","Paper","TextField","MenuItem","Button","BookGraph","useNavigate","jsx","_jsx","jsxs","_jsxs","BookExplorer","graphData","setGraphData","nodes","links","loading","setLoading","error","setError","selectedFilter","setSelectedFilter","filterValue","setFilterValue","filterOptions","setFilterOptions","navigate","fetchGraphData","url","encodeURIComponent","response","fetch","ok","Error","data","json","console","validNodeIds","Set","map","node","id","validLinks","filter","link","has","source","target","options","type","title","name","err","message","handleFilterSelect","nodeType","handleNodeClick","_node$properties","bookId","properties","maxWidth","sx","mt","height","children","variant","gutterBottom","mb","display","gap","length","select","label","value","onChange","e","minWidth","option","onClick","elevation","overflow","onNodeClick","onFilterSelect","position","top","left","transform","color"],"sources":["/Users/BrooksCole/Documents/reading-community/frontend/src/pages/BookExplorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper,\n  TextField,\n  MenuItem,\n  Button\n} from '@mui/material';\nimport BookGraph from '../components/BookGraph';\nimport { useNavigate } from 'react-router-dom';\n\nfunction BookExplorer() {\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedFilter, setSelectedFilter] = useState(null);\n  const [filterValue, setFilterValue] = useState('');\n  const [filterOptions, setFilterOptions] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchGraphData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      let url = 'http://localhost:3001/api/recommendations/graph';\n      \n      // Add filter parameters if they exist\n      if (selectedFilter) {\n        url += `?nodeType=${selectedFilter}`;\n        if (filterValue) {\n          url += `&value=${encodeURIComponent(filterValue)}`;\n        }\n      }\n\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch graph data');\n      }\n      const data = await response.json();\n\n      if (!data.nodes || !data.links) {\n        console.error('Invalid graph data structure:', data);\n        setError('Invalid graph data structure received');\n        return;\n      }\n\n      // Filter out any invalid links\n      const validNodeIds = new Set(data.nodes.map(node => node.id));\n      const validLinks = data.links.filter(link => \n        validNodeIds.has(link.source) && validNodeIds.has(link.target)\n      );\n\n      setGraphData({\n        nodes: data.nodes,\n        links: validLinks\n      });\n\n      // Update filter options based on node type\n      if (selectedFilter) {\n        const options = [...new Set(data.nodes\n          .filter(node => node.type === selectedFilter)\n          .map(node => node.title || node.name)\n        )];\n        setFilterOptions(options);\n      }\n    } catch (err) {\n      console.error('Error fetching graph data:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedFilter, filterValue]); // Add dependencies here\n\n  useEffect(() => {\n    fetchGraphData();\n  }, [fetchGraphData]); // Update dependency array\n\n  const handleFilterSelect = (nodeType) => {\n    setSelectedFilter(nodeType);\n    setFilterValue('');  // Clear the value filter when changing types\n  };\n\n  const handleNodeClick = (node) => {\n    if (node.type === 'Book') {\n      // Make sure we're using the correct property for the book ID\n      const bookId = node.properties?.id || node.id;\n      navigate(`/books/${bookId}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, height: '90vh' }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Book Explorer\n      </Typography>\n      \n      {/* Filter Controls */}\n      <Box sx={{ mb: 3, display: 'flex', gap: 2 }}>\n        {selectedFilter && filterOptions.length > 0 && (\n          <TextField\n            select\n            label={`Select ${selectedFilter}`}\n            value={filterValue}\n            onChange={(e) => setFilterValue(e.target.value)}\n            sx={{ minWidth: 200 }}\n          >\n            {filterOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        )}\n        {selectedFilter && (\n          <Button \n            variant=\"outlined\" \n            onClick={() => {\n              setSelectedFilter(null);\n              setFilterValue('');\n            }}\n          >\n            Clear Filters\n          </Button>\n        )}\n      </Box>\n\n      <Paper elevation={3} sx={{ height: 'calc(100% - 100px)', overflow: 'hidden' }}>\n        <BookGraph \n          graphData={graphData}\n          onNodeClick={handleNodeClick}\n          selectedFilter={selectedFilter}\n          onFilterSelect={handleFilterSelect}\n        />\n      </Paper>\n\n      {loading && (\n        <Box sx={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\n          <Typography>Loading book network...</Typography>\n        </Box>\n      )}\n\n      {error && (\n        <Box sx={{ mt: 2 }}>\n          <Typography color=\"error\">Error: {error}</Typography>\n        </Box>\n      )}\n    </Container>\n  );\n}\n\nexport default BookExplorer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}